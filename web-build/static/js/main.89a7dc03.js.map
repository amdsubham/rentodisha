{"version":3,"file":"static/js/main.89a7dc03.js","mappings":"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","sources":["firebase/firebase.js","hooks/useAuth.js","services/config.js","context/UserContext.js","components/TextAnimator.js","screens/Authentication.js","utils/asyncStorage.js","screens/OnboardingScreen.js","components/DownloadAppModal.js","screens/AdDetailsWithoutAuthentication.js","components/BannerCarousel.js","screens/HomeWithoutAuthentication.js","components/Loading.js","navigation/AuthStack.js","screens/Home.js","components/UpdateProfileModal.js","utils/getMatchedUserInfo.js","utils/generateIds.js","components/ChatRow.js","components/ChatList.js","screens/Chat.js","components/CustomHeader.js","api.js","screens/store/Cart.js","screens/store/CheckoutProcess.js","screens/store/OrderManagement.js","screens/store/SingleProductViewScreen.js","components/CartCountCard.js","screens/store/ProductCatalogScreen.js","navigation/StoreStackNavigator.js","screens/HomeTabNavigator.js","screens/PostAd.js","components/AdCard.js","screens/UserAds.js","screens/AdDetails.js","components/ReceiverMessage.js","components/SenderMessage.js","components/ChatHeader.js","components/CoinModal.js","screens/Message.js","utils/generalUtils.js","navigation/AppStack.js","components/UpdateAppModal.js","App.js","index.js","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from 'firebase/auth'\nimport { getFirestore } from 'firebase/firestore'\nimport { getStorage } from \"firebase/storage\";\nimport { initializeAuth, getReactNativePersistence } from 'firebase/auth';\n//import ReactNativeAsyncStorage from '@react-native-async-storage/async-storage';\nimport { getAnalytics } from \"firebase/analytics\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyApunLilBsWG8YvyLL6hNdpWW0oB_JGNl8\",\n    authDomain: \"odicult-c051c.firebaseapp.com\",\n    databaseURL: \"https://odicult-c051c-default-rtdb.firebaseio.com\",\n    projectId: \"odicult-c051c\",\n    storageBucket: \"odicult-c051c.appspot.com\",\n    messagingSenderId: \"264373040060\",\n    appId: \"1:264373040060:web:8d9c8e752ae975257331b9\",\n    measurementId: \"G-YJTXX7D32M\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app)\n\n// initializeAuth(app, {\n//     persistence: getReactNativePersistence(ReactNativeAsyncStorage)\n// });\nconst db = getFirestore()\nconst storage = getStorage();\nconst analytics = getAnalytics(app);\n//const messaging = getMessaging(app);\n\nexport { analytics, app, auth, db, storage, }\n","\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from 'firebase/auth';\nimport { ActivityIndicator } from 'react-native';\nimport { auth, db } from '../firebase/firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useUser } from '../context/UserContext';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nconst AuthContext = createContext({\n})\n\nconst AuthProvider = ({ children }) => {\n  const { setUserInfoToStore } = useUser();\n  const [user, setUser] = useState(null);\n  const [loadingLogin, setLoadingLogin] = useState(true);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (authUser) => {\n      if (authUser) {\n        try {\n          setUser(authUser)\n        } catch (error) {\n          console.error('Error fetching user details:', error);\n        }\n        setLoadingLogin(false);\n      } else {\n        setUser(null);\n        setLoadingLogin(false);\n      }\n    });\n\n    return () => {\n      // Unsubscribe from the auth state listener when the component unmounts\n      unsubscribe();\n    };\n  }, []);\n\n  const signInWithEmailPassword = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        const uid = userCredential.user.uid;\n        setUserInfoToStore({ firebaseId: uid })\n\n      })\n      .catch((error) => {\n        console.log(\"Firebase SignIn Error\", error)\n      });\n  };\n\n  const signUpWithEmailPassword = async (email, password) => {\n    await createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        const uid = userCredential.user.uid;\n        setUserInfoToStore({ firebaseId: uid })\n      })\n      .catch((error) => {\n        console.log(\"Firebase SignUp Error\", error)\n      });\n  };\n\n  const logOut = async () => {\n    setLoadingLogin(true);\n    await signOut(auth);\n    setLoadingLogin(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        signInWithEmailPassword,\n        signUpWithEmailPassword,\n        loadingLogin,\n        logOut,\n      }}\n    >\n      {loadingLogin ?\n        <LinearGradient colors={['#007DBC', '#005AAA']}\n          style={{\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: \"100%\",\n            width: \"100%\"\n          }}>\n          <ActivityIndicator size=\"large\" color=\"white\" />\n        </LinearGradient>\n        : children}\n    </AuthContext.Provider>\n  );\n};\nconst AuthOpen = () => {\n  return useContext(AuthContext);\n};\n\nexport { AuthOpen, AuthProvider };","const API_BASE_URL = \"https://odicult.fruitnasta.com/api\";\nexport const BASE_URL = \"https://odicult.fruitnasta.com\";\nexport const DOMAIN_URL = \"https://rentodisha.com\";\nexport default API_BASE_URL;\n","// UserContext.js\n\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthOpen } from '../hooks/useAuth';\nimport API_BASE_URL from '../services/config';\nimport { OneSignal } from 'react-native-onesignal';\n\nconst UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n    const [userToken, setUserToken] = useState(null);\n    const [userDetails, setUserDetails] = useState(null);\n    const [userInfo, setUserInfo] = useState(null);\n    useEffect(() => {\n        const loadUserToken = async () => {\n            try {\n                const storedToken = await AsyncStorage.getItem('userToken');\n                if (storedToken) {\n                    setUserToken(storedToken);\n                }\n            } catch (error) {\n                console.error('Error loading user token:', error);\n            }\n        };\n        loadUserToken();\n    }, []);\n\n    const fetchUserDetails = async () => {\n        const response = await fetch(`${API_BASE_URL}/user/getUserByPhoneNumber/${userToken.toString()}`);\n        if (response.ok) {\n            const userData = await response.json();\n            const { email, gender, image, name, phoneNumber, _id, tenantType, rentPosts, coins, subscriptionStartDate, location } = userData\n            setUserDetails(userData);\n            setUserInfoToStore({ email, gender, image, name, phone: phoneNumber, id: _id, tenantType, rentPosts, coins, subscriptionStartDate, location })\n        } else {\n            console.error('Error fetching user details:', response.statusText);\n        }\n    }\n    const login = async (token) => {\n        setUserToken(token);\n        OneSignal.login(token.toString())\n        OneSignal.User.addSms(token.toString())\n        try {\n            // Store the user token in async storage\n            await AsyncStorage.setItem('userToken', token);\n\n        } catch (error) {\n            console.error('Error storing user token:', error);\n        }\n    };\n\n    const logout = async () => {\n        setUserToken(null);\n        removeUserInfoFromStore()\n        try {\n            // Remove the user token from async storage\n            await AsyncStorage.removeItem('userToken');\n            OneSignal.logout()\n        } catch (error) {\n            console.error('Error removing user token:', error);\n        }\n    };\n\n\n    const removeUserInfoFromStore = async () => {\n        try {\n            // Remove the user info from async storage\n            await AsyncStorage.removeItem('userInfo');\n            // You can also reset the user info state if needed\n            setUserInfo({});\n        } catch (error) {\n            console.error('Error removing user info:', error);\n        }\n    };\n\n    const setUserInfoToStore = async ({\n        name,\n        id,\n        firebaseId,\n        phone,\n        gender,\n        rentPost,\n        email,\n        image,\n        tenantType,\n        coins,\n        subscriptionStartDate = 'NA',\n        location = {},\n        locationMarked,\n        messagingToken,\n    }) => {\n        try {\n            // Get the existing user info from async storage\n            const existingUserInfo = await AsyncStorage.getItem('userInfo');\n            let userInfo = existingUserInfo ? JSON.parse(existingUserInfo) : {};\n\n            // Check if firebaseId exists in userInfo\n            if (!userInfo.firebaseId || !userInfo.firebaseId.length) {\n                userInfo = {\n                    ...userInfo,\n                    firebaseId,\n                };\n            }\n\n            // Update the other user info fields\n            userInfo = {\n                ...userInfo,\n                name,\n                id,\n                phone,\n                gender,\n                rentPost,\n                email,\n                image,\n                tenantType,\n                coins,\n                subscriptionStartDate,\n                location,\n                locationMarked,\n                messagingToken\n            };\n\n            await AsyncStorage.setItem('userInfo', JSON.stringify(userInfo));\n            setUserInfo(userInfo);\n        } catch (error) {\n            console.error('Error storing/updating user info:', error);\n        }\n    };\n\n    return (\n        <UserContext.Provider value={{\n            userToken,\n            userId: userInfo?.id,\n            login,\n            logout,\n            userDetails,\n            fetchUserDetails,\n            setUserInfoToStore,\n            userInfo,\n        }}>\n            {children}\n        </UserContext.Provider>\n    );\n};\n\nexport const useUser = () => {\n    return useContext(UserContext);\n};\n","import * as React from 'react';\nimport { View, StyleSheet, Animated } from 'react-native';\n\nexport default class TextAnimator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textArr: props.content.trim().split(' '),\n            animatedValues: [],\n        };\n        this.state.textArr.forEach((_, i) => {\n            this.state.animatedValues[i] = new Animated.Value(0);\n        });\n    }\n\n    componentDidMount() {\n        this.animate();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.content !== this.props.content) {\n            this.setState({\n                textArr: this.props.content.trim().split(' '),\n                animatedValues: this.props.content.trim().split(' ').map(() => new Animated.Value(0)),\n            }, () => {\n                this.animate();\n            });\n        }\n    }\n\n    animate = (toValue = 1) => {\n        const animations = this.state.textArr.map((_, i) => {\n            return Animated.timing(this.state.animatedValues[i], {\n                toValue,\n                duration: this.props.duration,\n                useNativeDriver: true\n            });\n        });\n\n        Animated.stagger(\n            this.props.duration / 5,\n            toValue === 0 ? animations.reverse() : animations\n        ).start(() => {\n            setTimeout(() => this.animate(toValue === 0 ? 1 : 0), 1000);\n            if (this.props.onFinish) {\n                this.props.onFinish();\n            }\n        });\n    };\n\n    render() {\n        return (\n            <View style={[this.props.style, styles.textWrapper]}>\n                {this.state.textArr.map((word, index) => {\n                    return (\n                        <Animated.Text\n                            key={`${word}-${index}`}\n                            style={[\n                                this.props.textStyle,\n                                {\n                                    opacity: this.state.animatedValues[index],\n                                    transform: [\n                                        {\n                                            translateY: Animated.multiply(\n                                                this.state.animatedValues[index],\n                                                new Animated.Value(-5)\n                                            )\n                                        }\n                                    ],\n                                },\n                            ]}\n                        >\n                            {word}\n                            {`${index < this.state.textArr.length - 1 ? ' ' : ''}`}\n                        </Animated.Text>\n                    );\n                })}\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    textWrapper: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    }\n});\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {\n    StyleSheet,\n    View,\n    Text,\n    TouchableOpacity,\n    ActivityIndicator,\n    ScrollView,\n    Dimensions,\n    KeyboardAvoidingView,\n    Platform\n} from 'react-native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport PhoneNumberInput from 'react-native-phone-number-input';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport { AuthOpen } from '../hooks/useAuth';\nimport Lottie from 'lottie-react-native';\n// import LottieView from 'react-native-web-lottie';\n\nimport { CodeField, Cursor, useClearByFocusCell } from 'react-native-confirmation-code-field';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport TextAnimator from '../components/TextAnimator';\nimport { logEvent } from 'expo-firebase-analytics';\nimport { analytics } from '../firebase/firebase';\nimport { customEvent } from 'vexo-analytics';\nconst { width } = Dimensions.get('window');\nconst CELL_COUNT = 6;\nexport default function Authentication({ route, navigation }) {\n    const adId = route.params?.adIdm\n    const { signInWithEmailPassword, signUpWithEmailPassword } = AuthOpen();\n    const [formattedValue, setFormattedValue] = useState('');\n    const { login } = useUser();\n    const [isUserExists, setIsUserExists] = useState(false);\n    const [screen, setScreen] = useState(1);\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [otp, setOtp] = useState('');\n    const [assignedOtp, setAssignedOtp] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [isTextInputFocused, setIsTextInputFocused] = useState(false);\n    const [currentTextIndex, setCurrentTextIndex] = useState(0);\n    const animatedTexts = [\n        'No Broker in Between 🏠',\n        'Fast and Reliable 🔥',\n        'Your Dream House Awaits! 🏠'\n    ];\n    const [props, getCellOnLayoutHandler] = useClearByFocusCell({\n        value: otp,\n        setValue: setOtp,\n    });\n\n    useEffect(() => {\n        setIsLoading(true)\n        if (adId) {\n            setTimeout(() => {\n                navigation.navigate('AdDetailsWithoutAuthentication', { adId });\n            }, 100);\n        }\n        setIsLoading(false)\n    }, [adId]);\n\n\n    const handleAnimationComplete = () => {\n        if (currentTextIndex < animatedTexts.length - 1) {\n            setCurrentTextIndex(currentTextIndex + 1);\n        }\n    };\n\n    const renderMedia = () => {\n        if (Platform.OS === 'web') {\n            let LottieView;\n            LottieView = require('react-native-web-lottie').default;\n            return (\n                <LottieView\n                    source={require('../assets/animations/dreamHouse.json')}\n                    autoPlay\n                    loop\n                />\n            );\n        } else {\n            return (\n                <Lottie\n                    source={require('../assets/animations/dreamHouse.json')}\n                    autoPlay\n                    loop\n                />\n            );\n        }\n    };\n\n    const generateOtp = () => {\n        const otp =\n            (phoneNumber === '7008105210' || phoneNumber === '7777711111'\n                || phoneNumber === '7777722222' || phoneNumber === '7777733333'\n                || phoneNumber === '7777744444' || phoneNumber === '7777755555' || phoneNumber === '7777766666'\n            )\n                ? 121212\n                : Math.floor(100000 + Math.random() * 900000);\n\n        setAssignedOtp(otp);\n        return otp;\n    };\n\n    const fetchUserExistsStatus = async () => {\n        const checkPhoneResponse = await fetch(\n            `${API_BASE_URL}/user/check-phone/${phoneNumber}`\n        );\n        const checkPhoneData = await checkPhoneResponse.json();\n        setIsUserExists(checkPhoneData.exists);\n    };\n\n    const sendOTP = async () => {\n        try {\n            setIsLoading(true);\n\n            const postData = {\n                phoneNumber: formattedValue,\n                assignedOtp: generateOtp(),\n            };\n            const response = await axios.post(`${API_BASE_URL}/user/sendotp`, postData, {\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            });\n\n            const { data } = response;\n            // Check the response from your own server's endpoint\n            if (data.status === 'OK') {\n                fetchUserExistsStatus();\n                setScreen(2);\n            } else {\n                alert('Failed to send OTP. Please try again.');\n            }\n        } catch (error) {\n            // Handle errors\n            console.error('Error sending OTP:', error.response?.data || error.message);\n            alert('Error sending OTP. Please check your network connection.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const verifyOTP = () => {\n        try {\n            setIsLoading(true);\n            if (otp === assignedOtp.toString()) {\n                login(phoneNumber);\n                if (isUserExists) {\n                    signInWithEmailPassword(`${phoneNumber}@gmail.com`, phoneNumber);\n                } else {\n                    signUpWithEmailPassword(`${phoneNumber}@gmail.com`, phoneNumber);\n                }\n            } else {\n                // OTPs do not match, show an error alert\n                alert('Invalid OTP. Please try again.');\n            }\n        } catch (error) {\n            alert('Error verifying OTP. Please try again.');\n            console.log('error', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleTextInputFocus = () => {\n        setIsTextInputFocused(true);\n    };\n\n    const handleTextInputBlur = () => {\n        setIsTextInputFocused(false);\n    };\n\n    const renderScreen = () => {\n        switch (screen) {\n            case 1:\n                return (\n                    <LinearGradient\n                        colors={['#003366', '#006699', '#0099CC']}\n                        style={styles.gradient}\n                        start={{ x: 0, y: 0 }}\n                        end={{ x: 1, y: 1 }}\n                    >\n                        {(!isTextInputFocused) && (<View style={styles.lottie}>\n                            {renderMedia()}\n                            {Platform.OS === 'web' && (\n                                < TextAnimator\n                                    content={animatedTexts[currentTextIndex]}\n                                    textStyle={styles.textStyle}\n                                    duration={1500}\n                                    onFinish={handleAnimationComplete}\n                                />)}\n                        </View>)}\n                        <KeyboardAvoidingView\n                            behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n                            style={{ flex: 1 }}\n                            keyboardVerticalOffset={Platform.OS === 'ios' ? -100 : 0}\n                        >\n                            <ScrollView\n                                contentContainerStyle={styles.container}\n                                keyboardShouldPersistTaps=\"handled\"\n                            >\n                                <Text style={styles.header}>Enter Your Mobile Number</Text>\n                                <Text style={styles.subheader}>\n                                    We will send you a Confirmation Code\n                                </Text>\n\n                                <PhoneNumberInput\n                                    defaultCode=\"IN\"\n                                    value={phoneNumber}\n                                    onChangeText={(text) => {\n                                        logEvent(analytics, \"phone number changed\", text);\n                                        customEvent(\"phone number changed\", text)\n                                        setPhoneNumber(text);\n                                    }}\n                                    onChangeFormattedText={(text) => {\n                                        setFormattedValue(text);\n                                    }}\n                                    placeholder=\"Enter Phone Number\"\n                                    withDarkTheme\n                                    withShadow\n                                    onFocus={handleTextInputFocus}\n                                    onBlur={handleTextInputBlur}\n                                />\n\n                                {isLoading ? (\n                                    <ActivityIndicator size=\"small\" color=\"#E5E5E5\" />\n                                ) : (\n                                    <TouchableOpacity\n                                        style={styles.button}\n                                        onPress={sendOTP}\n                                    >\n                                        <Text style={styles.buttonText}>VERIFY</Text>\n                                    </TouchableOpacity>\n                                )}\n                            </ScrollView>\n                        </KeyboardAvoidingView>\n                    </LinearGradient>\n                );\n            case 2:\n\n                return (\n                    <LinearGradient\n                        colors={['#003366', '#006699', '#0099CC']}\n                        style={styles.gradient}\n                        start={{ x: 0, y: 0 }}\n                        end={{ x: 1, y: 1 }}\n                    >\n                        <View style={styles.iconContainer}>\n                            <TouchableOpacity onPress={() => setScreen(1)}>\n                                <Ionicons name=\"arrow-back\" size={30} color=\"#FFFFFF\" />\n                            </TouchableOpacity>\n                        </View>\n                        <ScrollView\n                            contentContainerStyle={styles.container}\n                            keyboardShouldPersistTaps=\"handled\"\n                        >\n                            <Text style={styles.header}>Enter Verification Code</Text>\n                            <CodeField\n                                {...props}\n                                caretHidden={false}\n                                value={otp}\n                                onChangeText={setOtp}\n                                cellCount={CELL_COUNT}\n                                rootStyle={styles.codeFieldRoot}\n                                keyboardType=\"number-pad\"\n                                textContentType=\"oneTimeCode\"\n                                renderCell={({ index, symbol, isFocused }) => (\n                                    <View\n                                        onLayout={getCellOnLayoutHandler(index)}\n                                        key={index}\n                                        style={[styles.cell, isFocused && styles.focusCell]}\n                                    >\n                                        <Text style={styles.cellText}>\n                                            {symbol || (isFocused ? <Cursor /> : null)}\n                                        </Text>\n                                    </View>\n                                )}\n                            />\n                            <View style={styles.buttonContainer}>\n                                {isLoading ? (\n                                    <ActivityIndicator size=\"small\" color=\"#FFFFFF\" />\n                                ) : (\n                                    <>\n                                        <TouchableOpacity\n                                            style={styles.button}\n                                            onPress={verifyOTP}\n                                        >\n                                            <Text style={styles.buttonText}>VERIFY OTP</Text>\n                                        </TouchableOpacity>\n                                        <TouchableOpacity\n                                            onPress={sendOTP}\n                                        >\n                                            <Text style={styles.resendText}>RESEND OTP</Text>\n                                        </TouchableOpacity>\n                                    </>\n                                )}\n                            </View>\n                        </ScrollView>\n                    </LinearGradient>\n                );\n\n\n\n            default:\n                return <View />;\n        }\n    };\n\n    return renderScreen();\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        // backgroundColor: '#E5E5E5',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    header: {\n        fontSize: 24,\n        color: '#E5E5E5',\n        fontWeight: 'bold',\n        marginBottom: 10,\n        fontFamily: 'open-sans-regular'\n    },\n    subheader: {\n        fontSize: 16,\n        color: '#E5E5E5',\n        marginBottom: 30,\n        fontFamily: 'open-sans-regular'\n    },\n    button: {\n        top: 15,\n        backgroundColor: '#FFFFFF',\n        paddingVertical: 15,\n        paddingHorizontal: 30,\n        borderRadius: 5,\n\n    },\n    resendButton: {\n        backgroundColor: '#E5E5E5',\n        paddingVertical: 15,\n        paddingHorizontal: 30,\n        borderRadius: 5,\n        marginTop: 10,\n    },\n    backButton: {\n        backgroundColor: '#E5E5E5',\n        paddingVertical: 15,\n        paddingHorizontal: 30,\n        borderRadius: 5,\n        marginBottom: 10,\n    },\n    buttonText: {\n        color: '#007DBC',\n        fontFamily: 'open-sans-bold'\n    },\n    buttonContainer: {\n        marginTop: 20,\n        alignItems: 'center',\n    },\n    countryPickerContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n        width: 110,\n        borderColor: '#007DBC',\n        borderWidth: 1,\n        borderRadius: 5,\n    },\n    countryPicker: {\n        flex: 1,\n        height: 40,\n        color: '#007DBC',\n    },\n    lottie: {\n        width: width,\n        height: width,\n        alignItems: 'center',\n        justifyContent: 'center',\n        top: 50,\n    },\n    image: {\n        width: 250,\n        height: 250,\n        resizeMode: 'contain', // or 'cover' depending on your requirement\n    },\n    codeFieldRoot: {\n        marginTop: 20,\n        width: 280,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n    cell: {\n        width: 30,\n        height: 45,\n        lineHeight: 38,\n        fontSize: 24,\n        borderWidth: 2,\n        borderColor: '#FFFFFF',\n        textAlign: 'center',\n        marginRight: 8,\n    },\n    focusCell: {\n        borderColor: '#000',\n    },\n    cellText: {\n        color: '#FFFFFF',\n        fontSize: 36,\n        textAlign: 'center',\n    },\n    gradient: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    iconContainer: {\n        position: 'absolute',\n        top: 50,  // Adjust according to your need\n        left: 20,  // Adjust according to your need\n        zIndex: 10,\n    },\n    resendText: {\n        color: '#FFFFFF',\n        textAlign: 'center',\n        marginTop: 15,  // Or any other value that suits your design\n        fontSize: 16,   // Or any other value that suits your design\n        top: 20\n    },\n    textStyle: {\n        fontSize: 20,\n        fontFamily: 'open-sans-regular',\n        marginBottom: 14,\n        color: '#FFFFFF',\n        marginTop: 20, // Added this line to create a gap of 50\n    },\n});\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport const setItem = async (key, value) => {\n  try {\n    await AsyncStorage.setItem(key, value);\n  } catch (error) {\n    console.log('Error storing value: ', error);\n  }\n};\n\n\nexport const getItem = async (key) => {\n  try {\n    const value = await AsyncStorage.getItem(key);\n    return value;\n  } catch (error) {\n    console.log('Error retrieving value: ', error);\n  }\n};\n\nexport const removeItem = async (key) => {\n  try {\n    await AsyncStorage.removeItem(key);\n  } catch (error) {\n    console.log('Error deleting value: ', error);\n  }\n}","import { View, Text, StyleSheet, Dimensions, TouchableOpacity } from 'react-native'\nimport React from 'react'\nimport Onboarding from 'react-native-onboarding-swiper';\nimport Lottie from 'lottie-react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { setItem } from '../utils/asyncStorage';\n\nconst { width, height } = Dimensions.get('window');\n\nexport default function OnboardingScreen() {\n    const navigation = useNavigation();\n\n    const handleDone = () => {\n        navigation.navigate('HomeTabNavigator');\n        setItem('onboarded', '1');\n    }\n\n    const doneButton = ({ ...props }) => {\n        return (\n            <TouchableOpacity style={styles.doneButton} {...props}>\n                <Text style={{ color: 'white' }}>Done</Text>\n            </TouchableOpacity>\n        )\n\n    }\n    return (\n        <View style={styles.container}>\n            <Onboarding\n                onDone={handleDone}\n                onSkip={handleDone}\n                // bottomBarHighlight={false}\n                DoneButtonComponent={doneButton}\n                containerStyles={{ paddingHorizontal: 15 }}\n                pages={[\n                    {\n                        backgroundColor: '#003366',\n\n                        image: (\n                            <View style={styles.lottie}>\n                                <Lottie source={require('../assets/animations/nearbyRooms.json')} autoPlay loop />\n                            </View>\n                        ),\n                        title: 'Nearby Rooms',\n                        subtitle: 'Discover rooms close to your current location easily.',\n                    },\n                    {\n                        backgroundColor: '#006699',\n                        image: (\n                            <View style={styles.lottie}>\n                                <Lottie source={require('../assets/animations/directMessageFlatmates.json')} autoPlay loop />\n                            </View>\n                        ),\n                        title: 'Direct Message Flatmate',\n                        subtitle: 'Contact flatmates directly, no broker in between.',\n                    },\n                    {\n                        backgroundColor: '#0099CC',\n                        image: (\n                            <View style={styles.lottie}>\n                                <Lottie source={require('../assets/animations/verifiedListings.json')} autoPlay loop />\n                            </View>\n                        ),\n                        title: 'Verified Listings',\n                        subtitle: '100% verified rooms with 1000+ users trusted.',\n                    },\n                ]}\n            />\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: 'white'\n    },\n    lottie: {\n        width: width * 0.9,\n        height: width\n    },\n    doneButton: {\n        padding: 20,\n    }\n})","import React from 'react';\nimport { View, Text, Modal, StyleSheet, TouchableOpacity, Linking } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nconst DownloadAppModal = ({ visible, onClose }) => {\n    return (\n        <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={visible}\n            onRequestClose={onClose}>\n            <View style={styles.centeredView}>\n                <View style={styles.modalView}>\n                    <TouchableOpacity style={styles.closeButton} onPress={onClose}>\n                        <Ionicons name=\"close\" size={24} color=\"black\" />\n                    </TouchableOpacity>\n                    <Text style={styles.modalText}>Enhance Your Experience</Text>\n                    <View style={styles.benefitItem}>\n                        <Ionicons name=\"chatbubbles-outline\" size={24} style={styles.icon} />\n                        <Text style={styles.benefitText}>Instant Messaging Notifications</Text>\n                    </View>\n                    <View style={styles.benefitItem}>\n                        <Ionicons name=\"pin-outline\" size={24} style={styles.icon} />\n                        <Text style={styles.benefitText}>Location-Based Alerts for New Listings</Text>\n                    </View>\n                    <View style={styles.benefitItem}>\n                        <Ionicons name=\"megaphone-outline\" size={24} style={styles.icon} />\n                        <Text style={styles.benefitText}>Easily Post Ads and Connect with Flatmates</Text>\n                    </View>\n                    <TouchableOpacity\n                        style={styles.downloadButton}\n                        onPress={() => Linking.openURL('http://yourappdownloadlink.com')}>\n                        <Text style={styles.buttonText}>Download Now</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </Modal>\n    );\n};\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)', // Semi-transparent background\n    },\n    closeButton: {\n        alignSelf: 'flex-end',\n        marginBottom: -30,\n        marginRight: -30,\n        zIndex: 1, // Ensure the button is above other elements\n    },\n    description: {\n        marginBottom: 20,\n        textAlign: 'center',\n        color: 'gray', // Subtle color for description\n    },\n    downloadButton: {\n        backgroundColor: '#007DBC', // Use a color that matches your app theme\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2,\n    },\n    buttonText: {\n        color: 'white',\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: 'white',\n        borderRadius: 20,\n        padding: 35,\n        alignItems: 'center',\n        shadowColor: '#000',\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5,\n        width: '80%', // Added to control the modal width\n    },\n    modalText: {\n        marginBottom: 20,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 20,\n        color: '#007DBC', // Adjust to match app theme\n    },\n    icon: {\n        marginBottom: 5,\n        color: '#007DBC', // Adjust to match app theme\n    },\n    benefitItem: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n    },\n    benefitText: {\n        marginLeft: 10,\n        fontSize: 16,\n        color: 'gray', // Subtle color for description\n    },\n});\n\n\nexport default DownloadAppModal;\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, Image, TouchableOpacity, ScrollView, SafeAreaView, Share, Platform, Clipboard, Alert, ActivityIndicator, } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { db } from '../firebase/firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useUser } from '../context/UserContext';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport API_BASE_URL, { DOMAIN_URL } from '../services/config';\nimport * as FileSystem from 'expo-file-system';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons'; // Import for larger icon\nimport DownloadAppModal from '../components/DownloadAppModal';\n\nconst amenitiesMapping = [\n    { key: 'isFurnished', label: 'Furnished', icon: 'bed-outline' },\n    { key: 'hasAttachedBathroom', label: 'Attached Bathroom', icon: 'water-outline' },\n    { key: 'isMaleOnly', label: 'Male Only', icon: 'male-outline' },\n    { key: 'isBachelorsAllowed', label: 'Bachelors Allowed', icon: 'people-outline' },\n    // Add other attributes and their corresponding labels and icons here...\n];\n\nconst AdDetailsWithoutAuthentication = ({ route }) => {\n    const [showDownloadAppModal, setShowDownloadAppModal] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const { userInfo } = useUser();\n    const { adId } = route.params;\n    const navigation = useNavigation();\n    const [ad, setAd] = useState();\n    const [firebaseId, setFirebaseId] = useState(ad?.firebaseId);\n    const [flatmatesData, setFlatmatesData] = useState(ad?.flatmates);\n    const [userDetails, setUserDetails] = useState(null);\n    const [showDirectMessageButton, setShowDirectMessageButton] = useState(false);\n    const isPostedByCurrentUser = firebaseId === userInfo?.firebaseId;\n    const [isAdAvailable, setIsAdAvailable] = useState(true);\n    useEffect(() => {\n        const fetchPostDetails = async () => {\n            setIsLoading(true);\n\n            try {\n                const response = await fetch(`${API_BASE_URL}/rentpost/getPostsById/${adId}`);\n                if (response.ok) {\n                    const data = await response.json();\n                    setAd(data)\n                    setFirebaseId(data?.firebaseId)\n                    setFlatmatesData(data?.flatmates || [])\n                    setIsAdAvailable(true);\n                } else {\n                    setIsAdAvailable(false);\n                    console.error('Failed to fetch user ads');\n                }\n            } catch (error) {\n                console.error('Error fetching user ads:', error);\n            } finally {\n                setIsLoading(false); // Stop loading\n            }\n        };\n\n        if (adId) {\n            fetchPostDetails();\n        }\n    }, [adId]);\n\n\n    const onShare = async () => {\n        const shareMessage = `${ad?.adTitle} At Price ₹${ad?.price}\\n\\n Check this out!! ✨🏠🌟\\n\\n` + `${DOMAIN_URL}/ads/${ad?._id}`;\n\n        if (Platform.OS === 'web') {\n            // Attempt to use the Web Share API if available\n            if (navigator.share) {\n                navigator.share({\n                    title: ad?.adTitle,\n                    text: shareMessage,\n                    // url: ad?.images[0],\n                }).catch(error => console.log('Error sharing', error));\n            } else {\n                Clipboard.setString(shareMessage);\n                Alert.alert('Link copied to clipboard');\n            }\n        } else {\n            // Mobile sharing\n            try {\n                await Share.share({\n                    message: shareMessage,\n                    //url: ad?.images[0], // Include this only if it's a local file\n                });\n            } catch (error) {\n                console.error(error.message);\n            }\n        }\n    };\n\n    useEffect(() => {\n        const fetchUserDetails = async () => {\n            try {\n                const userDoc = await getDoc(doc(db, 'user_profiles', firebaseId));\n\n                if (userDoc.exists()) {\n                    setUserDetails(userDoc.data());\n                    setShowDirectMessageButton(true);\n                }\n            } catch (error) {\n                console.error('Error fetching user details:', error);\n            }\n        };\n\n        if (firebaseId) {\n            fetchUserDetails();\n        }\n    }, [firebaseId]);\n\n\n    const handleDirectMessage = () => {\n        if (Platform.OS === \"web\") {\n            setShowDownloadAppModal(true)\n        }\n        else {\n            navigation.navigate('HomeTabNavigator');\n        }\n    };\n\n    const handleBackButton = () => {\n        navigation.navigate('HomeWithoutAuthentication');\n    };\n\n    if (isLoading) {\n        return (\n            <View style={styles.loaderContainer}>\n                <ActivityIndicator size=\"large\" color=\"#FFFFFF\" />\n            </View>\n        )\n    }\n    if (!isAdAvailable) {\n        return (\n            <LinearGradient colors={['#007DBC', '#005AAA']} style={styles.soldContainer}>\n                <MaterialIcons name=\"error-outline\" size={60} color=\"white\" />\n                <Text style={styles.soldMessage}>This ad has been sold</Text>\n                <TouchableOpacity onPress={handleBackButton} style={styles.seeMoreButtonContainer}>\n\n                    <Text style={styles.seeMoreButtonText}> See More</Text>\n                    <Ionicons name=\"arrow-forward\" size={24} color=\"white\" />\n                </TouchableOpacity>\n            </LinearGradient>\n        );\n    }\n    return (\n        <SafeAreaView style={styles.flexContainer}>\n            <View style={{ height: \"90%\", backgroundColor: '#f8f9fa', }}>\n                <LinearGradient colors={['#007DBC', '#005AAA']} style={styles.header}>\n                    <TouchableOpacity onPress={handleBackButton} style={styles.seeMoreButtonContainer}>\n                        <Ionicons name=\"arrow-back\" size={24} color=\"white\" />\n                        <Text style={styles.seeMoreButtonText}> See More</Text>\n                    </TouchableOpacity>\n                </LinearGradient>\n                <ScrollView contentContainerStyle={styles.scrollViewContent}>\n                    <Image source={{ uri: ad?.images[0] }} style={styles.villaImage} />\n                    <TouchableOpacity style={styles.shareIcon} onPress={onShare}>\n                        <Ionicons name=\"share-social\" size={24} color=\"white\" />\n                    </TouchableOpacity>\n                    <Text style={styles.villaName}>{ad?.adTitle}</Text>\n                    <Text style={styles.location}>{ad?.location}</Text>\n                    <View style={styles.offerContainer}>\n                        <FontAwesome name=\"check\" size={24} color=\"white\" style={styles.trustIcon} />\n\n                        <Text style={styles.offerText}>Verified User</Text>\n                    </View>\n                    <Text style={styles.description}>{ad?.adDescription}</Text>\n                    {ad &&\n                        (<View style={styles.amenitiesContainer}>\n                            <View style={styles.amenitiesList}>\n                                {amenitiesMapping.map(amenity => {\n                                    if (ad[amenity.key]) {\n                                        return (\n                                            <View style={styles.amenityItem} key={amenity.key}>\n                                                <Ionicons name={amenity.icon} size={24} color=\"white\" />\n                                                <Text style={styles.amenityLabel}>{amenity.label}</Text>\n                                            </View>\n                                        );\n                                    }\n                                    return null;\n                                })}\n                            </View>\n                        </View>)}\n                    {\n                        (ad && flatmatesData.length > 0) &&\n                        (<View style={styles.flatmatesSection}>\n                            <Text style={styles.title}>Flatmates</Text>\n                            <View style={styles.flatmatesGrid}>\n                                {flatmatesData.map((flatmate, index) => (\n                                    <View key={index} style={styles.flatmateCard}>\n                                        <Image source={{ uri: flatmate.image }} style={styles.flatmateImage} />\n                                        <Text style={styles.flatmateName}>{flatmate.name}</Text>\n                                        <Text style={styles.flatmateOccupation}>{flatmate.occupation}</Text>\n                                    </View>\n                                ))}\n                            </View>\n                        </View>)\n                    }\n                </ScrollView>\n            </View>\n            {isPostedByCurrentUser ? (\n                // Display a message indicating that the advertisement is posted by the current user\n                <Text style={styles.postedByCurrentUserMessage}>\n                    This advertisement is posted by you.\n                </Text>\n            ) : showDirectMessageButton && (\n                <View style={styles.footer}>\n                    <View style={styles.priceContainer}>\n                        <Text style={styles.discountedPrice}>₹{ad?.price}/month</Text>\n                    </View>\n                    <TouchableOpacity onPress={handleDirectMessage} style={styles.bookNowButton}>\n                        <Text style={styles.bookNowButtonText}>\n                            Direct Message\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n\n            )}\n            <DownloadAppModal\n                visible={showDownloadAppModal}\n                onClose={() => setShowDownloadAppModal(false)}\n            />\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    flexContainer: {\n        flex: 1,\n        backgroundColor: '#f8f9fa',\n        fontFamily: 'open-sans-regular'\n    },\n    container: {\n        flex: 1,\n    },\n    loaderContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#005AAA', // Adjust the color and opacity to match your gradient\n    },\n    footer: {\n        borderTopWidth: 1,\n        borderColor: '#eaecef',\n        backgroundColor: '#fff',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        zIndex: 10,\n        padding: 16,\n        flexDirection: 'row',\n        ...(Platform.OS === 'web' ? {\n            position: 'fixed',\n            bottom: 0,\n            left: 0,\n            right: 0,\n        } : {\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            right: 0,\n        }),\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        padding: 16,\n        alignItems: 'center',\n        borderBottomWidth: 1,\n        borderBottomColor: '#eaecef',\n    },\n    icon: {\n        width: 24,\n        height: 24,\n    },\n    backButton: {\n        fontSize: 18,\n        color: '#007bff',\n    },\n    villaImage: {\n        width: '100%',\n        height: 300,\n        resizeMode: 'cover',\n    },\n    villaName: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginVertical: 8,\n        marginHorizontal: 16,\n        color: '#212529',\n        fontFamily: 'open-sans-bold'\n    },\n    location: {\n        fontSize: 16,\n        color: '#6c757d',\n        marginBottom: 8,\n        marginLeft: 16,\n        fontFamily: 'open-sans-regular'\n    },\n    offerContainer: {\n        flexDirection: 'row',\n        backgroundColor: '#007DBC',\n        padding: 12,\n        marginHorizontal: 16,\n        marginVertical: 8,\n        borderRadius: 4,\n    },\n    offerText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontFamily: 'open-sans-regular'\n    },\n    description: {\n        marginHorizontal: 16,\n        marginVertical: 8,\n        fontSize: 16,\n        color: '#212529',\n        fontFamily: 'open-sans-regular'\n    },\n    hostImage: {\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        margin: 16,\n        borderWidth: 2,\n        borderColor: '#eaecef',\n    },\n    hostName: {\n        fontSize: 18,\n        fontWeight: '500',\n        marginLeft: 16,\n        color: '#212529',\n    },\n    price: {\n        fontSize: 28,\n        fontWeight: 'bold',\n        marginHorizontal: 16,\n        marginVertical: 8,\n        color: '#28a745',\n    },\n    directMessageButton: {\n        backgroundColor: '#28a745',\n        padding: 12,\n        marginHorizontal: 16,\n        marginVertical: 8,\n        borderRadius: 4,\n        alignItems: 'center',\n    },\n    directMessageButtonText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontSize: 18,\n    },\n    postedByCurrentUserMessage: {\n        color: '#dc3545',\n        textAlign: 'center',\n        marginBottom: 10,\n        fontSize: 16,\n    },\n    amenitiesContainer: {\n        padding: 16,\n        borderBottomWidth: 1,\n        borderBottomColor: '#eaecef',\n        backgroundColor: '#fff',\n    },\n    amenitiesTitle: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#212529',\n        marginBottom: 8,\n        fontFamily: 'open-sans-bold'\n    },\n    amenitiesList: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'flex-start',\n    },\n    amenityItem: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        backgroundColor: '#007DBC', // This sets the background color to a blue shade\n        borderRadius: 16,\n        padding: 8,\n        marginRight: 8,\n        marginBottom: 8,\n    },\n    amenityLabel: {\n        marginLeft: 8,\n        fontSize: 14,\n        color: '#FFFFFF', // This sets the text color to white\n        fontFamily: 'open-sans-regular'\n    },\n    priceContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    originalPrice: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        textDecorationLine: 'line-through',\n        marginRight: 8,\n    },\n    discountedPrice: {\n        fontSize: 22,\n        fontWeight: 'bold',\n    },\n    bookNowButton: {\n        backgroundColor: '#28a745',\n        padding: 12,\n        borderRadius: 4,\n        alignItems: 'center',\n    },\n    bookNowButtonText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontSize: 18,\n    },\n    flatmateRow: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    flatmatesSection: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#e9ecef', // Changed background color for better visibility\n    },\n    title: {\n        fontSize: 24,\n        marginBottom: 20,\n        fontFamily: 'open-sans-bold'\n    },\n    flatmatesGrid: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between', // To maintain equal spacing between two cards in a row\n    },\n    flatmateCard: {\n        width: '48%', // Slightly less than half to account for any potential margins or paddings\n        marginBottom: 15,\n        padding: 10, // Added some padding\n        backgroundColor: '#fff', // White background for the card\n        borderRadius: 8, // Rounded corners\n        alignItems: 'center', // Center items horizontally\n    },\n    flatmateImage: {\n        width: 50,\n        height: 50,\n        borderRadius: 25,\n        marginBottom: 10, // Margin below the image\n    },\n    flatmateName: {\n        fontSize: 18,\n        fontWeight: '600',\n        fontFamily: 'open-sans-regular',\n        textAlign: 'center', // Center the text\n    },\n    flatmateOccupation: {\n        fontSize: 14,\n        color: 'gray',\n        fontFamily: 'open-sans-light',\n        textAlign: 'center', // Center the text\n    },\n    trustIcon: {\n        marginRight: 5,  // Some space between the icon and text\n        bottom: 2,\n    },\n    scrollViewContent: {\n        paddingBottom: 20, // Add some bottom padding to accommodate for any absolutely positioned elements\n    },\n    seeMoreButtonContainer: {\n        flexDirection: 'row', // Align items in a row\n        alignItems: 'center', // Center items vertically\n        padding: 10,\n        borderRadius: 5,\n        // Add any additional styling as needed\n    },\n    seeMoreButtonText: {\n        color: '#FFFFFF', // White text color\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginLeft: 5, // Space between icon and text\n        // Add more text styling as needed\n    },\n    shareIcon: {\n        position: 'absolute',\n        right: 10,\n        top: 10,\n        backgroundColor: 'rgba(0, 0, 0, 0.6)',\n        padding: 8,\n        borderRadius: 25,\n        width: 40,\n        zIndex: 1, // Add this line\n    },\n    soldContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    soldMessage: {\n        fontSize: 24,\n        color: 'white',\n        marginTop: 20,\n        textAlign: 'center',\n        fontFamily: 'open-sans-bold'\n    },\n\n});\n\n\n\nexport default AdDetailsWithoutAuthentication;\n","import React from 'react';\nimport { Image, Dimensions, StyleSheet } from 'react-native';\nimport Carousel from 'react-native-banner-carousel';\nimport { analytics } from '../firebase/firebase';\n\nconst BannerWidth = Dimensions.get('window').width;\nconst BannerHeight = 200; // Adjust the height as needed\n\nconst BannerCarousel = ({ data }) => {\n    const renderPage = (image, index) => (\n        <Image key={index} source={{ uri: image }} style={styles.bannerImage} />\n    );\n\n    return (\n        <Carousel\n            autoplay\n            autoplayTimeout={5000}\n            loop\n            index={0}\n            pageSize={BannerWidth}\n        >\n            {data.map((image, index) => renderPage(image, index))}\n        </Carousel>\n    );\n};\n\nconst styles = StyleSheet.create({\n    bannerImage: {\n        width: BannerWidth,\n        height: BannerHeight,\n        // Add any additional styling for your images here\n    },\n    // You can add additional styles if needed\n});\n\nexport default BannerCarousel;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { View, Text, FlatList, TouchableOpacity, StyleSheet, Image, RefreshControl, Dimensions } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { collection, getDocs, getFirestore, query } from 'firebase/firestore'\nimport Animated, { useSharedValue, useAnimatedStyle, withSpring } from 'react-native-reanimated';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { analytics, db } from '../firebase/firebase';\nimport BannerCarousel from '../components/BannerCarousel';\nimport { logEvent } from 'expo-firebase-analytics';\nimport SkeletonLoader from \"expo-skeleton-loader\";\nimport { customEvent } from 'vexo-analytics';\nconst { height, width } = Dimensions.get('window');\n\nconst HomeWithoutAuthentication = () => {\n    const { userToken, userInfo } = useUser();\n    const [ads, setAds] = useState([]);\n    const [banners, setBanners] = useState([]);\n    const [refreshing, setRefreshing] = useState(false);\n    const navigation = useNavigation();\n    const [bannersLoading, setBannersLoading] = useState(true);\n    const [genderFilter, setGenderFilter] = useState('all'); // 'all', 'male', 'female'\n    const [filteredAds, setFilteredAds] = useState([]);\n\n    useEffect(() => {\n        fetchAds();\n        fetchBanners()\n    }, []);\n\n    const fetchAds = async () => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/rentpost/getAllPosts`);\n            if (response.ok) {\n                const data = await response.json();\n                setAds(data);\n            } else {\n                console.error('Failed to fetch ad posts');\n            }\n        } catch (error) {\n            console.error('Error fetching ad posts:', error);\n        } finally {\n            setRefreshing(false);\n        }\n    };\n\n    const handleGenderFilterChange = (newFilter) => {\n        setGenderFilter(newFilter);\n    };\n\n    const skeletonBanner = () => (\n        <SkeletonLoader\n            boneColor=\"#B0B3B8\"\n            highlightColor=\"#E0E0E0\"\n        >\n            <SkeletonLoader.Item\n                style={{ width, height: height / 4, marginVertical: 10 }}\n            />\n        </SkeletonLoader>\n    );\n    const filterAds = () => {\n        let filtered;\n        switch (genderFilter) {\n            case 'male':\n                filtered = ads.filter(ad => ad.isMaleOnly === true);\n                break;\n            case 'female':\n                filtered = ads.filter(ad => ad.isMaleOnly === false);\n                break;\n            default:\n                filtered = ads;\n        }\n        setFilteredAds(filtered);\n    };\n    const fetchBanners = async () => {\n        try {\n            setBannersLoading(true);\n            const bannersQuery = query(collection(db, 'banners'));\n            const bannersSnapshot = await getDocs(bannersQuery);\n            const fetchedBanners = bannersSnapshot.docs.map(doc => doc.data().link);\n            setBanners(fetchedBanners);\n        } catch (error) {\n            console.error('Error fetching banners:', error);\n        } finally {\n            setBannersLoading(false);\n        }\n    };\n\n    const renderAdCard = ({ item }) => (\n        <AnimatedCard item={item} onPress={handleAdPress} />\n    );\n\n    const handleAdPress = (ad) => {\n        logEvent(analytics, \"Post OnClick\", (ad));\n        customEvent(\"Post OnClick\", (ad));\n        navigation.navigate('AdDetailsWithoutAuthentication', { adId: ad._id });\n    };\n\n    const onRefresh = useCallback(() => {\n        setRefreshing(true);\n        fetchAds();\n    }, []);\n    useEffect(() => {\n        filterAds();\n    }, [ads, genderFilter]);\n    return (\n        <>\n            <View style={styles.container}>\n                {bannersLoading && skeletonBanner()}\n                {!bannersLoading && banners.length > 0 && <BannerCarousel data={banners} />}\n                <View style={styles.filterButtonsContainer}>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'all' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('all')}\n                    >\n                        <Text style={genderFilter === 'all' ? styles.filterTextActive : styles.filterText}>All</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'male' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('male')}\n                    >\n                        <Text style={genderFilter === 'male' ? styles.filterTextActive : styles.filterText}>Male Only</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'female' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('female')}\n                    >\n                        <Text style={genderFilter === 'female' ? styles.filterTextActive : styles.filterText}>Female Only</Text>\n                    </TouchableOpacity>\n                </View>\n                <FlatList\n                    data={filteredAds.length ? filteredAds : ads}\n                    keyExtractor={(item) => item._id}\n                    renderItem={renderAdCard}\n                    contentContainerStyle={styles.adList}\n                    numColumns={2}\n                    refreshControl={\n                        <RefreshControl\n                            refreshing={refreshing}\n                            onRefresh={onRefresh}\n                            tintColor=\"#007DBC\"\n                        />\n                    }\n                />\n            </View>\n        </>\n    );\n};\n\nconst AnimatedCard = ({ item, onPress }) => {\n    const scale = useSharedValue(1);\n    const lastPress = useRef(Date.now());\n\n    const animatedStyles = useAnimatedStyle(() => {\n        return {\n            transform: [{ scale: scale.value }],\n        };\n    });\n\n    const animatedImageStyles = useAnimatedStyle(() => {\n        return {\n            transform: [\n                { perspective: 1000 },\n                { rotateY: `${scale.value * 0}deg` },\n            ],\n        };\n    });\n\n    const handlePress = () => {\n        const now = Date.now();\n        if (now - lastPress.current > 300) { // Prevent multiple rapid presses\n            lastPress.current = now;\n            onPress(item);\n        }\n    };\n\n    const handlePressIn = () => {\n        scale.value = withSpring(1.05);\n    };\n\n    const handlePressOut = () => {\n        scale.value = withSpring(1);\n    };\n\n    return (\n        <Animated.View style={[styles.card, animatedStyles]}>\n            <TouchableOpacity\n                activeOpacity={1}\n                onPress={handlePress}\n                onPressIn={handlePressIn}\n                onPressOut={handlePressOut}\n                delayPressIn={100} // Add delay here\n                style={styles.touchable}\n            >\n                <LinearGradient colors={['#005AAA', '#007DBC']} style={styles.gradient}>\n                    <Animated.Image source={{ uri: item.images[0] }} style={[styles.adImage, animatedImageStyles]} />\n                    <View style={styles.adDetails}>\n                        <Text\n                            style={styles.adTitle}\n                            numberOfLines={2}\n                            ellipsizeMode='tail'\n                        >\n                            {item.adTitle}\n                        </Text>\n                        <View style={styles.adInfo}>\n                            <Text style={styles.adPrice}>Price: ₹{item.price}</Text>\n                            <Text style={styles.adBedrooms}>{item.bedrooms} {item.location}</Text>\n                        </View>\n                    </View>\n                </LinearGradient>\n            </TouchableOpacity>\n        </Animated.View>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n    bannerImage: {\n        width: '100%',\n        height: 200,\n    },\n    adList: {\n        padding: 8,\n    },\n    touchable: {\n        flex: 1,\n    },\n    card: {\n        flex: 0.5,\n        margin: 8,\n        borderRadius: 15,\n        overflow: 'hidden',\n        backgroundColor: '#fff',\n        elevation: 6,\n        shadowColor: 'rgba(0,0,0,0.15)',\n        shadowOffset: { width: 0, height: 3 },\n        shadowOpacity: 1,\n        shadowRadius: 6,\n        borderColor: '#f0f0f0', // Light grey border\n        borderWidth: 1, // Border width\n        fontFamily: 'open-sans-regular',\n    },\n    adImage: {\n        width: '100%',\n        height: 140,\n        backfaceVisibility: 'hidden',\n        borderTopLeftRadius: 15, // Match border radius of card\n        borderTopRightRadius: 15, // Match border radius of card\n    },\n    adDetails: {\n        flex: 1,\n        padding: 12, // Slightly more padding\n    },\n    adTitle: {\n        fontSize: 14, // Reduced font size for title\n        //fontWeight: 'bold',\n        marginBottom: 5,\n        color: 'white', // Darker text color for better readability\n        fontFamily: 'open-sans-bold',\n    },\n    adLocation: {\n        fontSize: 14, // Reduced font size for location\n        color: 'white', // Lighter text color for location\n        marginBottom: 8, // Added margin-bottom for spacing\n    },\n    adInfo: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    adPrice: {\n        fontSize: 16,\n        color: '#deac47',\n        fontFamily: 'open-sans-bold',\n    },\n    adBedrooms: {\n        fontSize: 12,\n        color: '#999',\n    },\n\n    filterButtonsContainer: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        padding: 10,\n        //marginBottom: 20,\n    },\n    filterButton: {\n        borderWidth: 1,\n        borderColor: '#007DBC',\n        paddingVertical: 8,\n        paddingHorizontal: 20,\n        borderRadius: 20,\n        marginHorizontal: 5,\n        backgroundColor: 'white',\n    },\n    filterButtonActive: {\n        backgroundColor: '#007DBC',\n    },\n    filterText: {\n        color: '#007DBC',\n        textAlign: 'center',\n    },\n    filterTextActive: {\n        color: 'white',\n        textAlign: 'center',\n    },\n});\n\nexport default HomeWithoutAuthentication;\n","import { ActivityIndicator, View } from 'react-native'\nimport React, { Component } from 'react'\n\nexport default class Loading extends Component {\n    render() {\n        return (\n            <View\n                style={{\n                    flex: 1,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    backgroundColor: '#005AAA',\n                }}>\n                <ActivityIndicator size=\"large\" color=\"#FFFFFF\" />\n            </View>\n        )\n    }\n}\n","// src/navigation/AuthStack.js\n\nimport React, { useEffect, useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Platform } from 'react-native'; // Import Platform from 'react-native'\nimport Authentication from '../screens/Authentication';\nimport OnboardingScreen from '../screens/OnboardingScreen';\nimport { getItem } from '../utils/asyncStorage';\nimport AdDetailsWithoutAuthentication from '../screens/AdDetailsWithoutAuthentication';\nimport HomeWithoutAuthentication from '../screens/HomeWithoutAuthentication';\nimport Loading from '../components/Loading';\n\nconst Stack = createStackNavigator();\n\nconst AuthStack = () => {\n    const [showOnboarding, setShowOnboarding] = useState(null);\n\n    useEffect(() => {\n        checkIfAlreadyOnboarded();\n    }, []);\n\n    const checkIfAlreadyOnboarded = async () => {\n        let onboarded = await getItem('onboarded');\n        if (onboarded == 1) {\n            setShowOnboarding(false);\n        } else {\n            setShowOnboarding(true);\n        }\n    };\n\n    if (showOnboarding && Platform.OS !== 'web') { // Check the platform here\n        return (\n            <Stack.Navigator initialRouteName='Onboarding'>\n                <Stack.Screen name=\"Onboarding\" options={{ headerShown: false }} component={OnboardingScreen} />\n                <Stack.Screen name=\"HomeTabNavigator\" options={{ headerShown: false }} component={Authentication} />\n                <Stack.Screen name=\"AdDetailsWithoutAuthentication\" component={AdDetailsWithoutAuthentication} />\n                <Stack.Screen name=\"HomeWithoutAuthentication\" component={HomeWithoutAuthentication} />\n                <Stack.Screen name=\"LoadingScreen\" component={Loading} />\n            </Stack.Navigator>\n        );\n    }\n\n    if (showOnboarding == null) return null;\n\n    return (\n        <Stack.Navigator\n            screenOptions={{\n                headerShown: false\n            }}\n            initialRouteName='HomeTabNavigator'\n        >\n            <Stack.Screen name=\"HomeTabNavigator\" component={Authentication} />\n            <Stack.Screen name=\"HomeWithoutAuthentication\" component={HomeWithoutAuthentication} />\n            <Stack.Screen name=\"AdDetailsWithoutAuthentication\" component={AdDetailsWithoutAuthentication} />\n            <Stack.Screen name=\"LoadingScreen\" component={Loading} />\n        </Stack.Navigator>\n    );\n};\n\nexport default AuthStack;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { View, Text, FlatList, TouchableOpacity, StyleSheet, Image, RefreshControl, Dimensions, ActivityIndicator, Platform } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { collection, getDocs, query } from 'firebase/firestore'\nimport Animated, { useSharedValue, useAnimatedStyle, withSpring } from 'react-native-reanimated';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { analytics, db } from '../firebase/firebase';\nimport BannerCarousel from '../components/BannerCarousel';\nimport { logEvent } from 'expo-firebase-analytics';\nimport SkeletonLoader from \"expo-skeleton-loader\";\nconst { height, width } = Dimensions.get('window');\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport DownloadAppModal from '../components/DownloadAppModal';\nimport { customEvent } from 'vexo-analytics';\nconst Home = () => {\n    const [showClose, setShowClose] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [ads, setAds] = useState([]);\n    const [banners, setBanners] = useState([]);\n    const [refreshing, setRefreshing] = useState(false);\n    const navigation = useNavigation();\n    const [bannersLoading, setBannersLoading] = useState(true);\n    const [genderFilter, setGenderFilter] = useState('all'); // 'all', 'male', 'female'\n    const [filteredAds, setFilteredAds] = useState([]);\n    const [showDownloadAppModal, setShowDownloadAppModal] = useState(false);\n    useEffect(() => {\n        fetchAds();\n        fetchBanners()\n\n    }, []);\n\n    useEffect(() => {\n        filterAds();\n    }, [ads, genderFilter]);\n\n    if (isLoading && refreshing && bannersLoading) {\n        return (\n            <View style={styles.loaderContainer}>\n                <ActivityIndicator size=\"large\" color=\"#FFFFFF\" />\n            </View>\n        )\n    }\n    useEffect(() => {\n        const bannerTimer = setTimeout(() => {\n            setShowClose(true);\n\n        }, 10000);\n\n        return () => clearTimeout(bannerTimer); // Clean up the timer\n    }, []);\n\n\n    const fetchAds = async () => {\n        try {\n            setIsLoading(true)\n            const response = await fetch(`${API_BASE_URL}/rentpost/getAllPosts`);\n            if (response.ok) {\n                const data = await response.json();\n                setAds(data);\n                setIsLoading(false)\n            } else {\n                console.error('Failed to fetch ad posts');\n            }\n        } catch (error) {\n            console.error('Error fetching ad posts:', error);\n        } finally {\n            setRefreshing(false);\n            setIsLoading(false)\n        }\n    };\n\n    const navigateToPostAdScreen = () => {\n        if (Platform.OS === \"web\") {\n            setShowDownloadAppModal(true)\n        }\n        else {\n            navigation.navigate('PostAd');\n        }\n\n    };\n    const handleGenderFilterChange = (newFilter) => {\n        setGenderFilter(newFilter);\n    };\n\n    const skeletonBanner = () => (\n        <SkeletonLoader\n            boneColor=\"#B0B3B8\"\n            highlightColor=\"#E0E0E0\"\n        >\n\n            <SkeletonLoader.Item\n                style={{ width, height: height / 4, marginVertical: 10 }}\n            />\n        </SkeletonLoader>\n    );\n    const filterAds = () => {\n        let filtered;\n        switch (genderFilter) {\n            case 'male':\n                filtered = ads.filter(ad => ad.isMaleOnly === true);\n                break;\n            case 'female':\n                filtered = ads.filter(ad => ad.isMaleOnly === false);\n                break;\n            default:\n                filtered = ads;\n        }\n        setFilteredAds(filtered);\n    };\n    const fetchBanners = async () => {\n        try {\n            setBannersLoading(true);\n            const bannersQuery = query(collection(db, 'banners'));\n            const bannersSnapshot = await getDocs(bannersQuery);\n            const fetchedBanners = bannersSnapshot.docs.map(doc => doc.data().link);\n            setBanners(fetchedBanners);\n        } catch (error) {\n            console.error('Error fetching banners:', error);\n        } finally {\n            setBannersLoading(false);\n        }\n    };\n\n    const renderAdCard = ({ item }) => (\n        <AnimatedCard item={item} onPress={handleAdPress} />\n    );\n\n    const handleAdPress = (ad) => {\n        logEvent(analytics, \"Post OnClick\", (ad));\n        customEvent(\"Post OnClick\", ad);\n        navigation.navigate('SingleScreenAd', { adIds: ad?._id });\n    };\n\n    const onRefresh = useCallback(() => {\n        fetchAds();\n        fetchBanners();\n    }, []);\n\n\n    const handleBannerClose = () => {\n        setShowClose(false);\n        setBanners([])\n    };\n\n    return (\n        <>\n            <View style={styles.container}>\n                {bannersLoading && skeletonBanner()}\n                {!bannersLoading && banners.length > 0 && (\n                    <View style={styles.bannerContainer}>\n                        <BannerCarousel data={banners} />\n                        {showClose && <TouchableOpacity\n                            style={styles.bannerCloseButton}\n                            onPress={handleBannerClose}\n                        >\n                            <MaterialIcons name=\"close\" size={24} color=\"white\" />\n                        </TouchableOpacity>}\n                    </View>\n                )}\n                <View style={styles.filterButtonsContainer}>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'all' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('all')}\n                    >\n                        <Text style={genderFilter === 'all' ? styles.filterTextActive : styles.filterText}>All</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'male' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('male')}\n                    >\n                        <Text style={genderFilter === 'male' ? styles.filterTextActive : styles.filterText}>Male Only</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'female' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('female')}\n                    >\n                        <Text style={genderFilter === 'female' ? styles.filterTextActive : styles.filterText}>Female Only</Text>\n                    </TouchableOpacity>\n                </View>\n                <DownloadAppModal\n                    visible={showDownloadAppModal}\n                    onClose={() => setShowDownloadAppModal(false)}\n                />\n                <FlatList\n                    data={filteredAds.length ? filteredAds : ads}\n                    keyExtractor={(item) => item._id}\n                    renderItem={renderAdCard}\n                    contentContainerStyle={styles.adList}\n                    numColumns={2}\n                    refreshControl={\n                        <RefreshControl\n                            refreshing={refreshing}\n                            onRefresh={onRefresh}\n                            tintColor=\"white\"\n                        />\n                    }\n                />\n            </View>\n            <TouchableOpacity\n                style={styles.fab}\n                onPress={navigateToPostAdScreen}\n            >\n                <MaterialIcons name=\"post-add\" size={40} color=\"white\" />\n            </TouchableOpacity>\n        </>\n    );\n};\n\nconst AnimatedCard = ({ item, onPress }) => {\n    const scale = useSharedValue(1);\n    const lastPress = useRef(Date.now());\n\n    const animatedStyles = useAnimatedStyle(() => {\n        return {\n            transform: [{ scale: scale.value }],\n        };\n    });\n\n    const animatedImageStyles = useAnimatedStyle(() => {\n        return {\n            transform: [\n                { perspective: 1000 },\n                { rotateY: `${scale.value * 0}deg` },\n            ],\n        };\n    });\n\n    const handlePress = () => {\n        const now = Date.now();\n        if (now - lastPress.current > 300) { // Prevent multiple rapid presses\n            lastPress.current = now;\n            onPress(item);\n        }\n    };\n\n    const handlePressIn = () => {\n        scale.value = withSpring(1.05);\n    };\n\n    const handlePressOut = () => {\n        scale.value = withSpring(1);\n    };\n\n    return (\n        <Animated.View style={[styles.card, animatedStyles]}>\n            <TouchableOpacity\n                activeOpacity={1}\n                onPress={handlePress}\n                onPressIn={handlePressIn}\n                onPressOut={handlePressOut}\n                delayPressIn={100} // Add delay here\n                style={styles.touchable}\n            >\n                <LinearGradient colors={['#005AAA', '#007DBC']} style={styles.gradient}>\n                    <Animated.Image source={{ uri: item.images[0] }} style={[styles.adImage, animatedImageStyles]} />\n                    <View style={styles.adDetails}>\n                        <Text\n                            style={styles.adTitle}\n                            numberOfLines={2}\n                            ellipsizeMode='tail'\n                        >\n                            {item.adTitle}\n                        </Text>\n                        <View style={styles.adInfo}>\n                            <Text style={styles.adPrice}>Price: ₹{item.price}</Text>\n                            <Text style={styles.adBedrooms}>{item.bedrooms} {item.location}</Text>\n                        </View>\n                    </View>\n                </LinearGradient>\n            </TouchableOpacity>\n        </Animated.View>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n    bannerImage: {\n        width: '100%',\n        height: 200,\n    },\n    adList: {\n        padding: 8,\n    },\n    touchable: {\n        flex: 1,\n    },\n    card: {\n        flex: 0.5,\n        margin: 8,\n        borderRadius: 15,\n        overflow: 'hidden',\n        backgroundColor: '#fff',\n        elevation: 6,\n        shadowColor: 'rgba(0,0,0,0.15)',\n        shadowOffset: { width: 0, height: 3 },\n        shadowOpacity: 1,\n        shadowRadius: 6,\n        borderColor: '#f0f0f0', // Light grey border\n        borderWidth: 1, // Border width\n        fontFamily: 'open-sans-regular',\n    },\n    adImage: {\n        width: '100%',\n        height: 140,\n        backfaceVisibility: 'hidden',\n        borderTopLeftRadius: 15, // Match border radius of card\n        borderTopRightRadius: 15, // Match border radius of card\n    },\n    adDetails: {\n        flex: 1,\n        padding: 12, // Slightly more padding\n    },\n    adTitle: {\n        fontSize: 14, // Reduced font size for title\n        //fontWeight: 'bold',\n        marginBottom: 5,\n        color: 'white', // Darker text color for better readability\n        fontFamily: 'open-sans-bold',\n    },\n    adLocation: {\n        fontSize: 14, // Reduced font size for location\n        color: 'white', // Lighter text color for location\n        marginBottom: 8, // Added margin-bottom for spacing\n    },\n    adInfo: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    adPrice: {\n        fontSize: 16,\n        color: '#deac47',\n        fontFamily: 'open-sans-bold',\n    },\n    adBedrooms: {\n        fontSize: 12,\n        color: '#999',\n    },\n    loaderContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#005AAA', // Adjust the color and opacity to match your gradient\n    },\n    filterButtonsContainer: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        padding: 10,\n        //marginBottom: 20,\n    },\n    filterButton: {\n        borderWidth: 1,\n        borderColor: '#007DBC',\n        paddingVertical: 8,\n        paddingHorizontal: 20,\n        borderRadius: 20,\n        marginHorizontal: 5,\n        backgroundColor: 'white',\n    },\n    filterButtonActive: {\n        backgroundColor: '#007DBC',\n    },\n    filterText: {\n        color: '#007DBC',\n        textAlign: 'center',\n    },\n    filterTextActive: {\n        color: 'white',\n        textAlign: 'center',\n    },\n    fab: {\n        position: 'absolute',\n        width: 48, // Slightly smaller\n        height: 48, // Slightly smaller\n        alignItems: 'center',\n        justifyContent: 'center',\n        right: 16, // Less offset\n        bottom: 16, // Less offset\n        backgroundColor: '#007DBC',\n        borderRadius: 24, // Adjust for smaller size\n        elevation: 6, // Reduced elevation for subtlety\n        shadowColor: '#000', // Added shadow for depth\n        shadowOpacity: 0.3,\n        shadowRadius: 4,\n        shadowOffset: { width: 0, height: 2 },\n        opacity: 0.9 // Slightly transparent\n    },\n    bannerContainer: {\n        position: 'relative',\n    },\n    bannerCloseButton: {\n        position: 'absolute',\n        top: 10,\n        right: 10,\n        backgroundColor: 'rgba(0,0,0,0.5)',\n        padding: 5,\n        borderRadius: 12,\n    },\n});\n\nexport default Home;\n","import React, { useEffect, useCallback, useState } from 'react';\nimport {\n    View,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    Modal,\n    StyleSheet,\n    Platform,\n    ActivityIndicator,\n    Image,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport { RNS3 } from 'react-native-aws3';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport Toast from 'react-native-toast-message';\nimport { serverTimestamp, updateDoc, doc, setDoc } from 'firebase/firestore';\nimport { getAuth, updateProfile as updateAuthProfile } from 'firebase/auth';\nimport { db } from '../firebase/firebase';\nimport * as Location from 'expo-location';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport maleIcon from '../assets/images/male.png';\nimport femaleIcon from '../assets/images/female.png';\nimport student from '../assets/images/student.png';\nimport professionals from '../assets/images/professionals.png';\nimport family from '../assets/images/family.png';\nimport { OneSignal } from 'react-native-onesignal';\nconst domains = ['gmail.com', 'hotmail.com', 'yahoo.com', 'outlook.com'];\n\nconst UpdateProfileModal = ({ isVisible, onDismiss, isUserExists, setLocationModal }) => {\n    const { setUserInfoToStore } = useUser()\n    const { userToken, userInfo } = useUser();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [userId, setUserId] = useState('');\n    console.log(\"userId\", userId)\n    const [gender, setGender] = useState('');\n    const [tenantType, setTenantType] = useState('');\n    const [image, setImage] = useState(null);\n    const [isLoading, setLoading] = useState(false);\n    const [suggestions, setSuggestions] = useState([]);\n    const [fieldsDisabled, setFieldsDisabled] = useState(true);\n    const [userLocation, setUserLocation] = useState(''); // State variable to store user's location\n    const handleGenderSelect = (selectedGender) => {\n        setGender(selectedGender);\n    };\n\n    const requestLocationPermission = async () => {\n        try {\n            const { status } = await Location.requestForegroundPermissionsAsync();\n            if (status !== 'granted') {\n                // Handle permission denied or other errors\n                console.error('Location permission denied.');\n                return;\n            }\n            const location = await Location.getCurrentPositionAsync({});\n            setUserLocation(location); // Store user's location in state\n        } catch (error) {\n            console.error('Error getting user location:', error);\n        }\n    };\n\n    const updateProfileToFirebase = async ({ name, pic, email, isEdit }) => {\n        try {\n            const newDocRef = doc(db, 'user_profiles', userInfo.firebaseId);\n            const handler = isEdit ? updateDoc : setDoc;\n            await handler(newDocRef, {\n                id: userInfo.firebaseId,\n                name,\n                pic,\n                email,\n                phone: userToken.toString(),\n                timestamp: serverTimestamp(),\n            });\n            const auth = getAuth();\n            await updateAuthProfile(auth.currentUser, {\n                displayName: name,\n                photoURL: pic,\n            });\n            console.log('Updated to Firestore and Firebase Authentication');\n        } catch (error) {\n            console.error('Error updating profile:', error);\n        }\n    };\n\n    const handleTenantTypeSelect = (selectedType) => {\n        setTenantType(selectedType);\n    };\n\n    const handleChooseImage = async () => {\n        const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n        if (permissionResult.granted === false) {\n            alert('Permission to access media library is required!');\n            return;\n        }\n\n        const pickerResult = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n        });\n\n        if (!pickerResult.cancelled) {\n            const selectedImageUri = pickerResult.assets[0].uri;\n            setImage(selectedImageUri);\n        }\n    };\n\n    const handleEmailChange = (text) => {\n        setEmail(text);\n        const query = text.split('@')[1];\n        const filteredDomains = domains.filter((domain) => domain.includes(query));\n        setSuggestions(filteredDomains);\n    };\n\n    const handleUpdate = useCallback(async () => {\n        setLoading(true);\n        let s3ImageUrl = null;\n        const isEdit = userId !== ''\n        console.log(\"handleUpdate\", userId)\n        console.log(\"userInfo\", userInfo)\n        try {\n            if (image) {\n                const options = {\n                    keyPrefix: 'uploads/',\n                    bucket: 'primecaves',\n                    region: 'ap-south-1',\n                    accessKey: 'AKIARM6FSFR7MWP7YQUY',\n                    secretKey: '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',\n                    successActionStatus: 201,\n                };\n                let file;\n                if (Platform.OS === 'web') {\n                    const blob = await fetch(image).then((res) => res.blob());\n                    file = {\n                        uri: image,\n                        name: `${userToken.toString()}.jpeg`,\n                        type: 'image/jpeg',\n                        blob,\n                    };\n                } else {\n                    file = {\n                        uri: image,\n                        name: `${userToken.toString()}.jpeg`,\n                        type: 'image/jpeg',\n                    };\n                }\n                const response = await RNS3.put(file, options);\n                if (response.status !== 201) {\n                    throw new Error('Failed to upload image to S3');\n                }\n                s3ImageUrl = response.body.postResponse.location;\n            }\n            const apiEndpoint = isEdit\n                ? `${API_BASE_URL}/user/update/${userId}`\n                : `${API_BASE_URL}/user/register`;\n            const method = isEdit ? 'PUT' : 'POST'\n            const response = await fetch(apiEndpoint, {\n                method,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    tenantType,\n                    image,\n                    name,\n                    email,\n                    gender,\n                    phoneNumber: userToken.toString(),\n                    firebaseId: userInfo.firebaseId,\n                    location: userLocation,\n                }),\n            });\n            if (response.ok) {\n                const responseData = await response.json();\n                onDismiss();\n                if (!isUserExists) {\n                    setLocationModal(true)\n                }\n                updateProfileToFirebase({ name, pic: image, email, isEdit })\n                OneSignal.User.addEmail(email)\n                setUserInfoToStore({\n                    name, image, email,\n                    gender,\n                    phone: userToken.toString(),\n                    firebaseId: userInfo.firebaseId,\n                    tenantType,\n                    subscriptionStartDate: isEdit ? userInfo.subscriptionStartDate : 'NA',\n                    location: userLocation,\n                })\n                Toast.show({\n                    type: 'success',\n                    text1: 'Success',\n                    text2: 'Profile saved successfully',\n                });\n\n            }\n\n            else {\n                console.error('Save failed');\n            }\n        } catch (error) {\n            console.error('Error during save:', error);\n            Toast.show({\n                type: 'error',\n                text1: 'Error',\n                text2: 'Profile failed to save',\n            });\n        } finally {\n            setLoading(false);\n        }\n    }, [userToken, name, email, gender, image, tenantType, userId]);\n\n    useEffect(() => {\n        requestLocationPermission();\n        if (isVisible && isUserExists) {\n            setFieldsDisabled(true);\n            const fetchUserDetails = async () => {\n                try {\n                    const response = await fetch(`${API_BASE_URL}/user/getUserByPhoneNumber/${userToken.toString()}`);\n                    if (response.ok) {\n                        const userData = await response.json();\n                        setName(userData.name || '');\n                        setEmail(userData.email || '');\n                        setGender(userData.gender || '');\n                        setTenantType(userData.tenantType || '');\n                        setUserId(userData._id || '');\n                        setFieldsDisabled(false);\n                    } else {\n                        console.error('Failed to fetch user details');\n                    }\n                } catch (error) {\n                    console.error('Error fetching user details:', error);\n                    setFieldsDisabled(false);\n                }\n            };\n\n            fetchUserDetails();\n        }\n    }, [isVisible, userToken]);\n\n\n    const updateButtonStyle = [\n        styles.actionButton,\n        { backgroundColor: '#007DBC', left: 5 }, // Set background color to #007DBC\n    ];\n\n    return (\n        <Modal visible={isVisible} transparent={true} animationType=\"slide\">\n            <View style={styles.modalContainer}>\n                <LinearGradient // Use LinearGradient for the gradient background\n                    colors={['#007DBC', '#005CA1']} // Gradient colors\n                    style={styles.linearGradient}\n                >\n                    <View style={styles.modalContent}>\n                        {isUserExists && ( // Conditionally render the close icon\n                            <TouchableOpacity\n                                style={styles.closeButton}\n                                onPress={onDismiss}\n                            >\n                                <MaterialCommunityIcons\n                                    name=\"close\"\n                                    size={24}\n                                    color=\"white\" // Set the close icon color to white\n                                />\n                            </TouchableOpacity>\n                        )}\n                        <Text style={styles.modalTitle}>Update Profile</Text>\n                        <View style={styles.chooseImageButton}>\n                            <MaterialCommunityIcons\n                                name=\"camera\"\n                                size={24}\n                                color=\"#007DBC\"\n                                style={{ marginRight: 8 }}\n                            />\n                            <Text style={styles.chooseImageText}>Choose Image</Text>\n                        </View>\n                        {image && (\n                            <Image\n                                source={{ uri: image }}\n                                style={styles.profileImage}\n                            />\n                        )}\n                        <TextInput\n                            style={styles.input}\n                            placeholder=\"Name\"\n                            placeholderTextColor={\"#E7E0C3\"}\n                            value={name}\n                            onChangeText={(text) => setName(text)}\n                        />\n                        <TextInput\n                            style={styles.input}\n                            placeholder=\"Email\"\n                            textContentType=\"emailAddress\"\n                            placeholderTextColor={\"#E7E0C3\"}\n                            value={email}\n                            onChangeText={handleEmailChange}\n                        />\n                        <View style={styles.genderContainer}>\n                            <Text style={styles.label}>Gender</Text>\n                            <View style={styles.radioButtons}>\n                                <TouchableOpacity\n                                    onPress={() => handleGenderSelect('male')}\n                                    style={[\n                                        styles.radioButton,\n                                        gender === 'male' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={maleIcon}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={gender === 'male' ? styles.radioButtonTextSelected : styles.radioButtonText}>Male</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity\n                                    onPress={() => handleGenderSelect('female')}\n                                    style={[\n                                        styles.radioButton,\n                                        gender === 'female' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={femaleIcon}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={gender === 'female' ? styles.radioButtonTextSelected : styles.radioButtonText}>Female</Text>\n                                </TouchableOpacity>\n                            </View>\n                        </View>\n                        <View style={styles.tenantTypeContainer}>\n                            <Text style={styles.label}>I am</Text>\n                            <View style={styles.radioButtonsTenantType}>\n                                <TouchableOpacity\n                                    onPress={() => handleTenantTypeSelect('student')}\n                                    style={[\n                                        styles.radioButtonTenantType,\n                                        tenantType === 'student' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={student}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={tenantType === 'student' ? styles.radioButtonTextSelected : styles.radioButtonText}>Student</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity\n                                    onPress={() => handleTenantTypeSelect('professional')}\n                                    style={[\n                                        styles.radioButtonTenantType,\n                                        tenantType === 'professional' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={professionals}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={tenantType === 'professional' ? styles.radioButtonTextSelected : styles.radioButtonText}>Working Professional</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity\n                                    onPress={() => handleTenantTypeSelect('family')}\n                                    style={[\n                                        styles.radioButtonTenantType,\n                                        tenantType === 'family' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={family}\n                                        style={{ width: 24, height: 24, }}\n                                    />\n                                    <Text style={tenantType === 'family' ? styles.radioButtonTextSelected : styles.radioButtonText}>Family</Text>\n                                </TouchableOpacity>\n                            </View>\n                        </View>\n                        {isLoading ? (\n                            <ActivityIndicator size=\"small\" color=\"#dddddd\" style={styles.loader} />\n                        ) : (\n                            <View style={styles.buttonContainer}>\n                                <TouchableOpacity\n                                    style={updateButtonStyle}\n                                    onPress={handleUpdate}\n                                >\n                                    <Text style={styles.buttonText}>Save</Text>\n                                </TouchableOpacity>\n                            </View>\n                        )}\n                    </View>\n                </LinearGradient>\n            </View>\n        </Modal>\n    );\n};\nconst styles = StyleSheet.create({\n    tenantTypeContainer: {\n        width: '100%',\n        marginBottom: 10,\n    },\n    actionButton: {\n        padding: 10,\n        borderRadius: 5,\n        width: '100%',\n        alignItems: 'center',\n    },\n    loader: {\n        marginTop: 10,\n    },\n    buttonText: {\n        color: 'white',\n        fontFamily: 'open-sans-bold'\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    profileImage: {\n        width: 100,\n        height: 100,\n        borderRadius: 50,\n        marginTop: 10,\n    },\n    scrollViewContent: {\n        flexGrow: 1, // Allow the content to grow vertically\n    },\n    modalContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    },\n    linearGradient: {\n        width: '80%', // Set the width to 100% to cover the entire modal\n    },\n    modalContent: {\n        padding: 20,\n        borderRadius: 10,\n        alignItems: 'center',\n        backgroundColor: 'transparent', // Make the content background transparent\n    },\n    modalTitle: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        color: 'white', // Set the text color to white\n        fontFamily: 'open-sans-regular',\n    },\n    input: {\n        width: '100%',\n        borderWidth: 1,\n        borderColor: 'white', // Set the border color to white\n        borderRadius: 10,\n        padding: 15,\n        marginBottom: 20,\n        fontSize: 16,\n        backgroundColor: 'transparent', // Make the input background transparent\n        color: 'white', // Set the text color to white\n        fontFamily: 'open-sans-light',\n    },\n    closeButton: {\n        position: 'absolute',\n        top: 10,\n        right: 10,\n        zIndex: 1,\n    },\n    chooseImageButton: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: 10,\n    },\n    chooseImageText: {\n        color: '#007DBC',\n        fontFamily: 'open-sans-bold'\n    },\n    genderContainer: {\n        width: '100%',\n        marginBottom: 10,\n    },\n    label: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginBottom: 5,\n        color: 'white'\n    },\n    radioButtons: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n\n    },\n    radioButton: {\n        flexDirection: 'row', // Make it horizontal\n        alignItems: 'center',\n        borderWidth: 0.4,\n        borderRadius: 5,\n        padding: 10,\n        marginRight: 10,\n    },\n    radioButtonSelected: {\n        borderColor: '#dddddd',\n        borderRadius: 5,\n        borderWidth: 1,\n        backgroundColor: '#007DBC', // Set background color to blue on selection\n    },\n    radioButtonText: {\n        color: 'white',\n        fontFamily: 'open-sans-regular',\n        marginLeft: 10,\n    },\n    radioButtonTextSelected: {\n        color: 'white', // Set text color to white on selection\n        marginLeft: 10, // Add margin to separate text from icon\n        fontFamily: 'open-sans-regular'\n\n    },\n    radioButtonsTenantType: { // Center items vertically\n        justifyContent: 'space-between',\n        marginBottom: 20, // Add margin to separate options\n    },\n\n    radioButtonTenantType: {\n        flexDirection: 'row',\n        borderWidth: 0.4,\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10, // Add margin to separate options\n    },\n\n});\n\nexport default UpdateProfileModal;\n\n","const getMatchedUserInfo = (users, userLoggedIn) => {\n  const newUsers = { ...users };\n  delete newUsers[userLoggedIn];\n\n  const [id, user] = Object.entries(newUsers).flat();\n\n  return { id, ...user };\n};\n\nexport default getMatchedUserInfo;\n","const generateId = (id1, id2) => {\n    if (id1 > id2) {\n        return id1 + id2\n    } else {\n        return id2 + id1\n    }\n}\n\nexport default generateId;","\nimport React, { useEffect, useState } from \"react\";\nimport { View, Text, TouchableOpacity, Image, StyleSheet } from \"react-native\";\n\nimport { useNavigation } from '@react-navigation/native';\nimport tw from \"tailwind-rn\";\nimport { collection, onSnapshot, orderBy, query } from \"@firebase/firestore\";\nimport { db } from \"../firebase/firebase\";\nimport getMatchedUserInfo from \"../utils/getMatchedUserInfo\";\nimport { useUser } from \"../context/UserContext\";\nimport generateId from \"../utils/generateIds\";\n\nconst ChatRow = ({ matchDetails }) => {\n  const navigation = useNavigation();\n  const { userInfo } = useUser();\n  const [lastMessage, setLastmessage] = useState(\"\");\n  const [matchedUserInfo, setMatchedUserInfo] = useState(null);\n  useEffect(() => {\n    setMatchedUserInfo(getMatchedUserInfo(matchDetails.users, userInfo.firebaseId));\n  }, [matchDetails, userInfo]);\n\n  useEffect(\n    () => {\n      if (matchedUserInfo) {\n        onSnapshot(\n          query(\n            collection(db, \"matches\",\n              generateId(userInfo.firebaseId, matchedUserInfo.id)\n              , \"messages\"),\n            orderBy(\"timestamp\", \"desc\")\n          ),\n          (snapshot) => setLastmessage(snapshot.docs[0]?.data()?.message)\n        )\n      }\n    },\n    [matchedUserInfo, db]\n  );\n  let userDetails;\n  if (matchedUserInfo) {\n    userDetails = matchDetails.users[matchedUserInfo.id];\n  }\n\n\n  const handleDirectMessage = () => {\n    navigation.navigate('MessagWithData', {\n      userDetails\n    })\n  };\n  return (\n    <TouchableOpacity\n      style={[\n        tw(\"flex-row items-center py-3 px-5 bg-white mx-3 my-1 rounded-lg\"),\n        styles.cardShadow,\n      ]}\n      onPress={handleDirectMessage}\n    >\n      {matchedUserInfo ? (\n        <>\n          <Image\n            style={tw(\"rounded-full h-16 w-16 mr-4\")}\n            source={{\n              uri:\n                matchedUserInfo?.photoUrl ||\n                'https://i.pinimg.com/736x/ff/a0/9a/ffa09aec412db3f54deadf1b3781de2a.jpg',\n            }}\n          />\n          <View>\n            <Text style={tw(\"text-lg font-bold\")}>\n              {matchedUserInfo?.name}\n            </Text>\n            <Text style={tw(\"font-light\")}>\n              {lastMessage?.length > 34\n                ? lastMessage?.substring(0, 34) + '...'\n                : lastMessage || 'Say Hi!'}\n            </Text>\n          </View>\n        </>\n      ) : (\n        <View style={tw('justify-center items-center')}>\n          <Text style={tw('text-lg text-gray-500')}>\n            Yet to have a conversation\n          </Text>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  cardShadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.41,\n    elevation: 2,\n  },\n});\n\n\nexport default ChatRow;\n","import { collection, onSnapshot, query, where } from \"@firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  View,\n  Text,\n  FlatList,\n  StyleSheet,\n} from \"react-native\";\nimport tw from \"tailwind-rn\";\nimport { AuthOpen } from \"../hooks/useAuth\";\nimport ChatRow from \"./ChatRow\";\nimport { db } from \"../firebase/firebase\";\nimport { useUser } from \"../context/UserContext\";\n\nconst ChatList = () => {\n  const [matches, setMatches] = useState([]);\n  console.log(\"matches\", matches)\n  const { userInfo } = useUser();\n  const [loading, setLoading] = useState(true);\n  useEffect(\n    () =>\n      onSnapshot(\n        query(\n          collection(db, \"matches\"),\n          where(\"usersMatched\", \"array-contains\", userInfo.firebaseId)\n        ),\n        (snapshot) =>\n          setMatches(\n            snapshot.docs.map(\n              (doc) => ({\n                id: doc.id,\n                ...doc.data(),\n              }),\n              setLoading(false)\n            )\n          )\n      ),\n    [userInfo]\n  );\n\n  return loading ? (\n    <View style={[styles.container, styles.horizontal]}>\n      <ActivityIndicator size=\"large\" color=\"#29325C\" />\n    </View>\n  ) : matches.length > 0 ? (\n    <FlatList\n      style={tw(\"h-full\")}\n      data={matches}\n      keyExtractor={(item) => item.id}\n      renderItem={({ item }) => <ChatRow matchDetails={item} />}\n    />\n  ) : (\n    <View style={tw(\"p-5\")}>\n      <Text style={tw(\"text-center text-lg\")}>No Message at the moment 😢</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n  },\n});\n\nexport default ChatList;\n","import React, { useEffect } from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport ChatList from \"../components/ChatList\";\n\nconst Chat = () => {\n\n  return (\n    <SafeAreaView>\n      <ChatList />\n    </SafeAreaView>\n  );\n};\n\nexport default Chat;\n","import React, { useState, useEffect } from 'react';\nimport { View, TouchableOpacity, StyleSheet, Modal, Text, TextInput, FlatList, ScrollView } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport axios from 'axios';\nimport API_BASE_URL from '../services/config';\nimport { useUser } from '../context/UserContext';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport { logEvent } from 'expo-firebase-analytics';\nimport { analytics } from '../firebase/firebase';\nimport { OneSignal } from 'react-native-onesignal';\nimport { customEvent } from 'vexo-analytics';\n\nconst DEFAULT_LOCATION = {\n  label: 'Patia',\n  value: 'Patia',\n}\nconst CustomHeader = ({ navigation, onSettingPress, showBack = false, locationModal = false, setLocationModal }) => {\n  const { setUserInfoToStore, useToken } = useUser()\n  const [selectedLocation, setSelectedLocation] = useState(DEFAULT_LOCATION);\n  const [allLocations, setLocations] = useState([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [suggestedLocations, setSuggestedLocations] = useState([]);\n  const [topLocations, setTopLocations] = useState([]);\n\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/user/getAllLocations`); // Replace with your API endpoint\n        const { locations = [] } = response.data;\n        const fetchedLocations = locations.map(location => ({\n          label: location,\n          value: location\n        }));\n        setLocations(fetchedLocations);\n        setTopLocations(fetchedLocations.slice(0, 30));\n      } catch (error) {\n        console.error('Error fetching locations in component:', error);\n      }\n    };\n\n    fetchLocations();\n  }, []);\n\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n    const filteredLocations = allLocations.filter((location) =>\n      location.label.toLowerCase().includes(query.toLowerCase())\n    );\n    setSuggestedLocations(filteredLocations);\n  };\n\n  const clearSearch = () => {\n    setSearchQuery('');\n    setSuggestedLocations([]);\n  };\n\n  const selectLocation = (location) => {\n    OneSignal.User.addTag(\"location\", location.value);\n    logEvent(analytics, \"location changed\", location);\n    customEvent(\"location changed\", location.value)\n    setSelectedLocation(location);\n    setModalVisible(false);\n    if (locationModal) {\n      setLocationModal(false);\n    }\n    setSearchQuery('');\n    setSuggestedLocations([]);\n    setUserInfoToStore(location)\n  };\n\n  const renderLocationItem = ({ item }) => (\n    <TouchableOpacity style={styles.locationItem} onPress={() => selectLocation(item)}>\n      <Text style={styles.locationText}>{item.label}</Text>\n    </TouchableOpacity>\n  );\n\n  const renderTag = (item) => (\n    <TouchableOpacity style={styles.tag} onPress={() => selectLocation(item)}>\n      <Text style={styles.tagText}>{item.label}</Text>\n    </TouchableOpacity>\n  );\n\n  return (\n    <SafeAreaView edges={['top']} style={{ flex: 0, backgroundColor: 'transparent' }}>\n      <LinearGradient colors={['#007DBC', '#005AAA']} style={styles.header}>\n        <View style={styles.leftContainer}>\n          {showBack && (\n            <TouchableOpacity onPress={() => navigation.goBack()} style={styles.iconButton}>\n              <Icon name=\"arrow-back\" size={24} color=\"#fff\" />\n            </TouchableOpacity>\n          )}\n          <TouchableOpacity style={styles.selectedLocationContainer} onPress={() => setModalVisible(true)}>\n            <Text style={styles.selectedLocationText}>\n              {selectedLocation ? selectedLocation.label : 'Select Location'}\n            </Text>\n            <Icon name=\"chevron-down\" size={20} color=\"#fff\" style={styles.downIcon} />\n          </TouchableOpacity>\n        </View>\n        <TouchableOpacity onPress={onSettingPress} style={styles.iconButton}>\n          <Icon name=\"settings\" size={24} color=\"#fff\" />\n        </TouchableOpacity>\n      </LinearGradient>\n\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={locationModal || modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalView}>\n          <LinearGradient colors={['#007DBC', '#dddddd']} style={styles.modalGradient}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalHeaderText}>Select Location</Text>\n              <TouchableOpacity onPress={() => setModalVisible(false)}>\n                <Icon name=\"close\" size={24} color=\"#fff\" />\n              </TouchableOpacity>\n            </View>\n            <View style={styles.searchContainer}>\n              <TextInput\n                style={styles.searchInput}\n                placeholder=\"Search Location\"\n                placeholderTextColor=\"#fff\"\n\n                value={searchQuery}\n                onChangeText={handleSearch}\n              />\n              {searchQuery.length > 0 && (\n                <TouchableOpacity style={styles.clearIcon} onPress={clearSearch}>\n                  <Icon name=\"close-circle\" size={20} color=\"#fff\" />\n                </TouchableOpacity>\n              )}\n            </View>\n            <ScrollView showsHorizontalScrollIndicator={false} contentContainerStyle={styles.tagsContainer}>\n              {searchQuery.length > 0\n                ? suggestedLocations.map((location, index) => (\n                  <React.Fragment key={index}>\n                    {renderTag(location)}\n                  </React.Fragment>\n                ))\n                : topLocations.map((location, index) => (\n                  <React.Fragment key={index}>\n                    {renderTag(location)}\n                  </React.Fragment>\n                ))}\n            </ScrollView>\n          </LinearGradient>\n        </View>\n      </Modal>\n    </SafeAreaView>\n  );\n};\n\nconst tagSize = 90;\n\nconst styles = StyleSheet.create({\n  header: {\n    height: 60,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 10,\n    justifyContent: 'space-between',\n  },\n  leftContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  selectedLocationContainer: {\n    flexDirection: 'row',\n    marginLeft: 10,\n    alignItems: 'center',\n  },\n  downIcon: {\n    marginLeft: 5,\n  },\n  rightContainer: {\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n  iconButton: {\n    padding: 10,\n  },\n  selectedLocationText: {\n    color: '#fff',\n    fontSize: 18,\n    fontFamily: 'open-sans-regular',\n  },\n  modalView: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  modalGradient: {\n    width: '100%',\n    height: '60%',\n    padding: 20,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  modalHeaderText: {\n    color: '#fff',\n    fontSize: 18,\n    fontFamily: 'open-sans-regular',\n  },\n  searchContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    borderRadius: 10,\n    padding: 10,\n    marginTop: 20,\n  },\n  searchInput: {\n    flex: 1,\n    color: '#fff',\n    fontSize: 16,\n    fontFamily: 'open-sans-light',\n  },\n  clearIcon: {\n    marginLeft: 10,\n  },\n  locationList: {\n    marginTop: 20,\n  },\n  locationItem: {\n    padding: 10,\n    borderRadius: 5,\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    marginTop: 10,\n  },\n  locationText: {\n    color: '#fff',\n  },\n  tagsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    marginTop: 10,\n  },\n  tag: {\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    width: 170,\n    height: tagSize,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n    marginBottom: 10,\n  },\n  tagText: {\n    color: '#fff',\n    fontSize: 14,\n    textAlign: 'center',\n    fontFamily: 'open-sans-regular',\n  },\n});\n\nexport default CustomHeader;\n","// src/api.js\nimport axios from 'axios';\nimport API_BASE_URL from './services/config';\n\nconst api = axios.create({\n    baseURL: API_BASE_URL,\n});\n\nexport default api;\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, FlatList, TouchableOpacity, Image, StyleSheet, ActivityIndicator, ScrollView, RefreshControl } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport api from '../../api';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useUser } from '../../context/UserContext';\n\nconst Cart = () => {\n    const navigation = useNavigation();\n    const { userId } = useUser();\n    const [cartItems, setCartItems] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [refreshing, setRefreshing] = useState(false);\n\n    useEffect(() => {\n        fetchCartItems();\n    }, []);\n\n    const calculateTotalPrice = () => {\n        return cartItems.reduce((total, item) => total + item.productId.price * item.quantity, 0);\n    };\n\n    const fetchCartItems = async () => {\n        try {\n            if (!userId) {\n                // Redirect to login screen if user is not logged in\n                navigation.navigate('Auth');\n                return;\n            }\n            const response = await api.get(`/cart?userId=${userId}`);\n            const result = response.data.filter(item => item.productId !== null)\n            setCartItems(result);\n            setLoading(false);\n        } catch (error) {\n            console.error('Error fetching cart items:', error);\n            setLoading(false);\n        }\n    };\n\n    const handleRemoveFromCart = async (itemId) => {\n        try {\n            // Set loading state for the specific item to true\n            setCartItems((prevCartItems) =>\n                prevCartItems.map((item) =>\n                    item._id === itemId ? { ...item, loading: true } : item\n                )\n            );\n\n            await api.delete(`/cart/remove/${itemId}`);\n            // Remove the item from cartItems state locally after successful removal\n            setCartItems((prevCartItems) =>\n                prevCartItems.filter((item) => item._id !== itemId)\n            );\n            alert('Product removed from cart successfully!');\n        } catch (error) {\n            console.error('Error removing from cart:', error);\n            alert('Failed to remove product from cart.');\n        } finally {\n            // Set loading state for the specific item back to false\n            setCartItems((prevCartItems) =>\n                prevCartItems.map((item) =>\n                    item._id === itemId ? { ...item, loading: false } : item\n                )\n            );\n        }\n    };\n\n    const onRefresh = () => {\n        setRefreshing(true);\n        fetchCartItems();\n        setRefreshing(false);\n    };\n\n    const renderItem = ({ item }) => (\n        <View style={styles.cartItemContainer}>\n            <Image source={{ uri: item.productId.imageUrl }} style={styles.cartItemImage} />\n            <View style={styles.cartItemInfo}>\n                <Text style={styles.cartItemName}>{item.productId.name}</Text>\n                <Text style={styles.cartItemPrice}>Price: ₹{item.productId.price}</Text>\n                <Text style={styles.cartItemPrice}>Quantity: {item.quantity}</Text>\n                <TouchableOpacity\n                    style={styles.removeFromCartButton}\n                    onPress={() => handleRemoveFromCart(item._id)}\n                    disabled={item.loading} // Use the specific loading state for the item\n                >\n                    {item.loading ? (\n                        <ActivityIndicator color=\"#fff\" size=\"small\" />\n                    ) : (\n                        <Text style={styles.removeFromCartButtonText}>Remove</Text>\n                    )}\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n\n    const handleContinueToCheckout = () => {\n        navigation.navigate('CheckoutProcess', { cartItems, totalPrice: calculateTotalPrice() });\n    };\n\n    if (loading) {\n        return (\n            <View style={styles.loadingContainer}>\n                <ActivityIndicator size=\"large\" color=\"#007DBC\" />\n            </View>\n        );\n    }\n\n    const navigateToOrderManagement = () => {\n        navigation.navigate('OrderManagement');\n    };\n\n    return (\n        <SafeAreaView style={styles.container}>\n            <View style={styles.topBar}>\n                <TouchableOpacity onPress={() => navigation.navigate('ProductCatalog')}>\n                    <MaterialCommunityIcons name=\"arrow-left\" size={24} color=\"#007DBC\" />\n                </TouchableOpacity>\n                <Text style={styles.title}>Shopping Cart</Text>\n                <TouchableOpacity onPress={navigateToOrderManagement}>\n                    <MaterialCommunityIcons name=\"history\" size={24} color=\"#007DBC\" />\n                </TouchableOpacity>\n            </View>\n            {cartItems.length === 0 ? (\n                <Text style={styles.emptyCartText}>Your cart is empty.</Text>\n            ) : (\n                <>\n                    <FlatList\n                        data={cartItems}\n                        renderItem={renderItem}\n                        keyExtractor={(item) => item._id}\n                        contentContainerStyle={styles.cartItemList}\n                        refreshControl={\n                            <RefreshControl\n                                refreshing={refreshing}\n                                onRefresh={onRefresh} />\n                        }\n                    />\n                </>\n            )}\n            <View style={styles.fixedCartSummaryContainer}>\n                <View style={styles.cartSummaryContainer}>\n                    <Text style={styles.cartSummaryText}>Total Price: ₹{calculateTotalPrice()}</Text>\n                    <TouchableOpacity\n                        style={styles.continueButton}\n                        onPress={handleContinueToCheckout}\n                    >\n                        <Text style={styles.continueButtonText}>Continue</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#f9f9f9',\n    },\n    topBar: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundColor: '#fff',\n        paddingVertical: 16,\n        paddingHorizontal: 24,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ddd',\n    },\n    title: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#333',\n    },\n    cartItemList: {\n        paddingVertical: 16,\n        paddingHorizontal: 24,\n    },\n    cartItemContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 20,\n        borderRadius: 10,\n        backgroundColor: '#fff',\n        padding: 16,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.2,\n        shadowRadius: 4,\n        elevation: 3,\n    },\n    cartItemImage: {\n        width: 80,\n        height: 80,\n        resizeMode: 'cover',\n        borderRadius: 8,\n        marginRight: 16,\n    },\n    cartItemInfo: {\n        flex: 1,\n    },\n    cartItemName: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#333',\n    },\n    cartItemPrice: {\n        fontSize: 16,\n        color: '#777',\n        marginBottom: 8,\n    },\n    removeFromCartButton: {\n        backgroundColor: '#ff0000',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 6,\n        alignSelf: 'flex-start',\n    },\n    removeFromCartButtonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 14,\n        textAlign: 'center',\n    },\n    loadingContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    emptyCartText: {\n        alignSelf: 'center',\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#777',\n        marginTop: 50,\n    },\n    cartSummaryContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        paddingVertical: 16,\n        paddingHorizontal: 24,\n        backgroundColor: '#fff',\n        borderTopWidth: 1,\n        borderTopColor: '#ddd',\n    },\n    cartSummaryText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#333',\n    },\n    continueButton: {\n        backgroundColor: '#007DBC',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 6,\n    },\n    continueButtonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 14,\n        textAlign: 'center',\n    },\n    fixedCartSummaryContainer: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        backgroundColor: '#fff',\n        borderTopWidth: 1,\n        borderTopColor: '#ddd',\n    },\n});\n\nexport default Cart;\n","import React, { useState } from 'react';\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity, KeyboardAvoidingView, ActivityIndicator, ScrollView, } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport api from '../../api';\nimport { useUser } from '../../context/UserContext';\n\nconst CheckoutProcess = ({ route }) => {\n    const { userId, userInfo } = useUser();\n    const { cartItems, totalPrice } = route.params;\n    const [name, setName] = useState(userInfo?.name || '');\n    const [email, setEmail] = useState(userInfo?.email || '');\n    const [address, setAddress] = useState('');\n    const [pincode, setPincode] = useState('');\n    const [phone, setPhone] = useState(userInfo?.phone || '');\n    const [loading, setLoading] = useState(false); // State to show loader while processing the order\n\n    const navigation = useNavigation();\n\n    const handleCancelOrder = () => {\n        // Implement any necessary actions for canceling the order (e.g., clearing the cart)\n        navigation.goBack();\n    };\n\n    const handleCompleteOrder = async () => {\n        try {\n            setLoading(true); // Show the loader while processing the order\n\n            // Create an object with the necessary order details\n            const orderData = {\n                cartItems,\n                totalPrice,\n                name,\n                email,\n                address,\n                pincode,\n                phone,\n                userId,\n            };\n            // Send a POST request to the backend to create the order\n            await api.post(`/checkout/order`, orderData).then(response => {\n                if (!response) {\n                    throw new Error;\n                } else {\n                    setLoading(false); // Hide the loader after order processing is complete\n                    alert('Order completed successfully!', 'Payment mode: Cash on Delivery', [\n                        { text: 'OK', onPress: () => navigation.goBack() },\n                    ]);\n                    navigation.goBack();\n                }\n            }).catch(err => {\n                console.error('Error during order processing:', err);\n                setLoading(false); // Hide the loader in case of an error\n                alert('Failed to complete the order. Please try again.');\n            });\n        } catch (error) {\n            setLoading(false);\n            console.error('Error during order processing:', error);\n            setLoading(false); // Hide the loader in case of an error\n            alert('Failed to complete the order. Please try again.');\n        }\n    };\n\n    return (\n        <KeyboardAvoidingView style={styles.container} behavior=\"padding\">\n            <KeyboardAwareScrollView contentContainerStyle={{ flexGrow: 1 }}>\n                <ScrollView style={styles.formContainer}>\n                    <TextInput\n                        style={[styles.input]} // Added extra height to address input field\n                        placeholder=\"Name\"\n                        value={name}\n                        onChangeText={setName}\n                    />\n                    <TextInput\n                        style={[styles.input]} // Added extra height to address input field\n                        placeholder=\"Email\"\n                        value={email}\n                        onChangeText={setEmail}\n                        keyboardType=\"email-address\"\n                        autoCapitalize=\"none\"\n                    />\n                    <TextInput\n                        style={[styles.input, styles.addressInput]} // Added extra height to address input field\n                        placeholder=\"Address\"\n                        value={address}\n                        onChangeText={setAddress}\n                        multiline // Enable multiline input for address\n                        numberOfLines={4} // Show four lines for address input\n                    />\n                    <TextInput\n                        style={[styles.input]} // Added extra height to address input field\n                        placeholder=\"Pincode\"\n                        value={pincode}\n                        onChangeText={setPincode}\n                        keyboardType=\"numeric\"\n                    />\n                    <TextInput\n                        style={[styles.input]} // Added extra height to address input field\n                        placeholder=\"Phone\"\n                        value={phone}\n                        onChangeText={setPhone}\n                        keyboardType=\"phone-pad\"\n                    />\n                </ScrollView>\n            </KeyboardAwareScrollView>\n            <View style={styles.fixedContentContainer}>\n                <View style={styles.summaryContainer}>\n                    <Text style={styles.summaryText}>Total Price: ₹{totalPrice}</Text>\n                    <Text style={styles.paymentText}>Payment Mode: Cash on Delivery</Text>\n                </View>\n\n                <View style={styles.buttonContainer}>\n                    <TouchableOpacity style={styles.cancelButton} onPress={handleCancelOrder}>\n                        <Text style={styles.buttonText}>Cancel Order</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={styles.completeButton} onPress={handleCompleteOrder}>\n                        <Text style={[styles.buttonText, styles.completeButtonText]}>Complete Order</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n\n            {loading && <ActivityIndicator size=\"large\" color=\"#007DBC\" />}\n\n        </KeyboardAvoidingView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#f9f9f9',\n        padding: 16,\n    },\n    title: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginBottom: 16,\n        textAlign: 'center',\n    },\n    formContainer: {\n        marginBottom: 12,\n    },\n    input: {\n        backgroundColor: '#fff',\n        padding: 12,\n        marginBottom: 16,\n        borderRadius: 6,\n        borderWidth: 1,\n        borderColor: '#ccc',\n    },\n    addressInput: {\n        height: 100, // Increased height for address input\n    },\n    summaryContainer: {\n        backgroundColor: '#fff',\n        padding: 16,\n        marginBottom: 16,\n        borderRadius: 6,\n        borderWidth: 1,\n        borderColor: '#ccc',\n    },\n    summaryText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#333',\n    },\n    paymentText: {\n        fontSize: 16,\n        color: '#777',\n        marginTop: 8,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n    },\n    cancelButton: {\n        backgroundColor: '#ff0000',\n        paddingVertical: 12,\n        paddingHorizontal: 24,\n        borderRadius: 6,\n        alignItems: 'center',\n        flex: 1,\n        marginRight: 8,\n    },\n    completeButton: {\n        backgroundColor: '#00cc00', // Changed to green color\n        paddingVertical: 12,\n        paddingHorizontal: 24,\n        borderRadius: 6,\n        alignItems: 'center',\n        flex: 1,\n        marginLeft: 8,\n    },\n    buttonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 16,\n    },\n    completeButtonText: {\n        color: '#fff', // Added white color to the complete order button text\n    }, fixedContentContainer: {\n        position: 'absolute',\n        bottom: 50,\n        left: 0,\n        right: 0,\n        backgroundColor: '#fff',\n        borderTopWidth: 1,\n        borderTopColor: '#ccc',\n    },\n    bottomInfoContainer: {\n        paddingHorizontal: 24,\n        paddingVertical: 16,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n});\n\nexport default CheckoutProcess;\n\n","// OrderManagement.js\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, FlatList, StyleSheet, TouchableOpacity, Modal, Image, ActivityIndicator, RefreshControl } from 'react-native';\nimport api from '../../api';\nimport { useUser } from '../../context/UserContext';\n\nconst OrderManagement = () => {\n    const { userId } = useUser();\n    const [orders, setOrders] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetchOrders();\n    }, []);\n\n    const fetchOrders = async () => {\n        try {\n            setLoading(true);\n            const response = await api.get(`/orders/${userId}`);\n            setOrders(response.data);\n        } catch (error) {\n            console.error('Error fetching orders:', error);\n            // Handle error\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const [selectedCartItem, setSelectedCartItem] = useState(null);\n    const [isCartItemModalVisible, setIsCartItemModalVisible] = useState(false);\n\n    const handleShowCartItemDetails = (cartItem) => {\n        setSelectedCartItem(cartItem);\n        setIsCartItemModalVisible(true);\n    };\n\n    const closeCartItemModal = () => {\n        setIsCartItemModalVisible(false);\n    };\n\n    const renderOrderItem = ({ item }) => (\n        <View style={styles.orderItemContainer}>\n            <Text style={styles.orderItemText}>Order ID: {item._id}</Text>\n            <Text style={styles.orderItemText}>Name: {item.name}</Text>\n            <Text style={styles.orderItemText}>Phone: {item.phone}</Text>\n            <Text style={styles.orderItemText}>Total Price: ₹{item.totalPrice}</Text>\n            <Text style={styles.orderItemText}>Status: {item.status}</Text>\n            {/* Additional order details can be displayed here */}\n            <FlatList\n                data={item.cartItems}\n                renderItem={renderCartItem}\n                keyExtractor={(cartItem) => cartItem._id}\n                contentContainerStyle={styles.cartItemList}\n            />\n        </View>\n    );\n\n    const renderCartItem = ({ item }) => (\n        <View style={styles.cartItemContainer}>\n            <Image source={{ uri: item.productId.imageUrl }} style={styles.cartItemImage} />\n            <View style={styles.cartItemInfo}>\n                <Text style={styles.cartItemName}>{item.productId.name}</Text>\n                <Text style={styles.cartItemPrice}>Price: ₹{item.productId.price}</Text>\n                <Text style={styles.cartItemPrice}>Quantity: {item.quantity}</Text>\n                {/* Additional cart item details can be displayed here */}\n                <TouchableOpacity\n                    style={styles.showDetailsButton}\n                    onPress={() => handleShowCartItemDetails(item)}\n                >\n                    <Text style={styles.showDetailsButtonText}>Show Details</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n\n    return (\n        <View style={styles.container}>\n            {loading ? (\n                <ActivityIndicator size=\"large\" color=\"#007DBC\" />\n            ) : orders.length === 0 ? (\n                <Text style={styles.emptyText}>No orders found.</Text>\n            ) : (\n                <FlatList\n                    data={orders}\n                    renderItem={renderOrderItem}\n                    keyExtractor={(item) => item._id}\n                    contentContainerStyle={styles.orderList}\n                    refreshControl={\n                        <RefreshControl\n                            refreshing={loading}\n                            onRefresh={fetchOrders} />\n                    }\n                />\n            )}\n\n            {/* Modal for displaying cart item details */}\n            <Modal visible={isCartItemModalVisible} transparent={true} onRequestClose={closeCartItemModal}>\n                <View style={styles.modalBackground}>\n                    <View style={styles.cartItemModalContent}>\n                        <Text style={styles.modalTitle}>Cart Item Details</Text>\n                        {selectedCartItem && (\n                            <View>\n                                <Image\n                                    source={{ uri: selectedCartItem.productId.imageUrl }}\n                                    style={styles.cartItemImage}\n                                />\n                                <Text style={styles.cartItemModalText}>\n                                    Product Name: {selectedCartItem.productId.name}\n                                </Text>\n                                <Text style={styles.cartItemModalText}>\n                                    Description: {selectedCartItem.productId.description}\n                                </Text>\n                                <Text style={styles.cartItemModalText}>\n                                    Price: ₹{selectedCartItem.productId.price}\n                                </Text>\n                                <Text style={styles.cartItemModalText}>\n                                    Quantity: {selectedCartItem.quantity}\n                                </Text>\n                                {/* Add more details as needed */}\n                            </View>\n                        )}\n                        <TouchableOpacity style={styles.closeButton} onPress={closeCartItemModal}>\n                            <Text style={styles.closeButtonText}>Close</Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n            </Modal>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#f9f9f9',\n        padding: 16,\n    },\n    title: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginBottom: 16,\n        textAlign: 'center',\n    },\n    orderList: {\n        flexGrow: 1,\n    },\n    orderItemContainer: {\n        backgroundColor: '#fff',\n        padding: 16,\n        marginBottom: 16,\n        borderRadius: 6,\n        borderWidth: 1,\n        borderColor: '#ccc',\n    },\n    orderItemText: {\n        fontSize: 16,\n        color: '#333',\n        marginBottom: 8,\n    },\n    emptyText: {\n        alignSelf: 'center',\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#777',\n        marginTop: 50,\n    },\n    cartItemContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n        borderRadius: 10,\n        backgroundColor: '#fff',\n        padding: 16,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.2,\n        shadowRadius: 4,\n        elevation: 3,\n    },\n    cartItemImage: {\n        width: 80,\n        height: 80,\n        resizeMode: 'cover',\n        borderRadius: 8,\n        marginRight: 16,\n    },\n    cartItemInfo: {\n        flex: 1,\n        alignItems: 'center', // Center the \"Show Details\" button\n    },\n    showDetailsButton: {\n        backgroundColor: '#007DBC',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 6,\n        marginTop: 8,\n    },\n    showDetailsButtonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 14,\n        textAlign: 'center',\n    },\n    modalBackground: {\n        flex: 1,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    cartItemModalContent: {\n        backgroundColor: '#fff',\n        padding: 16,\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        width: '80%',\n    },\n    modalTitle: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 16,\n        textAlign: 'center',\n    },\n    cartItemModalText: {\n        fontSize: 16,\n        color: '#333',\n        marginBottom: 8,\n    },\n    closeButton: {\n        backgroundColor: '#007DBC',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 6,\n        alignSelf: 'center',\n    },\n    closeButtonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 14,\n        textAlign: 'center',\n    },\n});\n\nexport default OrderManagement;\n","import React, { useState } from 'react';\nimport { View, Text, Image, StyleSheet, TouchableOpacity, ScrollView, ActivityIndicator } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport api from '../../api';\nimport { useUser } from '../../context/UserContext';\n\nconst SingleProductViewScreen = ({ route }) => {\n    const { product } = route.params;\n    const { userId } = useUser();\n    const [isItemAddedToCart, setIsItemAddedToCart] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [quantity, setQuantity] = useState(1);\n\n    const handleAddToCart = async () => {\n        try {\n            if (!userId) {\n                alert('Please log in to add items to your cart.');\n                return;\n            }\n            setIsLoading(true);\n            const requestBody = {\n                userId: userId,\n                productId: product._id,\n                quantity: quantity, // Use the selected quantity\n            };\n\n            await api.post('/cart/add', requestBody);\n            setIsItemAddedToCart(true);\n        } catch (error) {\n            console.error('Error adding to cart:', error);\n            alert('Failed to add product to cart.');\n        } finally {\n            setIsLoading(false); // Hide loader after adding the item to cart\n        }\n    };\n\n    const handleIncrement = () => {\n        setQuantity((prevQuantity) => prevQuantity + 1);\n    };\n\n    const handleDecrement = () => {\n        setQuantity((prevQuantity) => Math.max(prevQuantity - 1, 1));\n    };\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.productContainer}>\n                <ScrollView contentContainerStyle={styles.productContent}>\n                    <Image source={{ uri: product.imageUrl }} style={styles.productImage} />\n                    <View style={styles.productInfo}>\n                        <Text style={styles.productName}>{product.name}</Text>\n                        <Text style={styles.productDescription}>{product.description}</Text>\n                        <Text style={styles.productPrice}>Price: ₹{product.price}</Text>\n                    </View>\n                </ScrollView>\n                <View style={styles.quantityContainer}>\n                    <TouchableOpacity style={styles.quantityButton} onPress={handleDecrement}>\n                        <MaterialCommunityIcons name=\"minus\" size={20} color=\"#FFFFFF\" />\n                    </TouchableOpacity>\n                    <Text style={styles.quantityText}>{quantity}</Text>\n                    <TouchableOpacity style={styles.quantityButton} onPress={handleIncrement}>\n                        <MaterialCommunityIcons name=\"plus\" size={20} color=\"#FFFFFF\" />\n                    </TouchableOpacity>\n                </View>\n            </View>\n            <TouchableOpacity\n                style={[styles.addToCartButton, isItemAddedToCart ? styles.addedToCartButton : null]}\n                onPress={handleAddToCart}\n                disabled={isItemAddedToCart || isLoading}\n            >\n                {isLoading ? (\n                    <ActivityIndicator size=\"small\" color=\"#fff\" />\n                ) : (\n                    <Text style={styles.addToCartButtonText}>\n                        {isItemAddedToCart ? 'Item Added to Cart' : 'Add to Cart'}\n                    </Text>\n                )}\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#f9f9f9',\n    },\n    productContainer: {\n        flex: 1,\n    },\n    productContent: {\n        alignItems: 'center',\n        paddingHorizontal: 20,\n        paddingBottom: 80, // Adjust this value as needed for spacing\n    },\n    productImage: {\n        width: 500,\n        height: 500,\n        resizeMode: 'cover',\n        borderRadius: 10,\n        marginBottom: 20,\n    },\n    productInfo: {\n        alignItems: 'center',\n        marginBottom: 20,\n    },\n    productName: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        color: '#333',\n        marginBottom: 10,\n    },\n    productDescription: {\n        fontSize: 16,\n        color: '#777',\n        textAlign: 'center',\n        marginBottom: 20,\n    },\n    productPrice: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#007DBC',\n        marginBottom: 20,\n    },\n    quantityContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        backgroundColor: '#fff',\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n    },\n    quantityButton: {\n        backgroundColor: '#007DBC',\n        padding: 8,\n        borderRadius: 4,\n    },\n    quantityText: {\n        paddingHorizontal: 12,\n        fontSize: 18,\n    },\n    addToCartButton: {\n        backgroundColor: '#007DBC',\n        paddingVertical: 12,\n        paddingHorizontal: 24,\n        borderRadius: 8,\n        marginBottom: 20,\n        marginHorizontal: 20,\n    },\n    addToCartButtonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 18,\n        textAlign: 'center',\n    },\n    addedToCartButton: {\n        backgroundColor: 'green',\n    },\n});\n\nexport default SingleProductViewScreen;\n","import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, ActivityIndicator } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\n\nconst CartCountCard = ({ cartItemsCount = 0, loading }) => {\n    const navigation = useNavigation();\n\n    const handlePress = () => {\n        navigation.navigate('Cart'); // Navigate to the 'Cart' screen when the card is clicked\n    };\n\n    return (\n        <TouchableOpacity onPress={handlePress}>\n            <View style={styles.container}>\n                {loading ? (\n                    <ActivityIndicator size=\"small\" color=\"#fff\" />\n                ) : (\n                    <>\n                        <MaterialCommunityIcons name=\"cart\" size={24} color=\"#fff\" />\n                        <View style={styles.cartCountContainer}>\n                            <Text style={styles.cartCountText}>{cartItemsCount}</Text>\n                        </View>\n                    </>\n                )}\n                <Text style={styles.cartLabelText}>Cart</Text>\n            </View>\n        </TouchableOpacity>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#007DBC',\n        paddingHorizontal: 10,\n        paddingVertical: 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'row',\n    },\n    cartCountContainer: {\n        backgroundColor: '#fff',\n        borderRadius: 10,\n        marginLeft: 5,\n        paddingHorizontal: 5,\n        paddingVertical: 2,\n    },\n    cartCountText: {\n        color: '#007DBC',\n        fontSize: 12,\n        fontWeight: 'bold',\n    },\n    cartLabelText: {\n        color: '#fff',\n        fontSize: 12,\n        marginLeft: 5,\n    },\n});\n\nexport default CartCountCard;\n","import React, { useEffect, useState } from 'react';\nimport {\n    View,\n    Text,\n    FlatList,\n    TouchableOpacity,\n    Image,\n    StyleSheet,\n    ActivityIndicator,\n    RefreshControl,\n    TextInput,\n} from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport api from '../../api';\nimport CartCountCard from '../../components/CartCountCard';\nimport { useUser } from '../../context/UserContext';\n\nconst ProductCatalogScreen = (props) => {\n    const navigation = useNavigation();\n    const { userId, logout } = useUser();\n    const [products, setProducts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [productLoading, setProductLoading] = useState({});\n    const [searchQuery, setSearchQuery] = useState('');\n    const [quantities, setQuantities] = useState({});\n    const [cartItems, setCartItems] = useState([]);\n    const [cartItemsCount, setCartItemsCount] = useState(0);\n\n    useEffect(() => {\n        fetchProducts();\n        fetchCartDetails();\n    }, []);\n\n    const fetchProducts = async (clearSearchString) => {\n        try {\n            setLoading(true);\n            let queryParams = {};\n            if (searchQuery) {\n                queryParams.searchQuery = searchQuery;\n            }\n            if (clearSearchString) {\n                queryParams.searchQuery = '';\n            }\n            const response = await api.get('/products', { params: queryParams });\n            setProducts(response.data);\n            setLoading(false);\n        } catch (error) {\n            console.error('Error fetching products:', error);\n            setLoading(false);\n        }\n    };\n\n    const handleAddToCart = async (productId, product, quantity) => {\n        try {\n            if (!userId) {\n                alert('Please log in to add items to your cart.');\n                return;\n            }\n            setProductLoading((prevLoading) => ({ ...prevLoading, [productId]: true }));\n            const newItem = { productId, product, quantity };\n            setCartItems((prevCartItems) => [...prevCartItems, newItem]);\n            await api.post('/cart/add', { userId, productId, quantity }).then(response => {\n                if (response) {\n                    fetchCartDetails()\n                    alert('Product added to cart successfully!');\n                    setQuantities((prevQuantities) => (\n                        {\n                            ...prevQuantities,\n                            [productId]: 1,\n                        }));\n                }\n            })\n\n        } catch (error) {\n            console.error('Error adding to cart:', error);\n            alert('Failed to add product to cart.');\n        } finally {\n            setProductLoading((prevLoading) => ({ ...prevLoading, [productId]: false }));\n        }\n    };\n\n    const navigateToOrderManagement = () => {\n        navigation.navigate('OrderManagement');\n    };\n\n    const navigateToSingleProductView = (product) => {\n        navigation.navigate('SingleProductView', { product });\n    };\n\n    const renderItem = ({ item }) => {\n        const productId = item._id;\n        const quantity = quantities[productId] || 1;\n\n        const handleIncrement = (productId) => {\n            setQuantities((prevQuantities) => ({\n                ...prevQuantities,\n                [productId]: (prevQuantities[productId] || 1) + 1,\n            }));\n        };\n\n        const handleDecrement = (productId) => {\n            setQuantities((prevQuantities) => ({\n                ...prevQuantities,\n                [productId]: Math.max(prevQuantities[productId] - 1, 1),\n            }));\n        };\n\n        return (\n            <TouchableOpacity\n                style={styles.productContainer}\n                onPress={() => navigateToSingleProductView(item)} // Navigate to SingleProductViewScreen with product details\n            >\n                <Image source={{ uri: item.imageUrl }} style={styles.productImage} />\n                <View style={styles.productInfo}>\n                    <Text style={styles.productName}>{item.name}</Text>\n                    <Text style={styles.productPrice}>Price: ₹{item.price}</Text>\n                    {/* <View style={styles.quantityContainer}>\n                        <TouchableOpacity\n                            style={styles.quantityButton}\n                            onPress={() => handleDecrement(productId)}\n                        >\n                            <MaterialCommunityIcons name=\"minus\" size={20} color=\"#FFFFFF\" />\n                        </TouchableOpacity>\n                        <TextInput\n                            style={styles.quantityInput}\n                            value={quantity.toString()}\n                            onChangeText={(text) => {\n                                const parsedValue = parseInt(text);\n                                setQuantities((prevQuantities) => ({\n                                    ...prevQuantities,\n                                    [productId]: isNaN(parsedValue) ? 1 : Math.max(parsedValue, 1),\n                                }));\n                            }}\n                            keyboardType=\"numeric\"\n                        />\n                        <TouchableOpacity\n                            style={styles.quantityButton}\n                            onPress={() => handleIncrement(productId)}\n                        >\n                            <MaterialCommunityIcons name=\"plus\" size={20} color=\"#FFFFFF\" />\n                        </TouchableOpacity>\n                    </View> */}\n                    <TouchableOpacity\n                        style={styles.addToCartButton}\n                        onPress={() => handleAddToCart(item._id, item, quantity)}\n                        disabled={productLoading[item._id]}\n                    >\n                        {productLoading[item._id] ? (\n                            <ActivityIndicator size=\"small\" color=\"#fff\" />\n                        ) : (\n                            <Text style={styles.addToCartButtonText}>Add to Cart</Text>\n                        )}\n                    </TouchableOpacity>\n                </View>\n            </TouchableOpacity>\n        );\n    };\n\n    const handleSearch = () => {\n        fetchProducts(); // Fetch products based on the updated search query\n    };\n\n    const handleClearSearch = () => {\n        setSearchQuery('');\n        fetchProducts(true); // Fetch all products again when the search is cleared\n    };\n\n    const calculateTotalCartCount = (cartItems) => {\n        return cartItems.reduce((total, item) => total + item.quantity, 0);\n    };\n\n    const fetchCartDetails = async () => {\n        try {\n            const response = await api.get(`/cart/?userId=${userId}`);\n            const cartItems = response.data;\n            const cartCount = calculateTotalCartCount(cartItems)\n            setCartItemsCount(cartCount);\n        } catch (error) {\n            console.error('Error fetching cart details:', error);\n        }\n    };\n\n    if (loading) {\n        return (\n            <View style={styles.loaderContainer}>\n                <ActivityIndicator size=\"large\" color=\"#FFFFFF\" />\n            </View>\n        );\n    }\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.topBar}>\n                <View style={styles.searchContainer}>\n                    <TextInput\n                        style={styles.searchInput}\n                        placeholder=\"Search...\"\n                        value={searchQuery}\n                        onChangeText={setSearchQuery}\n                        onSubmitEditing={handleSearch} // Handle search when the user presses Enter on the keyboard\n                    />\n                    {searchQuery !== '' && (\n                        <TouchableOpacity\n                            style={styles.clearSearchButton}\n                            onPress={handleClearSearch}\n                        >\n                            <MaterialCommunityIcons name=\"close\" size={20} color=\"#999\" />\n                        </TouchableOpacity>\n                    )}\n                </View>\n                <View style={styles.topRightBar}>\n                    <TouchableOpacity onPress={navigateToOrderManagement}>\n                        <MaterialCommunityIcons name=\"history\" size={24} color=\"#007DBC\" />\n                    </TouchableOpacity>\n                </View>\n            </View>\n            {(products.length === 0 && !loading) ? ( // Check if the products array is empty\n                <View style={styles.noDataContainer}>\n                    <Text style={styles.noDataText}>No data available.</Text>\n                </View>\n            ) : (\n                <FlatList\n                    data={products}\n                    renderItem={renderItem}\n                    keyExtractor={(item) => item._id}\n                    contentContainerStyle={styles.productList}\n                    showsVerticalScrollIndicator={false}\n                    refreshControl={\n                        <RefreshControl\n                            refreshing={loading}\n                            onRefresh={() => {\n                                fetchProducts();\n                                fetchCartDetails();\n                            }}\n                        />\n                    }\n                />\n            )}\n            {cartItemsCount > 0 && <CartCountCard cartItemsCount={cartItemsCount} />}\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#f9f9f9',\n    },\n    topBar: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundColor: '#fff',\n        paddingVertical: 16,\n        paddingHorizontal: 24,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ddd',\n    },\n    searchInput: {\n        flex: 1,\n        borderRadius: 8,\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        fontSize: 16,\n    },\n    searchContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 6,\n        width: '90%',\n    },\n    clearSearchButton: {\n        padding: 8,\n        marginLeft: 8,\n    },\n    topRightBar: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundColor: '#fff',\n        marginEnd: -8, // To align with the right side of the screen in RTL mode\n    },\n    topRightBarCart: {\n        right: 10,\n    },\n    title: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#333',\n    },\n    productList: {\n        paddingVertical: 16,\n        paddingHorizontal: 24,\n    },\n    productContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 20,\n        borderRadius: 10,\n        backgroundColor: '#fff',\n        padding: 16,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.2,\n        shadowRadius: 4,\n        elevation: 3,\n    },\n    productImage: {\n        width: 100,\n        height: 100,\n        resizeMode: 'cover',\n        borderRadius: 10,\n        marginRight: 16,\n    },\n    productInfo: {\n        flex: 1,\n    },\n    productName: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#333',\n        marginBottom: 8,\n    },\n    productPrice: {\n        fontSize: 16,\n        color: '#777',\n        marginBottom: 8,\n    },\n    quantityContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 8,\n    },\n    quantityButton: {\n        backgroundColor: '#007DBC',\n        padding: 8,\n        borderRadius: 4,\n    },\n    quantityInput: {\n        flex: 1,\n        marginHorizontal: 8,\n        paddingHorizontal: 8,\n        paddingVertical: 4,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 4,\n        fontSize: 16,\n        width: 30,\n    },\n    addToCartButton: {\n        backgroundColor: '#007DBC',\n        paddingVertical: 8,\n        paddingHorizontal: 12,\n        borderRadius: 6,\n    },\n    addToCartButtonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 14,\n        textAlign: 'center',\n    },\n    loadingContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    popoverBackground: {\n        flex: 1,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    popoverContent: {\n        backgroundColor: '#fff',\n        padding: 16,\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: '#ccc',\n    },\n    popoverOption: {\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n    },\n    popoverOptionText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#007DBC',\n    },\n    cartCountCard: {\n        position: 'absolute',\n        bottom: 20,\n        right: 20,\n        backgroundColor: '#007DBC',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 50,\n        justifyContent: 'center',\n        alignItems: 'center',\n        elevation: 4,\n    },\n    cartCountText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 16,\n    },\n    cartCountLabel: {\n        color: '#fff',\n        fontSize: 12,\n    },\n    noDataContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    noDataText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#777',\n    },\n    loaderContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#005AAA',\n    },\n});\n\nexport default ProductCatalogScreen;\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Cart from '../screens/store/Cart';\nimport CheckoutProcess from '../screens/store/CheckoutProcess';\nimport OrderManagement from '../screens/store/OrderManagement';\nimport SingleProductViewScreen from '../screens/store/SingleProductViewScreen';\nimport ProductCatalogScreen from '../screens/store/ProductCatalogScreen';\n\nconst Stack = createStackNavigator();\n\nconst StoreStackNavigator = () => {\n    return (\n        <Stack.Navigator initialRouteName=\"ProductCatalog\">\n            <Stack.Screen name=\"ProductCatalog\" options={{ headerShown: false, }} component={ProductCatalogScreen} />\n            <Stack.Screen name=\"Cart\"\n                options={{ title: '', headerShown: false, }}\n                component={Cart} />\n            <Stack.Screen\n                name=\"CheckoutProcess\"\n                component={CheckoutProcess}\n                options={{ title: 'Checkout Process' }}\n            />\n            <Stack.Screen\n                name=\"OrderManagement\"\n                component={OrderManagement}\n                options={{ title: 'Order History' }}\n            />\n            <Stack.Screen\n                options={{ title: '', }}\n                name=\"SingleProductView\"\n                component={SingleProductViewScreen}\n            />\n        </Stack.Navigator>\n    );\n};\n\nexport default StoreStackNavigator;\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Modal, Pressable, TextInput } from 'react-native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useUser } from '../context/UserContext';\nimport Home from './Home';\nimport UpdateProfileModal from '../components/UpdateProfileModal';\nimport API_BASE_URL from '../services/config';\nimport { AuthOpen } from '../hooks/useAuth';\nimport Chat from './Chat';\nimport CustomHeader from '../components/CustomHeader';\nimport StoreStackNavigator from '../navigation/StoreStackNavigator';\nconst Tab = createBottomTabNavigator();\n\nconst HomeTabNavigator = ({ route }) => {\n    const navigation = useNavigation();\n    const adIds = route.params?.adIdm\n    const { logout, userToken, fetchUserDetails } = useUser();\n    const { logOut } = AuthOpen();\n    const [isModalVisible, setModalVisible] = React.useState(false);\n    const [isUpdateModalVisible, setUpdateModalVisible] = React.useState(false);\n    const [locationModal, setLocationModal] = React.useState(false);\n\n\n    const [isUserExists, setIsUserExists] = useState(false);\n    const [userProfileData, setUserProfileData] = React.useState({\n        name: '',\n        email: '',\n        gender: '',\n        phone: '',\n    });\n    const handleMyAds = () => {\n        navigation.navigate('UserAds')\n        setModalVisible(false)\n    }\n    const renderPopover = () => (\n        <Modal\n            visible={isModalVisible}\n            transparent={true}\n            onRequestClose={() => {\n                setModalVisible(false);\n                setUpdateModalVisible(false);\n            }}\n        >\n            <Pressable\n                style={styles.popoverBackground}\n                onPress={() => {\n                    setModalVisible(false);\n                    setUpdateModalVisible(false);\n                }}\n            >\n                <View style={styles.popoverContent}>\n\n                    <TouchableOpacity\n                        style={styles.popoverOption}\n                        onPress={handleUpdateProfile}\n                    >\n                        <Text style={styles.popoverOptionText}>Update Profile</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={styles.popoverOption}\n                        onPress={handleMyAds}\n                    >\n                        <Text style={styles.popoverOptionText}>My Ads</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={styles.popoverOption} onPress={handleLogout}>\n                        <Text style={styles.popoverOptionText}>Logout</Text>\n                    </TouchableOpacity>\n                </View>\n            </Pressable>\n        </Modal>\n    );\n\n    useEffect(() => {\n        if (adIds) {\n            setTimeout(() => {\n                navigation.navigate('SingleScreenAd', { adIds });\n            }, 100);\n        }\n    }, [adIds]);\n\n    useEffect(() => {\n        fetchUserExistsStatus()\n    }, []);\n\n    const fetchUserExistsStatus = async () => {\n        const checkPhoneResponse = await fetch(`${API_BASE_URL}/user/check-phone/${userToken.toString()}`);\n        const checkPhoneData = await checkPhoneResponse.json();\n        if (checkPhoneData.exists) {\n            fetchUserDetails()\n        }\n        setUpdateModalVisible(!checkPhoneData.exists)\n        setIsUserExists(checkPhoneData.exists)\n    }\n\n    const toggleModal = () => {\n        setModalVisible(!isModalVisible);\n        if (isUpdateModalVisible) {\n            setUpdateModalVisible(false);\n        }\n    };\n\n\n    const handleUpdateProfile = () => {\n        setModalVisible(false);\n        const fetchedProfileData = {\n            name: 'John Doe',\n            email: 'johndoe@example.com',\n            gender: 'Male',\n        };\n\n        setUserProfileData(fetchedProfileData);\n        setUpdateModalVisible(true);\n    };\n\n    const handleLogout = () => {\n        logout();\n        logOut()\n    };\n\n    const handleDismissUpdateModal = () => {\n        setUpdateModalVisible(false)\n        fetchUserExistsStatus()\n    }\n\n    const renderCustomHeader = () => {\n        return (\n            <CustomHeader\n                onBackPress={() => navigation.goBack()}\n                onSettingPress={toggleModal}\n                locationModal={locationModal}\n                setLocationModal={setLocationModal}\n            />\n        );\n    };\n    return (\n        <>\n            <Tab.Navigator\n                tabBarOptions={{\n                    activeTintColor: '#007DBC',\n                    inactiveTintColor: 'gray',\n                    showLabel: true,\n                    style: styles.tabBar,\n                    headerShown: false\n                }}\n                screenOptions={({ route }) => ({\n                    // headerRight: () => (\n                    //     <TouchableOpacity onPress={toggleModal}>\n                    //         <MaterialCommunityIcons\n                    //             name=\"cog\"\n                    //             size={24}\n                    //             color=\"#000\"\n                    //             style={{ marginRight: 16 }}\n                    //         />\n                    //     </TouchableOpacity>\n                    // ),\n                    header: renderCustomHeader\n\n                })}\n            >\n                <Tab.Screen\n                    name=\"HomeTabNavigator\"\n                    component={Home}\n                    options={{\n                        title: 'Home',\n                        tabBarIcon: ({ color, focused }) => (\n                            <MaterialCommunityIcons\n                                name={focused ? 'home' : 'home-outline'}\n                                size={24}\n                                color={color}\n                            />\n                        ),\n                    }}\n                />\n                <Tab.Screen\n                    name=\"Store\"\n                    component={StoreStackNavigator}\n                    options={{\n                        tabBarIcon: ({ color, focused }) => (\n                            <MaterialCommunityIcons\n                                name={focused ? 'shopping' : 'shopping'}\n                                size={24}\n                                color={color}\n                            />\n                        ),\n                    }}\n                />\n                <Tab.Screen\n                    name=\"Message\"\n                    component={Chat}\n                    options={{\n                        tabBarIcon: ({ color, focused }) => (\n                            <MaterialCommunityIcons\n                                name={focused ? 'message' : 'message'}\n                                size={24}\n                                color={color}\n                            />\n                        ),\n                    }}\n                />\n            </Tab.Navigator>\n            {renderPopover()}\n            {isUpdateModalVisible && (<UpdateProfileModal\n                isVisible={isUpdateModalVisible}\n                onDismiss={handleDismissUpdateModal}\n                userProfileData={userProfileData}\n                isUserExists={isUserExists}\n                setLocationModal={setLocationModal}\n                onUpdateProfile={(updatedData) => {\n                    // Handle updating the user profile here\n                    setUserProfileData(updatedData);\n                }}\n            />)}\n\n        </>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        padding: 16,\n    },\n    tabBar: {\n        backgroundColor: 'white',\n        borderTopWidth: 0,\n        elevation: 2,\n    },\n    addButton: {\n        backgroundColor: '#007DBC',\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        alignItems: 'center',\n        justifyContent: 'center',\n        bottom: 16,\n        elevation: 4,\n    },\n    addButtonText: {\n        color: 'white',\n        fontSize: 32,\n        fontWeight: 'bold',\n    },\n    popoverBackground: {\n        flex: 1,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    popoverContent: {\n        backgroundColor: '#fff',\n        padding: 16,\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: '#ccc',\n    },\n    popoverOption: {\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n    },\n    popoverOptionText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#007DBC',\n    },\n});\n\nexport default HomeTabNavigator;\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    Image,\n    ScrollView,\n    Switch,\n    StyleSheet,\n    Button,\n    ActivityIndicator,\n} from 'react-native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport RNPickerSelect from 'react-native-picker-select';\nimport * as ImagePicker from 'expo-image-picker'; // For image upload\nimport { RNS3 } from 'react-native-aws3'; // For S3 upload\nimport { useUser } from '../context/UserContext';\nimport axios from 'axios';\nimport Toast from 'react-native-toast-message'; // Import the toast library\nimport API_BASE_URL from '../services/config';\nimport { useNavigation, } from '@react-navigation/native';\nimport { AuthOpen } from '../hooks/useAuth';\n\nexport default function PostAdScreen({ route }) {\n    const navigation = useNavigation();\n    const { userToken, userDetails, userInfo } = useUser();\n    const [images, setImages] = useState([]); // Store image URIs\n    const [location, setLocation] = useState(route.params?.ad?.location || null);\n    const [adTitle, setAdTitle] = useState(route.params?.ad?.adTitle || '');\n    const [adDescription, setAdDescription] = useState(route.params?.ad?.adDescription || '');\n    const [phone, setPhone] = useState(route.params?.ad?.phone || '');\n    const [email, setEmail] = useState(route.params?.ad?.email || '');\n    const [price, setPrice] = useState(route.params?.ad?.price || 0);\n    const [maxResidents, setMaxResidents] = useState(route.params?.ad?.maxResidents || 1);\n    const [preference, setPreference] = useState(route.params?.ad?.preference || null);\n    const [isMaleOnly, setIsMaleOnly] = useState(route.params?.ad?.isMaleOnly || false);\n    const [isFurnished, setIsFurnished] = useState(route.params?.ad?.isFurnished || false);\n    const [hasAttachedBathroom, setHasAttachedBathroom] = useState(\n        route.params?.ad?.hasAttachedBathroom || false\n    );\n    const [isBachelorsAllowed, setIsBachelorsAllowed] = useState(\n        route.params?.ad?.isBachelorsAllowed || false\n    );\n    const [loading, setLoading] = useState(false); // Loading state\n    const handleImageUpload = async () => {\n        const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n        if (permissionResult.granted === false) {\n            alert('Permission to access camera roll is required!');\n            return;\n        }\n\n        const pickerResult = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n            multiple: true, // Allow selecting multiple images\n        });\n        if (!pickerResult.cancelled) {\n            // Create a new array with the selected image URIs\n            const newImages = [...images, pickerResult.assets[0].uri];\n            setImages(newImages);\n        }\n    };\n\n    const uploadImagesToS3 = async () => {\n\n        Toast.show({\n            type: 'error',\n            text1: 'Error Uploading Image',\n            text2: 'Please try again later.',\n        });\n        let s3Images = [];\n\n        for (const imageUri of images) {\n            const options = {\n                keyPrefix: 'uploads/',\n                bucket: 'primecaves',\n                region: 'ap-south-1',\n                accessKey: 'AKIARM6FSFR7MWP7YQUY',\n                secretKey: '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',\n                successActionStatus: 201,\n            };\n            const file = {\n                uri: imageUri,\n                name: `${userToken.toString()}-${Date.now()}.jpeg`,\n                type: 'image/jpeg',\n            };\n\n            try {\n                const response = await RNS3.put(file, options);\n                if (response.status !== 201) {\n                    throw new Error('Failed to upload image to S3');\n                }\n\n                const s3ImageUrl = response.body.postResponse.location;\n                s3Images.push(s3ImageUrl);\n                // Inside the upload loop after a successful upload\n                Toast.show({\n                    type: 'success',\n                    text1: 'Image Uploaded',\n                    text2: 'Image has been successfully uploaded.',\n                });\n\n            } catch (error) {\n                console.error('Error uploading image:', error);\n                // Show a toast message for the error\n                Toast.show({\n                    type: 'error',\n                    text1: 'Error Uploading Image',\n                    text2: 'Please try again later.',\n                });\n\n            }\n        }\n\n        return s3Images;\n    };\n\n\n    const handleSubmit = async () => {\n        try {\n            let s3Images = [];\n            // Upload images to S3 and wait for the operation to complete\n            if (images) {\n                s3Images = await uploadImagesToS3();\n            }\n            const postData = {\n                images: s3Images,\n                location,\n                adTitle,\n                adDescription,\n                phone,\n                email,\n                maxResidents,\n                preference,\n                isMaleOnly,\n                isFurnished,\n                hasAttachedBathroom,\n                isBachelorsAllowed,\n                price,\n                userId: userDetails._id,\n                user: {\n                    firebaseId: userInfo.firebaseId,\n                    gender: userDetails.gender,\n                    image: userDetails.image,\n                    name: userDetails.name,\n                    phone: userDetails.phoneNumber\n                }\n            };\n            setLoading(true);\n            if (route.params?.ad) {\n                // If route.params.ad exists, it means we're updating an existing ad\n                const response = await axios.put(\n                    `${API_BASE_URL}/rentpost/update/${route.params.ad._id}`,\n                    postData\n                );\n\n                // Check the response status and show a success or error toast\n                if (response.status === 200) {\n                    // Ad updated successfully\n                    console.log('Rental post updated successfully.');\n                    Toast.show({\n                        type: 'success',\n                        text1: 'Rental Post Updated',\n                        text2: 'Your rental post has been successfully updated.',\n                    });\n                    navigation.navigate('HomeTabNavigator');\n                } else {\n                    console.error('Failed to update rental post.');\n                    Toast.show({\n                        type: 'error',\n                        text1: 'Error Updating Rental Post',\n                        text2: 'Please try again later.',\n                    });\n                }\n            } else {\n                // If route.params.ad does not exist, it means we're creating a new ad\n                const response = await axios.post(`${API_BASE_URL}/rentpost/create`, postData);\n\n                // Check the response status and show a success or error toast\n                if (response.status === 201) {\n                    // Ad created successfully\n                    console.log('Rental post created successfully.');\n                    Toast.show({\n                        type: 'success',\n                        text1: 'Rental Post Created',\n                        text2: 'Your rental post has been successfully created.',\n                    });\n                    // navigation.navigate('HomeTabNavigator')\n                    navigation.goBack()\n                } else {\n                    console.error('Failed to create rental post.');\n                    Toast.show({\n                        type: 'error',\n                        text1: 'Error Creating Rental Post',\n                        text2: 'Please try again later.',\n                    });\n                }\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            // Handle error appropriately (e.g., show an error message to the user)\n            Toast.show({\n                type: 'error',\n                text1: 'Error',\n                text2: 'Please try again later.',\n            });\n        } finally {\n            // Set loading state back to false when done\n            setLoading(false);\n        }\n    };\n\n    const handleDeleteImage = (index) => {\n        const newImages = images.filter((_, i) => i !== index);\n        setImages(newImages);\n    };\n\n\n    return (\n        <ScrollView style={styles.container}>\n            {loading && (\n\n                <View style={styles.activityIndicatorContainer}>\n                    <ActivityIndicator size=\"large\" color=\"#007DBC\" />\n                </View>\n            )}\n            <View style={styles.imageContainer}>\n                {/* Custom back button with Ionicons */}\n                <TouchableOpacity\n                    style={styles.backButton}\n                    onPress={() => navigation.goBack()}\n                >\n                    <Ionicons name=\"arrow-back\" size={24} color=\"#007DBC\" />\n                </TouchableOpacity>\n                {/* ... Your existing JSX ... */}\n            </View>\n            <View style={styles.imageContainer}>\n                <Text style={styles.heading}>Upload Photos</Text>\n                <TouchableOpacity style={styles.imageUploadButton} onPress={handleImageUpload}>\n                    <Text style={styles.uploadButtonText}>Select Images</Text>\n                </TouchableOpacity>\n                <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n                    {images.map((imageUri, index) => (\n                        <View key={index} style={styles.imageWrapper}>\n                            <Image source={{ uri: imageUri }} style={styles.image} />\n                            <TouchableOpacity\n                                style={styles.deleteIcon}\n                                onPress={() => handleDeleteImage(index)}\n                            >\n                                <Ionicons name=\"close-circle\" size={24} color=\"red\" />\n                            </TouchableOpacity>\n                        </View>\n                    ))}\n\n\n                </ScrollView>\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Location</Text>\n                <RNPickerSelect\n                    placeholder={{ label: 'Select Location', value: null }}\n                    onValueChange={(value) => setLocation(value)}\n                    items={[\n                        { label: 'Patia', value: 'Patia' },\n                        { label: 'Nayapali', value: 'Nayapali' },\n                        { label: 'CSpur', value: 'CSpur' },\n                        { label: 'Master Canteen', value: 'Master Canteen' },\n                    ]}\n                    style={pickerSelectStyles}\n                    value={location}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Ad Title</Text>\n                <TextInput\n                    style={styles.input}\n                    value={adTitle}\n                    onChangeText={setAdTitle}\n                    placeholder=\"Enter Ad Title\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Ad Description</Text>\n                <TextInput\n                    style={[styles.input, styles.multilineInput]}\n                    value={adDescription}\n                    onChangeText={setAdDescription}\n                    multiline\n                    placeholder=\"Enter Ad Description\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Phone Number</Text>\n                <TextInput\n                    style={styles.input}\n                    value={phone}\n                    onChangeText={setPhone}\n                    keyboardType=\"numeric\"\n                    placeholder=\"Enter Phone Number\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Email</Text>\n                <TextInput\n                    style={styles.input}\n                    value={email}\n                    onChangeText={setEmail}\n                    keyboardType=\"email-address\"\n                    placeholder=\"Enter Email\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Price</Text>\n                <TextInput\n                    style={styles.input}\n                    value={price}\n                    onChangeText={setPrice}\n                    keyboardType=\"numeric\"\n                    placeholder=\"Enter Price\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Maximum Residents</Text>\n                <View style={styles.stepperContainer}>\n                    <TouchableOpacity\n                        style={styles.stepperButton}\n                        onPress={() => maxResidents > 1 && setMaxResidents(maxResidents - 1)}\n                    >\n                        <Text style={styles.stepperButtonText}>-</Text>\n                    </TouchableOpacity>\n                    <Text style={styles.stepperValue}>{maxResidents}</Text>\n\n                    <TouchableOpacity\n                        style={styles.stepperButton}\n                        onPress={() => setMaxResidents(maxResidents + 1)}\n                    >\n                        <Text style={styles.stepperButtonText}>+</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Preference</Text>\n                <RNPickerSelect\n                    value={preference}\n                    placeholder={{ label: 'Select Preference', value: null }}\n                    onValueChange={(value) => setPreference(value)}\n                    items={[\n                        { label: 'Family', value: 'Family' },\n                        { label: 'Student', value: 'Student' },\n                        { label: 'Working Professional', value: 'Working Professional' },\n                    ]}\n                    style={pickerSelectStyles}\n\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Room for Male Only</Text>\n                <Switch\n                    value={isMaleOnly}\n                    onValueChange={setIsMaleOnly}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Furnishing</Text>\n                <Switch\n                    value={isFurnished}\n                    onValueChange={setIsFurnished}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Attached Bathroom</Text>\n                <Switch\n                    value={hasAttachedBathroom}\n                    onValueChange={setHasAttachedBathroom}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Bachelors Allowed</Text>\n                <Switch\n                    value={isBachelorsAllowed}\n                    onValueChange={setIsBachelorsAllowed}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <TouchableOpacity\n                style={styles.submitButton}\n                onPress={handleSubmit}\n                disabled={loading} // Disable the button while loading\n            >\n                <Text style={styles.submitButtonText}>{loading ? 'Loading...' : 'Submit'}</Text>\n            </TouchableOpacity>\n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16,\n        backgroundColor: '#fff',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        color: '#007DBC',\n    },\n    imageContainer: {\n        marginBottom: 20,\n    },\n    imageUploadButton: {\n        backgroundColor: '#007DBC',\n        padding: 10,\n        borderRadius: 5,\n        alignItems: 'center',\n        bottom: 8,\n    },\n    uploadButtonText: {\n        color: 'white',\n        fontWeight: 'bold',\n    },\n    image: {\n        width: 100,\n        height: 100,\n        marginRight: 10,\n        borderRadius: 5,\n    },\n    fieldContainer: {\n        marginBottom: 20,\n    },\n    label: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginBottom: 5,\n        color: '#007DBC',\n    },\n    input: {\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n        padding: 10,\n    },\n    multilineInput: {\n        minHeight: 100,\n        textAlignVertical: 'top',\n    },\n    stepperContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    stepperButton: {\n        backgroundColor: '#007DBC',\n        padding: 8,\n        borderRadius: 20,\n        marginHorizontal: 5,\n    },\n    stepperButtonText: {\n        color: 'white',\n        fontSize: 18,\n    },\n    stepperValue: {\n        fontSize: 16,\n    },\n    submitButton: {\n        backgroundColor: '#007DBC',\n        padding: 16,\n        borderRadius: 5,\n        alignItems: 'center',\n    },\n    submitButtonText: {\n        color: 'white',\n        fontWeight: 'bold',\n        fontSize: 18,\n    },\n    imageWrapper: {\n        position: 'relative',\n        marginRight: 10,\n        alignItems: 'center', // Center items horizontally in the container\n        paddingBottom: 30,    // Add padding to accommodate delete icon at the bottom\n    },\n    deleteIcon: {\n        position: 'absolute',\n        bottom: 0,\n        alignSelf: 'center',\n    },\n    activityIndicatorContainer: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'rgba(255, 255, 255, 0.7)', // Optional: Add a white translucent background\n    },\n});\n\n\nconst pickerSelectStyles = StyleSheet.create({\n    inputIOS: {\n        borderWidth: 1,\n        borderColor: '#007DBC',  // Set the border color\n        borderRadius: 5,\n        paddingVertical: 12,\n        paddingHorizontal: 10,\n        paddingRight: 30, // to ensure the text is never behind the icon\n        marginBottom: 20,\n        backgroundColor: '#f2f2f2', // Example style addition\n    },\n    inputAndroid: {\n        borderWidth: 1,\n        borderColor: '#007DBC',  // Set the border color\n        borderRadius: 5,\n        paddingVertical: 10,\n        paddingHorizontal: 10,\n        paddingRight: 30, // to ensure the text is never behind the icon\n        marginBottom: 20,\n        // backgroundColor: '#f2f2f2', // Example style addition\n    },\n\n});\n","// AdCard.js\nimport React from 'react';\nimport { View, Text, Image, TouchableOpacity, StyleSheet } from 'react-native';\n\nconst AdCard = ({ ad, onEdit, onDelete, onClaim }) => {\n    return (\n        <View style={styles.container}>\n            <Image source={{ uri: ad.images[0] }} style={styles.image} />\n            <Text style={styles.title}>{ad.adTitle}</Text>\n            <Text style={styles.location}>{ad.location}</Text>\n            <View style={styles.buttonContainer}>\n                <TouchableOpacity style={styles.button} onPress={() => onEdit(ad)}>\n                    <Text style={styles.buttonText}>Edit</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.button} onPress={() => onDelete(ad._id)}>\n                    <Text style={styles.buttonText}>Delete</Text>\n                </TouchableOpacity>\n                {/* <TouchableOpacity style={styles.button} onPress={() => onClaim(ad)}>\n                    <Text style={styles.buttonText}>Claim </Text>\n                </TouchableOpacity> */}\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'white',\n        borderRadius: 10,\n        padding: 10,\n        marginBottom: 20,\n        elevation: 2,\n    },\n    image: {\n        width: '100%',\n        height: 200,\n        borderRadius: 10,\n        marginBottom: 10,\n    },\n    title: {\n        fontSize: 16,\n        fontWeight: 'bold',\n    },\n    location: {\n        fontSize: 14,\n        color: 'gray',\n        marginBottom: 10,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    button: {\n        flex: 1,\n        backgroundColor: '#3182CE',\n        borderRadius: 5,\n        padding: 10,\n        alignItems: 'center',\n        marginHorizontal: 5,\n    },\n    buttonText: {\n        color: 'white',\n        fontWeight: 'bold',\n    },\n});\n\nexport default AdCard;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { View, FlatList, Text, TouchableOpacity, StyleSheet, Image, ActivityIndicator, RefreshControl, Linking } from 'react-native';\nimport Modal from 'react-native-modal';\nimport AdCard from '../components/AdCard'; // Import the AdCard component\nimport API_BASE_URL from '../services/config'; // Your API base URL\nimport { FontAwesome } from '@expo/vector-icons'; // Import FontAwesome icons\nimport { useNavigation } from '@react-navigation/native'; // Import the useNavigation hook\nimport { useUser } from '../context/UserContext';\nimport { MaterialIcons, Entypo, AntDesign } from '@expo/vector-icons';\n\nconst UserAds = () => {\n    const { userDetails } = useUser();\n    const [userAds, setUserAds] = useState([]);\n    const [selectedAd, setSelectedAd] = useState(null); // To store the selected ad for the modal\n    const [isModalVisible, setModalVisible] = useState(false);\n    const [isLoading, setIsLoading] = useState(false); // To track delete operation loading state\n    const [isDeleteConfirmationVisible, setDeleteConfirmationVisible] = useState(false); // To show delete confirmation modal\n    const navigation = useNavigation(); // Get the navigation object\n    const [refreshing, setRefreshing] = useState(false);\n    const [isClaimModalVisible, setClaimModalVisible] = useState(false);\n\n    useEffect(() => {\n        // Fetch user's posted ads from the backend\n        const fetchUserAds = async () => {\n            try {\n                const response = await fetch(`${API_BASE_URL}/rentpost/user/${userDetails._id}`);\n                if (response.ok) {\n                    const data = await response.json();\n                    setUserAds(data);\n                } else {\n                    console.error('Failed to fetch user ads');\n                }\n            } catch (error) {\n                console.error('Error fetching user ads:', error);\n            }\n        };\n\n        fetchUserAds();\n    }, []);\n\n    const handleEdit = (ad) => {\n        navigation.navigate('PostAd', { ad });\n    };\n\n    const renderClaimModal = () => (\n        <Modal isVisible={isClaimModalVisible}>\n            <View style={styles.claimModalContainer}>\n                <TouchableOpacity\n                    onPress={() => setClaimModalVisible(false)}\n                    style={styles.modalCloseButton}\n                >\n                    <AntDesign name=\"close\" size={24} color=\"black\" />\n                </TouchableOpacity>\n                <Text style={styles.claimModalText}>\n                    To Claim Rewards Please contact through any of the options\n                </Text>\n                <TouchableOpacity\n                    style={styles.iconButton}\n                    onPress={handleEmail}\n                >\n                    <MaterialIcons name=\"email\" size={24} color=\"white\" />\n                    <Text style={styles.iconButtonText}>Email</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                    style={styles.iconButton}\n                    // onPress={() => {/* Handle phone action */ }}\n                    onPress={handlePhoneCall}\n                >\n                    <Entypo name=\"phone\" size={24} color=\"white\" />\n                    <Text style={styles.iconButtonText}>Call</Text>\n                </TouchableOpacity>\n            </View>\n        </Modal>\n    );\n\n    const renderEmptyListComponent = () => (\n        <View style={styles.emptyListContainer}>\n            <Text style={styles.emptyListText}>You have no ads posted yet.</Text>\n        </View>\n    );\n\n    const handleEmail = () => {\n        const email = \"primecaves@gmail.com\";\n        Linking.openURL(`mailto:${email}`)\n            .catch((err) => console.error('An error occurred', err));\n    };\n\n    const handlePhoneCall = () => {\n        const phoneNumber = \"7008105210\";\n        Linking.openURL(`tel:${phoneNumber}`)\n            .catch((err) => console.error('An error occurred', err));\n    };\n\n    const handleDelete = async (adId) => {\n        setIsLoading(true);\n\n        try {\n            // Send a request to delete the ad by its ID\n            const response = await fetch(`${API_BASE_URL}/rentpost/delete/${adId}`, {\n                method: 'DELETE',\n            });\n\n            if (response.ok) {\n                // Remove the deleted ad from the userAds state\n                setUserAds((prevAds) => prevAds.filter((ad) => ad._id !== adId));\n            } else {\n                console.error('Failed to delete ad');\n            }\n        } catch (error) {\n            console.error('Error deleting ad:', error);\n        } finally {\n            // Reset loading state\n            setIsLoading(false);\n            // Close the modal\n            setDeleteConfirmationVisible(false);\n        }\n    };\n\n    const handleClaim = (ad) => {\n        // Implement your claim logic here\n        setSelectedAd(ad);\n        setClaimModalVisible(true);\n    };\n\n    const toggleModal = (ad) => {\n\n        setModalVisible(!isModalVisible);\n    };\n\n\n    const handleDeleteAd = (ad) => {\n        setSelectedAd(ad);\n        setDeleteConfirmationVisible(true)\n    }\n\n    const onRefresh = useCallback(async () => {\n        setRefreshing(true);\n\n        try {\n            // Fetch user's posted ads from the backend\n            const response = await fetch(`${API_BASE_URL}/rentpost/user/${userDetails._id}`);\n            if (response.ok) {\n                const data = await response.json();\n                setUserAds(data);\n            } else {\n                console.error('Failed to fetch user ads');\n            }\n        } catch (error) {\n            console.error('Error fetching user ads:', error);\n        } finally {\n            setRefreshing(false);\n        }\n    }, []);\n\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                {/* Back button */}\n                <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>\n                    <FontAwesome name=\"arrow-left\" size={24} color=\"black\" />\n                </TouchableOpacity>\n                <Text style={styles.headerText}>Your Ads</Text>\n            </View>\n            <FlatList\n                data={userAds}\n                keyExtractor={(item) => item._id}\n                renderItem={({ item }) => (\n                    <TouchableOpacity onPress={() => toggleModal(item)}>\n                        <AdCard ad={item} onEdit={handleEdit} onDelete={() => handleDeleteAd(item)} onClaim={handleClaim} />\n                    </TouchableOpacity>\n                )}\n                ListEmptyComponent={renderEmptyListComponent}\n                refreshControl={\n                    <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n                }\n            />\n            {isClaimModalVisible && renderClaimModal()}\n            <Modal isVisible={isModalVisible}>\n                <View style={styles.modalContainer}>\n                    <TouchableOpacity onPress={() => setModalVisible(false)} style={styles.closeButton}>\n                        <Text style={styles.closeButtonText}>Close</Text>\n                    </TouchableOpacity>\n                    {/* Display ad details here */}\n                    {selectedAd && (\n                        <View>\n                            <Text>{selectedAd.adTitle}</Text>\n                            <Text>{selectedAd.location}</Text>\n                            <Image source={{ uri: selectedAd.images[0] }} style={styles.image} />\n                            {/* Add other ad details */}\n                        </View>\n                    )}\n                </View>\n            </Modal>\n            {/* Delete confirmation modal */}\n            <Modal isVisible={isDeleteConfirmationVisible}>\n                <View style={styles.deleteConfirmationContainer}>\n                    <Text style={styles.deleteConfirmationText}>Are you sure you want to delete this ad?</Text>\n                    <View style={styles.deleteConfirmationButtons}>\n                        <TouchableOpacity onPress={() => setDeleteConfirmationVisible(false)} style={styles.cancelButton}>\n                            <Text style={styles.cancelButtonText}>Cancel</Text>\n                        </TouchableOpacity>\n                        {isLoading ? (\n                            <ActivityIndicator size=\"small\" color=\"blue\" />\n                        ) : (\n                            <TouchableOpacity onPress={() => handleDelete(selectedAd._id)} style={styles.confirmButton}>\n                                <Text style={styles.confirmButtonText}>Delete</Text>\n                            </TouchableOpacity>\n                        )}\n                    </View>\n                </View>\n            </Modal>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16, // Add padding for the ads\n    },\n    header: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 16, // Add margin at the bottom of the header\n    },\n    backButton: {\n        marginRight: 8,\n    },\n    headerText: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    modalContainer: {\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 10,\n    },\n    image: {\n        width: '100%',\n        height: 200,\n        borderRadius: 10,\n        marginBottom: 10,\n    },\n    deleteConfirmationContainer: {\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 10,\n    },\n    deleteConfirmationText: {\n        fontSize: 18,\n        marginBottom: 20,\n    },\n    deleteConfirmationButtons: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n    },\n    confirmButton: {\n        backgroundColor: 'red',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 5,\n    },\n    emptyListContainer: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 20,\n    },\n    emptyListText: {\n        fontSize: 16,\n        color: '#999',\n    },\n    confirmButtonText: {\n        color: 'white',\n    },\n    cancelButton: {\n        backgroundColor: '#3182CE',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 5,\n        marginRight: 10,\n    },\n    cancelButtonText: {\n        color: 'white',\n    },\n    closeButton: {\n        backgroundColor: '#3182CE',\n        padding: 8,\n        borderRadius: 5,\n    },\n    closeButtonText: {\n        color: 'white',\n    },\n    claimModalContainer: {\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 10,\n        alignItems: 'center',\n    },\n    claimModalText: {\n        fontSize: 16,\n        top: 10,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n    iconButton: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        backgroundColor: '#007DBC',\n        paddingHorizontal: 15,\n        paddingVertical: 10,\n        borderRadius: 5,\n        marginBottom: 10,\n    },\n    iconButtonText: {\n        marginLeft: 10,\n        color: 'white',\n    },\n    modalCloseButton: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        padding: 8,\n        zIndex: 1,\n    },\n});\n\nexport default UserAds;\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, Image, TouchableOpacity, ScrollView, SafeAreaView, Share, Platform, Clipboard, Alert, ActivityIndicator, } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { db } from '../firebase/firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useUser } from '../context/UserContext';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport API_BASE_URL, { DOMAIN_URL } from '../services/config';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons'; // Import for larger icon\nimport DownloadAppModal from '../components/DownloadAppModal';\n\nconst amenitiesMapping = [\n    { key: 'isFurnished', label: 'Furnished', icon: 'bed-outline' },\n    { key: 'hasAttachedBathroom', label: 'Attached Bathroom', icon: 'water-outline' },\n    { key: 'isMaleOnly', label: 'Male Only', icon: 'male-outline' },\n    { key: 'isBachelorsAllowed', label: 'Bachelors Allowed', icon: 'people-outline' },\n];\n\nconst AdDetailsScreen = ({ route }) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const { userInfo } = useUser();\n    const adId = route.params?.adIds;\n    const navigation = useNavigation();\n    const [ad, setAd] = useState();\n    const [firebaseId, setFirebaseId] = useState(ad?.firebaseId);\n    const [flatmatesData, setFlatmatesData] = useState(ad?.flatmates);\n    const [userDetails, setUserDetails] = useState(null);\n    // const [userAllDetails, setUserAllDetails] = useState(null);\n    const [showDirectMessageButton, setShowDirectMessageButton] = useState(false);\n    const [showDownloadAppModal, setShowDownloadAppModal] = useState(false);\n    const isPostedByCurrentUser = firebaseId === userInfo?.firebaseId;\n    const [isAdAvailable, setIsAdAvailable] = useState(true);\n    useEffect(() => {\n        const fetchPostDetails = async () => {\n            setIsLoading(true);\n\n            try {\n                const response = await fetch(`${API_BASE_URL}/rentpost/getPostsById/${adId}`);\n                if (response.ok) {\n                    const data = await response.json();\n                    setAd(data)\n                    setFirebaseId(data?.firebaseId)\n                    setFlatmatesData(data?.flatmates || [])\n                    setIsAdAvailable(true);\n                } else {\n                    setIsAdAvailable(false);\n                    console.error('Failed to fetch user ads');\n                }\n            } catch (error) {\n                console.error('Error fetching user ads:', error);\n            } finally {\n                setIsLoading(false); // Stop loading\n            }\n        };\n\n        if (adId) {\n            fetchPostDetails();\n        }\n    }, [adId]);\n\n\n    const onShare = async () => {\n        const shareMessage = `${ad?.adTitle} At Price ₹${ad?.price}\\n\\n Check this out!! ✨🏠🌟\\n\\n` + `${DOMAIN_URL}/ads/${ad?._id}`;\n\n        if (Platform.OS === 'web') {\n            // Attempt to use the Web Share API if available\n            if (navigator.share) {\n                navigator.share({\n                    title: ad?.adTitle,\n                    text: shareMessage,\n                    // url: ad?.images[0],\n                }).catch(error => console.log('Error sharing', error));\n            } else {\n                Clipboard.setString(shareMessage);\n                Alert.alert('Link copied to clipboard');\n            }\n        } else {\n            // Mobile sharing\n            try {\n                await Share.share({\n                    message: shareMessage,\n                    //url: ad?.images[0], // Include this only if it's a local file\n                });\n            } catch (error) {\n                console.error(error.message);\n            }\n        }\n    };\n\n    // const fetchUserInitialDetails = async (firebaseId) => {\n    //     try {\n    //         const response = await fetch(`${API_BASE_URL}/user/getUserByFirebaseId/${firebaseId}`);\n    //         if (response.ok) {\n    //             const userInfo = await response.json();\n    //             setUserAllDetails(userInfo)\n    //             setShowDirectMessageButton(true);\n    //         } else {\n    //             console.error('Failed to fetch user details');\n    //         }\n    //     } catch (error) {\n    //         console.error('Error fetching user details:', error);\n    //     }\n    // };\n\n    useEffect(() => {\n        const fetchUserDetails = async () => {\n            try {\n                const userDoc = await getDoc(doc(db, 'user_profiles', firebaseId));\n\n                if (userDoc.exists()) {\n                    setUserDetails(userDoc.data());\n                    setShowDirectMessageButton(true);\n                    // fetchUserInitialDetails(firebaseId)\n                }\n            } catch (error) {\n                console.error('Error fetching user details:', error);\n            }\n        };\n\n        if (firebaseId) {\n            fetchUserDetails();\n        }\n    }, [firebaseId]);\n\n\n    const handleDirectMessage = () => {\n        if (Platform.OS === \"web\") {\n            setShowDownloadAppModal(true)\n        }\n        else {\n            navigation.navigate('Message', {\n                userDetails,\n                //userAllDetails,\n                fromAdDetails: true\n            });\n        }\n    };\n\n    const handleBackButton = () => {\n        navigation.goBack();\n    };\n\n    if (isLoading) {\n        return (\n            <View style={styles.loaderContainer}>\n                <ActivityIndicator size=\"large\" color=\"#FFFFFF\" />\n            </View>\n        )\n    }\n    if (!isAdAvailable) {\n        return (\n            <LinearGradient colors={['#007DBC', '#005AAA']} style={styles.soldContainer}>\n                <MaterialIcons name=\"error-outline\" size={60} color=\"white\" />\n                <Text style={styles.soldMessage}>This ad has been sold</Text>\n                <TouchableOpacity onPress={handleBackButton} style={styles.seeMoreButtonContainer}>\n\n                    <Text style={styles.seeMoreButtonText}> See More</Text>\n                    <Ionicons name=\"arrow-forward\" size={24} color=\"white\" />\n                </TouchableOpacity>\n            </LinearGradient>\n        );\n    }\n    return (\n        <SafeAreaView style={styles.flexContainer}>\n            <View style={{ height: \"90%\", backgroundColor: '#f8f9fa', }}>\n                <LinearGradient colors={['#007DBC', '#005AAA']} >\n                    <TouchableOpacity onPress={handleBackButton} style={styles.seeMoreButtonContainer}>\n                        <Ionicons name=\"arrow-back\" size={24} color=\"white\" />\n                    </TouchableOpacity>\n                </LinearGradient>\n                <ScrollView contentContainerStyle={styles.scrollViewContent}>\n                    <Image source={{ uri: ad?.images[0] }} style={styles.villaImage} />\n                    <TouchableOpacity style={styles.shareIcon} onPress={onShare}>\n                        <Ionicons name=\"share-social\" size={24} color=\"white\" />\n                    </TouchableOpacity>\n                    <Text style={styles.villaName}>{ad?.adTitle}</Text>\n                    <Text style={styles.location}>{ad?.location}</Text>\n                    <View style={styles.offerContainer}>\n                        <FontAwesome name=\"check\" size={24} color=\"white\" style={styles.trustIcon} />\n\n                        <Text style={styles.offerText}>Verified User</Text>\n                    </View>\n                    <Text style={styles.description}>{ad?.adDescription}</Text>\n                    {ad &&\n                        (<View style={styles.amenitiesContainer}>\n                            <View style={styles.amenitiesList}>\n                                {amenitiesMapping.map(amenity => {\n                                    if (ad[amenity.key]) {\n                                        return (\n                                            <View style={styles.amenityItem} key={amenity.key}>\n                                                <Ionicons name={amenity.icon} size={24} color=\"white\" />\n                                                <Text style={styles.amenityLabel}>{amenity.label}</Text>\n                                            </View>\n                                        );\n                                    }\n                                    return null;\n                                })}\n                            </View>\n                        </View>)}\n                    {\n                        (ad && flatmatesData.length > 0) &&\n                        (<View style={styles.flatmatesSection}>\n                            <Text style={styles.title}>Flatmates</Text>\n                            <View style={styles.flatmatesGrid}>\n                                {flatmatesData.map((flatmate, index) => (\n                                    <View key={index} style={styles.flatmateCard}>\n                                        <Image source={{ uri: flatmate.image }} style={styles.flatmateImage} />\n                                        <Text style={styles.flatmateName}>{flatmate.name}</Text>\n                                        <Text style={styles.flatmateOccupation}>{flatmate.occupation}</Text>\n                                    </View>\n                                ))}\n                            </View>\n                        </View>)\n                    }\n                </ScrollView>\n            </View>\n            {isPostedByCurrentUser ? (\n                // Display a message indicating that the advertisement is posted by the current user\n                <Text style={styles.postedByCurrentUserMessage}>\n                    This advertisement is posted by you.\n                </Text>\n            ) : showDirectMessageButton && (\n                <View style={styles.footer}>\n                    <View style={styles.priceContainer}>\n                        <Text style={styles.discountedPrice}>₹{ad?.price}/month</Text>\n                    </View>\n                    <TouchableOpacity onPress={handleDirectMessage} style={styles.bookNowButton}>\n                        <Text style={styles.bookNowButtonText}>\n                            Direct Message\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n\n            )}\n            <DownloadAppModal\n                visible={showDownloadAppModal}\n                onClose={() => setShowDownloadAppModal(false)}\n            />\n\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    flexContainer: {\n        flex: 1,\n        backgroundColor: '#f8f9fa',\n        fontFamily: 'open-sans-regular'\n    },\n    container: {\n        flex: 1,\n    },\n    loaderContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#005AAA', // Adjust the color and opacity to match your gradient\n    },\n    footer: {\n        borderTopWidth: 1,\n        borderColor: '#eaecef',\n        backgroundColor: '#fff',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        zIndex: 10,\n        padding: 16,\n        flexDirection: 'row',\n        ...(Platform.OS === 'web' ? {\n            position: 'fixed',\n            bottom: 0,\n            left: 0,\n            right: 0,\n        } : {\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            right: 0,\n        }),\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        padding: 16,\n        alignItems: 'center',\n        borderBottomWidth: 1,\n        borderBottomColor: '#eaecef',\n    },\n    icon: {\n        width: 24,\n        height: 24,\n    },\n    backButton: {\n        fontSize: 18,\n        color: '#007bff',\n    },\n    villaImage: {\n        width: '100%',\n        height: 300,\n        resizeMode: 'cover',\n    },\n    villaName: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginVertical: 8,\n        marginHorizontal: 16,\n        color: '#212529',\n        fontFamily: 'open-sans-bold'\n    },\n    location: {\n        fontSize: 16,\n        color: '#6c757d',\n        marginBottom: 8,\n        marginLeft: 16,\n        fontFamily: 'open-sans-regular'\n    },\n    offerContainer: {\n        flexDirection: 'row',\n        backgroundColor: '#007DBC',\n        padding: 12,\n        marginHorizontal: 16,\n        marginVertical: 8,\n        borderRadius: 4,\n    },\n    offerText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontFamily: 'open-sans-regular'\n    },\n    description: {\n        marginHorizontal: 16,\n        marginVertical: 8,\n        fontSize: 16,\n        color: '#212529',\n        fontFamily: 'open-sans-regular'\n    },\n    hostImage: {\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        margin: 16,\n        borderWidth: 2,\n        borderColor: '#eaecef',\n    },\n    hostName: {\n        fontSize: 18,\n        fontWeight: '500',\n        marginLeft: 16,\n        color: '#212529',\n    },\n    price: {\n        fontSize: 28,\n        fontWeight: 'bold',\n        marginHorizontal: 16,\n        marginVertical: 8,\n        color: '#28a745',\n    },\n    directMessageButton: {\n        backgroundColor: '#28a745',\n        padding: 12,\n        marginHorizontal: 16,\n        marginVertical: 8,\n        borderRadius: 4,\n        alignItems: 'center',\n    },\n    directMessageButtonText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontSize: 18,\n    },\n    postedByCurrentUserMessage: {\n        color: '#dc3545',\n        textAlign: 'center',\n        marginBottom: 10,\n        fontSize: 16,\n    },\n    amenitiesContainer: {\n        padding: 16,\n        borderBottomWidth: 1,\n        borderBottomColor: '#eaecef',\n        backgroundColor: '#fff',\n    },\n    amenitiesTitle: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#212529',\n        marginBottom: 8,\n        fontFamily: 'open-sans-bold'\n    },\n    amenitiesList: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'flex-start',\n    },\n    amenityItem: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        backgroundColor: '#007DBC', // This sets the background color to a blue shade\n        borderRadius: 16,\n        padding: 8,\n        marginRight: 8,\n        marginBottom: 8,\n    },\n    amenityLabel: {\n        marginLeft: 8,\n        fontSize: 14,\n        color: '#FFFFFF', // This sets the text color to white\n        fontFamily: 'open-sans-regular'\n    },\n    priceContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    originalPrice: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        textDecorationLine: 'line-through',\n        marginRight: 8,\n    },\n    discountedPrice: {\n        fontSize: 22,\n        fontWeight: 'bold',\n    },\n    bookNowButton: {\n        backgroundColor: '#28a745',\n        padding: 12,\n        borderRadius: 4,\n        alignItems: 'center',\n    },\n    bookNowButtonText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontSize: 18,\n    },\n    flatmateRow: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    flatmatesSection: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#e9ecef', // Changed background color for better visibility\n    },\n    title: {\n        fontSize: 24,\n        marginBottom: 20,\n        fontFamily: 'open-sans-bold'\n    },\n    flatmatesGrid: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between', // To maintain equal spacing between two cards in a row\n    },\n    flatmateCard: {\n        width: '48%', // Slightly less than half to account for any potential margins or paddings\n        marginBottom: 15,\n        padding: 10, // Added some padding\n        backgroundColor: '#fff', // White background for the card\n        borderRadius: 8, // Rounded corners\n        alignItems: 'center', // Center items horizontally\n    },\n    flatmateImage: {\n        width: 50,\n        height: 50,\n        borderRadius: 25,\n        marginBottom: 10, // Margin below the image\n    },\n    flatmateName: {\n        fontSize: 18,\n        fontWeight: '600',\n        fontFamily: 'open-sans-regular',\n        textAlign: 'center', // Center the text\n    },\n    flatmateOccupation: {\n        fontSize: 14,\n        color: 'gray',\n        fontFamily: 'open-sans-light',\n        textAlign: 'center', // Center the text\n    },\n    trustIcon: {\n        marginRight: 5,  // Some space between the icon and text\n        bottom: 2,\n    },\n    scrollViewContent: {\n        paddingBottom: 20, // Add some bottom padding to accommodate for any absolutely positioned elements\n    },\n    seeMoreButtonContainer: {\n        flexDirection: 'row', // Align items in a row\n        alignItems: 'center', // Center items vertically\n        padding: 10,\n        borderRadius: 5,\n        // Add any additional styling as needed\n    },\n    shareIcon: {\n        position: 'absolute',\n        right: 10,\n        top: 10,\n        backgroundColor: 'rgba(0, 0, 0, 0.6)',\n        padding: 8,\n        borderRadius: 25,\n        width: 40,\n        zIndex: 1, // Add this line\n    },\n    soldContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    soldMessage: {\n        fontSize: 24,\n        color: 'white',\n        marginTop: 20,\n        textAlign: 'center',\n        fontFamily: 'open-sans-bold'\n    },\n\n});\n\n\n\nexport default AdDetailsScreen;\n","import React from \"react\";\nimport { View, Text, Image, StyleSheet } from \"react-native\";\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\n\nTimeAgo.addLocale(en)\nconst timeAgo = new TimeAgo('en-US')\n\nconst ReceiverMessage = ({ message }) => {\n\n  const date2 = new Date(message.timestamp.toDate());\n  const numericTimestamp = date2.getTime();\n  const x = timeAgo.format(numericTimestamp, 'mini')\n\n  return (\n    <View style={styles.container}>\n      <Image\n        style={styles.image}\n        source={{\n          uri: message.photoURL ||\n            'https://i.pinimg.com/736x/ff/a0/9a/ffa09aec412db3f54deadf1b3781de2a.jpg',\n        }}\n      />\n      <View style={styles.messageBubble}>\n        <Text style={styles.messageText}>{message.message}</Text>\n        <Text style={styles.timestamp}>{x} ago</Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    margin: 5,\n    alignItems: 'flex-end',\n  },\n  image: {\n    height: 40,\n    width: 40,\n    borderRadius: 20,\n    marginRight: 5,\n    borderColor: 'white',\n    borderWidth: 1,\n  },\n  messageBubble: {\n    backgroundColor: '#f0f0f0', // A soft color\n    borderRadius: 20,\n    padding: 10,\n    maxWidth: '80%',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  messageText: {\n    color: '#333', // Darker text color for contrast\n    fontSize: 16,\n  },\n  timestamp: {\n    color: '#888', // Soft color for the timestamp\n    fontSize: 12,\n    marginTop: 5,\n    alignSelf: 'flex-end',\n  }\n});\n\nexport default ReceiverMessage;\n","import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\n\nTimeAgo.addLocale(en)\nconst timeAgo = new TimeAgo('en-US')\n\nconst SenderMessage = ({ message }) => {\n\n  const date2 = new Date(message?.timestamp?.toDate());\n  const numericTimestamp = date2?.getTime();\n  const x = numericTimestamp ? timeAgo.format(numericTimestamp, 'mini') : ''\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.messageText}>{message.message}</Text>\n      <Text style={styles.timestamp}>{x ? x + ' ago' : 'sending...'}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#4D7EA8', // A calm blue tone\n    borderRadius: 15,\n    padding: 10,\n    marginVertical: 5,\n    marginRight: 10,\n    marginLeft: 'auto',\n    maxWidth: '80%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3,\n  },\n  messageText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    marginBottom: 2,\n  },\n  timestamp: {\n    color: '#D3E3F2', // A lighter shade for timestamp\n    fontSize: 12,\n    alignSelf: 'flex-end',\n  }\n});\n\nexport default SenderMessage;\n","import React, { useState, useEffect } from 'react';\nimport { Image, StyleSheet, Text, View, TouchableOpacity, Platform } from \"react-native\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Ionicons } from '@expo/vector-icons';\nimport WebAnimatedNumbers from 'react-animated-numbers';\n\nconst ChatHeader = ({ userDetails, navigation, coins }) => {\n    const [AnimatedNumberComponent, setAnimatedNumberComponent] = useState(null);\n    const handleBackPress = () => {\n        navigation.goBack();\n    };\n    useEffect(() => {\n        setAnimatedNumberComponent(WebAnimatedNumbers);\n    }, []);\n\n    // Render nothing until the component is loaded\n    if (!AnimatedNumberComponent) {\n        return null;\n    }\n\n    return (\n        <SafeAreaView>\n            <View style={styles.chatHeaderContainer}>\n                <TouchableOpacity onPress={handleBackPress} style={styles.backButton}>\n                    <Ionicons name=\"arrow-back\" size={24} color=\"#FFFFFF\" />\n                </TouchableOpacity>\n                {userDetails?.image && (<Image source={{ uri: userDetails.image }} style={styles.chatHeaderImage} />)}\n                <Text style={styles.chatHeaderText}>{userDetails.name}</Text>\n                <View style={styles.coinsContainer}>\n                    <Text style={styles.coinsTitle}>Messages Left</Text>\n                    {Platform.OS === 'web' ?\n                        <AnimatedNumberComponent\n                            style={styles.coinsValue}\n                        >\n                            {coins}\n                        </AnimatedNumberComponent> :\n                        <Text\n                            style={styles.coinsValue}\n                        >\n                            {coins}\n                        </Text>\n                    }\n                </View>\n            </View>\n        </SafeAreaView>\n    );\n};\nconst styles = StyleSheet.create({\n    chatHeaderContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        padding: 10,\n        backgroundColor: '#006699', // A nice shade of blue\n        borderBottomWidth: 1,\n        borderColor: '#006699', // A slightly darker blue for the border\n    },\n    chatHeaderImage: {\n        width: 40,\n        height: 40,\n        borderRadius: 20,\n        marginRight: 10,\n    },\n    chatHeaderText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#FFFFFF', // White text for better contrast and readability\n    },\n    backButton: {\n        marginRight: 10,\n    },\n    coinsTitle: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        color: '#FFFFFF', // Assuming the title is also white\n        marginRight: 8, // Add some space between the title and the number\n    },\n    coinsValue: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#FFD700', // A gold-like color for the coins value\n    },\n    coinsContainer: {\n        marginLeft: 'auto', // This pushes the coins container to the extreme right\n        flexDirection: 'row',\n        alignItems: 'center',\n        right: 15\n    },\n});\n\nexport default ChatHeader;","import React, { useState, useEffect } from 'react';\nimport { Modal, View, Text, TouchableOpacity, StyleSheet, Platform } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport WebAnimatedNumbers from 'react-animated-numbers';\nimport { Ionicons } from '@expo/vector-icons';\n\nconst CoinModal = ({ isVisible, onTakePremium, coins, onClose }) => {\n    const [AnimatedNumberComponent, setAnimatedNumberComponent] = useState(null);\n\n    useEffect(() => {\n        setAnimatedNumberComponent(WebAnimatedNumbers);\n    }, []);\n\n    // Render nothing until the component is loaded\n    if (!AnimatedNumberComponent) {\n        return null;\n    }\n\n    return (\n        <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={isVisible}\n            onRequestClose={onClose}\n        >\n            <View style={styles.centeredView}>\n                <LinearGradient\n                    colors={['#005AAA', '#dddddd']}\n                    style={styles.gradient}\n                >\n                    <TouchableOpacity style={styles.closeButton} onPress={onClose}>\n                        <Ionicons name=\"close-circle\" size={30} color=\"white\" />\n                    </TouchableOpacity>\n                    <View style={styles.modalView}>\n                        <Text style={styles.modalText}>You have only one coin left!</Text>\n                        <AnimatedNumberComponent\n                            style={styles.animatedNumbers}\n                        >\n                            {coins}\n                        </AnimatedNumberComponent>\n                        <TouchableOpacity style={styles.premiumButton} onPress={onTakePremium}>\n                            <Text style={styles.premiumButtonText}>Buy Premium</Text>\n                        </TouchableOpacity>\n                    </View>\n                </LinearGradient>\n            </View>\n        </Modal>\n    );\n};\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    gradient: {\n        width: '80%',\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 5\n    },\n    modalView: {\n        width: '100%',\n        alignItems: \"center\",\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: \"center\",\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: 'white',\n    },\n    animatedNumbers: {\n        fontSize: 50,\n        fontWeight: 'bold',\n        color: '#FFD700',\n    },\n    premiumButton: {\n        marginTop: 15,\n        backgroundColor: '#005AAA',\n        borderRadius: 5,\n        padding: 10,\n        elevation: 2\n    },\n    premiumButtonText: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n    },\n    closeButton: {\n        position: 'absolute',\n        top: 10,\n        right: 10,\n    },\n});\n\nexport default CoinModal;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  KeyboardAvoidingView,\n  Platform,\n  FlatList,\n  TouchableOpacity,\n  Modal,\n  StyleSheet,\n  ActivityIndicator,\n  Alert,\n  Image,\n} from \"react-native\";\nimport { WebView } from 'react-native-webview';\nimport axios from \"axios\"; // Import Axios for making API requests\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\nimport tw from \"tailwind-rn\";\nimport ReceiverMessage from \"../components/ReceiverMessage\";\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport SenderMessage from \"../components/SenderMessage\";\nimport {\n  addDoc,\n  collection,\n  onSnapshot,\n  orderBy,\n  query,\n  serverTimestamp,\n} from \"@firebase/firestore\";\nimport { analytics, db } from \"../firebase/firebase\";\nimport { useUser } from \"../context/UserContext\";\nimport generateId from \"../utils/generateIds\";\nimport API_BASE_URL from \"../services/config\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport ChatHeader from \"../components/ChatHeader\";\n//import MessageSuggestion from \"../components/MessageSuggestion\";\nimport { logEvent } from \"firebase/analytics\";\nimport CoinModal from \"../components/CoinModal\";\nimport { customEvent } from \"vexo-analytics\";\nimport { isSuspiciousText } from \"../utils/generalUtils\";\n\nconst MessageScreen = ({ route, navigation }) => {\n  const flatListRef = useRef();\n  const [userInfo, setUserInfo] = useState({ coins: 2 });\n  const { userInfo: userInfoFromAsync, setUserInfoToStore, fetchUserDetails, } = useUser();\n  console.log(\"userInfoFromAsync\", userInfoFromAsync)\n  const { params: { userDetails } } = route;\n  const [showRequestDetailsModal, setShowRequestDetailsModal] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [isConversationStarter, setConversationStarter] = useState(undefined);\n  const [combinedUid, setCombinedUid] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [isInputFocus, setInputFocus] = useState(false);\n  const [showOneCointModal, setOneCointModal] = useState(false);\n  const [webviewUrl, setWebviewUrl] = useState(\n    \"https://subham-routray.mojo.page/odicult-subscription\"\n  );\n  const [isLoading, setIsLoading] = useState(true);\n  const isWeb = Platform.OS === 'web';\n\n  useEffect(() => {\n    fetchUserInitialDetails();\n  }, [db, combinedUid, userInfoFromAsync]);\n\n  useEffect(() => {\n    if (userInfo?.coins === 1) {\n      setOneCointModal(true)\n    }\n    if (userInfo?.coins === 0) {\n      setShowModal(true)\n    }\n  }, [userInfo?.coins]);\n\n  useEffect(() => {\n    if (messages && messages.length > 0) {\n      const firstMessage = messages[messages.length - 1]; // Since it's an inverted list, the first message will be the last element in the array.\n      setConversationStarter(firstMessage.userId === userInfo.firebaseId);\n    }\n  }, [messages]);\n\n  const handleCloseRequestDetailsModal = () => {\n    setShowRequestDetailsModal(false);\n  };\n\n  const handleRequestDetails = () => {\n    handleCloseRequestDetailsModal();\n  };\n\n\n  const fetchUserInitialDetails = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/user/getUserByFirebaseId/${userInfoFromAsync.firebaseId}`);\n      if (response.ok) {\n        const userInfo = await response.json();\n        const combinedUid = generateId(userInfo.firebaseId, userDetails.id);\n        console.log(\"here we are combinedUid\", combinedUid)\n        setCombinedUid(combinedUid)\n        setUserInfo(userInfo)\n        setMatchUsers(combinedUid)\n      } else {\n        console.error('Failed to fetch user details');\n        setIsLoading(false); // Set loading to false even if there is an error\n      }\n    } catch (error) {\n      console.error('Error fetching user details:', error);\n      setIsLoading(false); // Set loading to false even if there is an error\n    }\n  };\n\n  const setMatchUsers = (combinedUid) => {\n    const matchDocRef = doc(db, \"matches\", combinedUid);\n    getDoc(matchDocRef)\n      .then((docSnapshot) => {\n        if (!docSnapshot.exists()) {\n          const sanitizedUserInto = {\n            image: userInfo.image || null,\n            email: userInfo.email,\n            phone: userInfo.phoneNumber,\n            id: userInfo.firebaseId,\n            name: userInfo.name,\n          };\n          setDoc(doc(db, \"matches\", combinedUid), {\n            users: {\n              [userInfo.firebaseId]: sanitizedUserInto,\n              [userDetails.id]: userDetails,\n            },\n            usersMatched: [userInfo.firebaseId, userDetails.id],\n            timestamp: serverTimestamp(),\n          });\n\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error checking document existence:\", error);\n      });\n    fetchMessages()\n  }\n\n  const fetchMessages = () => {\n    onSnapshot(\n      query(\n        collection(db, \"matches\", combinedUid, \"messages\"),\n        orderBy(\"timestamp\", \"desc\")\n      ),\n      (snapshot) => {\n        const fetchedMessages = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        if (fetchedMessages.length === 0 && !showModal) {\n          setShowRequestDetailsModal(true);\n          setShowModal(false)\n        }\n        setMessages(fetchedMessages);\n        setIsLoading(false);\n      }\n    );\n  }\n\n  const scrollFlatListToEnd = () => {\n    flatListRef.current?.scrollToEnd({ animated: true });\n  };\n\n  const handleSendMessage = async (text) => {\n    const value = text || input\n    if (value === \"\") {\n      return; // Do nothing if the input is empty\n    }\n    if (isConversationStarter && isSuspiciousText(value) && userInfo.subscriptionStartDate === \"NA\") {\n      Alert.alert(\n        \"Subscription Required\",\n        \"You need to subscribe to send phone numbers.\",\n        [\n          {\n            text: \"Subscribe\",\n            onPress: () => {\n              setShowModal(true);\n            }\n          },\n          {\n            text: \"Cancel\",\n            onPress: () => console.log(\"Cancel Pressed\"),\n            style: \"cancel\"\n          }\n        ],\n        { cancelable: false }\n      );\n      return;\n    }\n    // If user is the conversation starter and doesn't have coins or subscription, show the modal\n    if (isConversationStarter && userInfo.coins === 0 && userInfo.subscriptionStartDate === \"NA\") {\n      setShowModal(true);\n      return;\n    }\n    // Process to send message\n    try {\n      await addDoc(collection(db, \"matches\", combinedUid, \"messages\"), {\n        timestamp: serverTimestamp(),\n        userId: userInfo.firebaseId,\n        name: userInfo.name,\n        photoURL: userInfo.pic || null,\n        message: value,\n      });\n      setInput('')\n      setShowRequestDetailsModal(false)\n      console.log(\"sendMessage userInfo\", userInfo)\n      console.log(\"sendMessage userInfoFromAsync\", userInfoFromAsync)\n      console.log(\"sendMessage userDetails\", userDetails)\n      try {\n        const oneSignalResponse = await axios.post(`${API_BASE_URL}/user/sendNotification`, {\n          userIds: [userDetails.phone],\n          message: `You have a new message from ${userInfo.name || ''}`,\n          data: {\n            type: \"NEW_MESSAGE\",\n            email: userDetails.email,\n            id: userDetails.id,\n            name: userDetails.name,\n            phone: userDetails.phone,\n            firebaseId: userInfoFromAsync.firebaseId,\n            pic: userDetails.pic || \"\", // Handle null values\n            timestampSeconds: userDetails.timestamp.seconds.toString(),\n            timestampNanoseconds: userDetails.timestamp.nanoseconds.toString(),\n          },\n        });\n        console.log(\"OneSignal Response:\", oneSignalResponse.data);\n      } catch (error) {\n        console.error(\"OneSignal Error:\", error);\n      }\n      if (isConversationStarter) {\n        if (userInfo.coins > 0) {\n          const updatedCoins = Math.max(userInfo.coins - 1, 0);  // Deduct one coin\n          await axios.put(`${API_BASE_URL}/user/updateUserCoins/${userInfo.phoneNumber}`, {\n            coins: userInfo.coins,\n          });\n          setUserInfo((prevUserInfo) => ({\n            ...prevUserInfo,\n            coins: updatedCoins,\n          }));\n          setUserInfoToStore({\n            ...userInfo,\n            coins: updatedCoins,\n          });\n        } else {\n          Alert.alert(\"You do not have enough coins to send a message.\");\n          return;\n        }\n      }\n      fetchMessages();\n      setInput(\"\");\n      // scrollFlatListToEnd();\n    } catch (error) {\n      console.error(\"Error sending message or updating coins:\", error);\n      Alert.alert(\"Message sending failed\");\n    }\n  };\n\n  const handleModalClose = () => {\n    logEvent(analytics, \"purchase banner changed\");\n    customEvent(\"purchase banner changed\");\n    fetchUserDetails()\n    setShowModal(false)\n  }\n\n  const handleSelectSuggestion = (text) => {\n    setInput(text);\n  };\n\n  if (isLoading || userInfoFromAsync == null) {\n    return (\n      <LinearGradient colors={['#dddddd', '#005AAA']} style={styles.loaderContainer}>\n        <ActivityIndicator size=\"large\" color=\"white\" />\n      </LinearGradient>\n    );\n  }\n\n  const handleTakePremium = () => {\n    setOneCointModal(false)\n    setShowModal(true)\n\n  }\n  return (\n    <>\n      {<View style={{ height: '10%', backgroundColor: '#006699' }} >\n        <ChatHeader coins={userInfo?.coins} userDetails={userDetails} navigation={navigation} />\n      </View>}\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={tw(\"flex-1\")}\n        keyboardVerticalOffset={10}\n      >\n        <LinearGradient colors={['#dddddd', '#005AAA']} style={{ height: '80%' }} >\n          <FlatList\n            ref={flatListRef}\n            data={messages}\n            contentContainerStyle={{\n              flexGrow: 1,\n            }}\n            inverted={true}\n            style={Platform.OS === 'web' && styles.flatList}\n            keyExtractor={(item) => item.id}\n            renderItem={({ item: message }) =>\n              message.userId === userInfo.firebaseId ? (\n                <SenderMessage key={message.id} message={message} />\n              ) : (\n                <ReceiverMessage key={message.id} message={message} />\n              )\n            }\n          />\n        </LinearGradient>\n        <LinearGradient colors={['#005AAA', '#dddddd',]} style={{ ...styles.inputSection, height: \"10%\" }}>\n          <KeyboardAvoidingView\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n            style={styles.keyboardAvoidingView}\n            keyboardVerticalOffset={10}\n          >\n            {/* {\n            messages.length === 0 && (\n              <View style={styles.suggestionsContainer}>\n                <MessageSuggestion onSelectSuggestion={handleSelectSuggestion} />\n              </View>\n            )\n          } */}\n            <View style={[styles.messageInputContainer, isWeb && styles.messageInputContainerWeb]}>\n              <TextInput\n                multiline={true}\n                style={styles.textInput}\n                placeholder=\"Send a message\"\n                onChangeText={(value) => {\n                  setInput(value)\n                  // logEvent(analytics, \"message changed\", value);\n                }}\n                onFocus={() => setInputFocus(true)}\n                onBlur={() => setInputFocus(false)}\n                value={input}\n              />\n              <TouchableOpacity onPress={() => handleSendMessage()} style={styles.sendButton}>\n                <Text style={styles.sendButtonText}>Send</Text>\n              </TouchableOpacity>\n            </View>\n          </KeyboardAvoidingView>\n        </LinearGradient>\n      </KeyboardAvoidingView>\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={showModal}\n        onRequestClose={handleModalClose}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>Subscribe Now</Text>\n              <TouchableOpacity onPress={handleModalClose}>\n                <Text style={styles.modalCloseText}>Close</Text>\n              </TouchableOpacity>\n            </View>\n            {Platform.OS !== 'web' ?\n              <WebView source={{ uri: webviewUrl }} style={styles.webView} /> :\n              <iframe src={webviewUrl} height={'100%'} width={'100%'} />}\n          </View>\n        </View>\n      </Modal>\n      {showRequestDetailsModal && (\n        <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={showRequestDetailsModal}\n          onRequestClose={handleCloseRequestDetailsModal}\n        >\n          <View style={modalStyles.container}>\n            <TouchableOpacity\n              style={modalStyles.closeButton}\n              onPress={handleCloseRequestDetailsModal}>\n              <Icon\n                name=\"close\"\n                size={24}\n                color=\"#000\"\n              />\n            </TouchableOpacity>\n            <Text style={modalStyles.title}>Start the Conversation</Text>\n            <Text style={modalStyles.messagePreview}>Hi there! I'm interested in your ad.</Text>\n            <Image style={{ height: 400, width: 200, bottom: 10 }} source={require('../assets/images/convInt.png')} />\n            <TouchableOpacity\n              style={modalStyles.sendButton}\n              onPress={() => handleSendMessage(\"Hi there! I'm interested in your ad.\")}\n            >\n              <Text style={modalStyles.buttonText}>Send Message</Text>\n            </TouchableOpacity>\n          </View>\n        </Modal>\n      )}\n\n      {showOneCointModal &&\n        <CoinModal\n          coins={userInfo?.coins}\n          onTakePremium={handleTakePremium}\n          isVisible={showOneCointModal}\n          onClose={() => setOneCointModal(false)}\n        />}\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  keyboardAvoidingView: {\n    flex: 1,\n  },\n  messageInputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderTopWidth: 1,\n    borderColor: '#E2E8F0',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n  },\n  textInput: {\n    flex: 1,\n    minHeight: 40,\n    padding: 10,\n    borderRadius: 20,\n    backgroundColor: '#FFFFFF',\n    fontSize: 16,\n  },\n  sendButton: {\n    marginLeft: 10,\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    backgroundColor: '#63B3ED',\n    borderRadius: 20,\n  },\n  sendButtonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n\n  },\n  modalContent: {\n    width: '80%',\n    height: '80%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    overflow: 'hidden',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderColor: '#E2E8F0',\n    backgroundColor: 'white',\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  modalCloseText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#3182CE',\n  },\n  webView: {\n    flex: 1,\n  },\n  messageInputContainerWeb: {\n    position: 'fixed', // Fix position to bottom on web\n    bottom: 0,\n    left: 0,\n    right: 0,\n    borderTopWidth: 1,\n    borderColor: '#E2E8F0',\n    backgroundColor: 'white', // or any desired color\n  },\n  suggestionsContainer: {\n    // position: 'fixed',\n    bottom: 80, // You should adjust this value based on the height of messageInputContainer + some offset\n    width: '100%',\n    zIndex: 2,  // Ensure the suggestions are above the FlatList\n  },\n  loaderContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  inputSection: {\n    position: 'absolute', // Input section will be positioned absolutely\n    bottom: 0, // Sticks to the bottom\n    width: '100%', // Full width of the screen\n    padding: 10, // Optional padding\n  },\n  flatList: {\n    flex: 1, // Takes all available space except for the input section\n  },\n  modalCenteredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: 'rgba(0, 0, 0, 0.6)', // Semi-transparent background\n  },\n  modalView: {\n    margin: 20,\n    width: '80%', // Set width\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    padding: 25,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginBottom: 15,\n  },\n  modalCloseButton: {\n    position: \"absolute\",\n    right: 10,\n    top: 10,\n  },\n});\n\nconst modalStyles = StyleSheet.create({\n  container: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    padding: 20,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 6, // Increased for effect\n    elevation: 5,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginBottom: 15,\n    textAlign: \"center\",\n  },\n  messagePreview: {\n    fontSize: 16,\n    color: \"#555\",\n    marginBottom: 20,\n  },\n  imageStyle: {\n    height: 350,\n    width: 175,\n    marginBottom: 20,\n    alignSelf: 'center'\n  },\n  sendButton: {\n    backgroundColor: \"#4CAF50\",\n    padding: 10,\n    borderRadius: 5,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginTop: 20,\n    shadowColor: \"#000\", // Optional shadow\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    elevation: 2,\n  },\n  buttonText: {\n    color: \"white\",\n    marginLeft: 10,\n    fontWeight: \"bold\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: 10,\n    top: 10,\n    padding: 10,\n  },\n});\nexport default MessageScreen;\n","export const isSuspiciousText = (text) => {\n    const numberWords = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\n    const numerals = Array.from({ length: 10 }, (_, i) => i.toString());\n\n    let count = 0;\n\n    // Check for number words\n    numberWords.concat(numerals).forEach(word => {\n        const regex = new RegExp(`\\\\b${word}\\\\b`, 'gi');\n        const matches = text.match(regex);\n        count += (matches ? matches.length : 0);\n    });\n\n    // Check for continuous sequences of digits\n    const continuousDigitsRegex = /\\b\\d{5,}\\b/g; // adjust the number 5 to set minimum length of digits sequence\n    const continuousDigitsMatches = text.match(continuousDigitsRegex);\n    if (continuousDigitsMatches) {\n        return true; // return true if any continuous sequence of digits is found\n    }\n\n    return count > 4;\n}\n","// src/navigation/AuthStack.js\n\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeTabNavigator from '../screens/HomeTabNavigator';\nimport PostAdScreen from '../screens/PostAd';\nimport UserAds from '../screens/UserAds';\nimport AdDetailsScreen from '../screens/AdDetails';\nimport Message from '../screens/Message';\nimport Chat from '../screens/Chat';\nimport CustomHeader from '../components/CustomHeader';\nimport Loading from '../components/Loading';\n\nconst Stack = createStackNavigator();\n\nconst AppStack = () => {\n    return (\n        <Stack.Navigator\n            screenOptions={{\n                headerShown: false\n            }}\n            initialRouteName='HomeTabNavigator'\n        >\n            <Stack.Screen name=\"HomeTabNavigator\" component={HomeTabNavigator} />\n            <Stack.Screen name=\"PostAd\" component={PostAdScreen} />\n            <Stack.Screen name=\"UserAds\" component={UserAds} />\n            <Stack.Screen name=\"SingleScreenAd\" component={AdDetailsScreen} />\n            <Stack.Screen name=\"Chat\" component={Chat} />\n            <Stack.Screen name=\"Location\" component={CustomHeader} />\n            <Stack.Screen name=\"Message\" component={Message} />\n            <Stack.Screen name=\"NotificationMessage\" component={Message} />\n            <Stack.Screen name=\"MessagWithData\" component={Message} />\n            <Stack.Screen name=\"LoadingScreen\" component={Loading} />\n\n        </Stack.Navigator>\n    );\n};\n\nexport default AppStack;\n","import React from 'react';\nimport { View, Text, TouchableOpacity } from 'react-native';\nimport Modal from 'react-native-modal';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nconst UpdateAppModal = ({ isVisible, onAppUpdate }) => {\n    return (\n        <Modal isVisible={isVisible} backdropColor=\"rgba(0, 0, 0, 0.5)\" backdropOpacity={1}>\n            <LinearGradient\n                colors={['#007DBC', '#005AAA']}\n                style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}\n            >\n                <View style={{ backgroundColor: 'white', borderRadius: 10, padding: 20 }}>\n                    <Text style={{ color: '#007DBC', fontSize: 18, marginBottom: 20 }}>Please update the app now.</Text>\n                    <TouchableOpacity\n                        style={{ backgroundColor: '#007DBC', padding: 10, borderRadius: 5 }}\n                        onPress={onAppUpdate}\n                    >\n                        <Text style={{ color: 'white', textAlign: 'center', fontSize: 16 }}>Click Here to Update</Text>\n                    </TouchableOpacity>\n                </View>\n            </LinearGradient>\n        </Modal>\n    );\n};\n\nexport default UpdateAppModal;\n","import React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { NavigationContainer, useNavigationContainerRef } from '@react-navigation/native';\nimport AuthStack from './navigation/AuthStack';\nimport AppStack from './navigation/AppStack';\nimport { UserProvider, useUser } from './context/UserContext';\nimport Toast from 'react-native-toast-message';\nimport { AuthProvider } from './hooks/useAuth';\nimport UpdateAppModal from './components/UpdateAppModal';\nimport API_BASE_URL, { DOMAIN_URL } from './services/config';\nimport { Alert, Linking, Platform } from 'react-native';\nimport * as Font from 'expo-font';\nimport Constants from \"expo-constants\";\nimport { OneSignal, LogLevel } from 'react-native-onesignal';\nimport { CommonActions } from '@react-navigation/native';\nimport * as Analytics from 'expo-firebase-analytics';\nimport { identifyDevice } from 'vexo-analytics';\nimport * as Network from 'expo-network';\n\n\nOneSignal.Debug.setLogLevel(LogLevel.Verbose)\nOneSignal.initialize(Constants.expoConfig.extra.oneSignalAppId);\nOneSignal.Notifications.requestPermission(true);\n\nconst App = () => {\n  const { userToken } = useUser();\n  const navigationRef = useNavigationContainerRef();\n  const openedNotificationRef = useRef(null);\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const [action, setAction] = useState('');\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  const _opened = openResult => {\n    console.log(\"openResult\", openResult)\n    const data = openResult.notification.additionalData;\n    if (data.type === \"NEW_MESSAGE\") {\n      const routes = [\n        { name: 'HomeTabNavigator' },\n        {\n          name: 'NotificationMessage', params: {\n            userDetails: {\n              email: data.email,\n              id: data.id,\n              name: data.name,\n              phone: data.phone,\n              pic: data.pic,\n              firebaseId: data.firebaseId,\n              timestamp: {\n                seconds: parseInt(data.timestampSeconds),\n                nanoseconds: parseInt(data.timestampNanoseconds)\n              },\n            }\n          }\n        },\n      ]\n      navigationRef.current.dispatch(\n        CommonActions.reset({\n          routes: routes,\n          index: routes.length - 1,\n        })\n      )\n    }\n    if (data.type === \"NEW_POST\") {\n      const routes = [\n        { name: 'HomeTabNavigator' },\n        {\n          name: 'SingleScreenAd', params: {\n            adIds: data.adId\n          }\n        },\n      ]\n      navigationRef.current.dispatch(\n        CommonActions.reset({\n          routes: routes,\n          index: routes.length - 1,\n        })\n      )\n    }\n  }\n\n  useEffect(() => {\n    async function checkNetwork() {\n      const networkState = await Network.getNetworkStateAsync();\n      if (!networkState.isConnected) {\n        Alert.alert(\n          'No Internet Connection',\n          'Please check your internet settings.',\n          [\n            { text: 'Cancel', style: 'cancel' },\n            {\n              text: 'Refresh', onPress: () => {\n                navigationRef.current.dispatch(\n                  CommonActions.reset({\n                    routes: [{ name: 'HomeTabNavigator' }, { name: 'Onboarding' }],\n                    index: 1,\n                  })\n                )\n              }\n            },\n          ],\n          { cancelable: false }\n        );\n      }\n    }\n\n    checkNetwork();\n  }, []);\n\n  useEffect(() => {\n\n    if (userToken) {\n      identifyDevice(userToken.toString())\n      Analytics.setUserId(userToken.toString());\n    }\n  }, [userToken]);\n\n  useEffect(() => {\n    return () => {\n      OneSignal.Notifications.removeEventListener('click', _opened);\n    }\n  }, []);\n\n  const onReady = () => {\n    OneSignal.Notifications.addEventListener('click', _opened);\n    setTimeout(() => {\n      if (!openedNotificationRef.current) {\n        navigationRef.current.dispatch(\n          CommonActions.reset({\n            routes: [{ name: 'HomeTabNavigator' }, { name: 'Onboarding' }],\n            index: 1,\n          })\n        )\n      }\n    }, 0)\n  };\n\n  useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        await Font.loadAsync({\n          'open-sans-regular': require('./assets/fonts/OpenSans-Regular.ttf'),\n          'open-sans-light': require('./assets/fonts/OpenSans-Light.ttf'),\n          'open-sans-bold': require('./assets/fonts/OpenSans-Bold.ttf'),\n        });\n        setFontsLoaded(true);\n\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n    loadResourcesAndDataAsync();\n  }, []);\n\n  // fetchAppUpdateStatus\n  useEffect(() => {\n    async function fetchAppUpdateStatus() {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/user/getAppUpdateStatus`);\n        const { blockApp, action } = response.data;\n        if (blockApp) {\n          setShowUpdateModal(true);\n          setAction(action)\n        }\n      } catch (error) {\n        console.error('Error fetching app update status:', error);\n      }\n    };\n    if (Platform.OS !== 'web') {\n      fetchAppUpdateStatus();\n    }\n  }, []);\n\n  const linking = {\n    prefixes: [DOMAIN_URL, 'RentNearBy://'],\n    config: {\n      screens: {\n        HomeTabNavigator: 'ads/:adIdm',\n        //HomeTabNavigator: 'ads/:location/:adIdm',\n      },\n    },\n  };\n\n  const handleAppUpdate = () => {\n    Linking.canOpenURL(action)\n      .then((supported) => {\n        if (supported) {\n          Linking.openURL(action);\n        } else {\n          console.error('Cannot open Play Store link');\n        }\n      })\n      .catch((error) => {\n        console.error('Error opening Play Store link:', error);\n      });\n  };\n\n  return (\n    <>\n      <NavigationContainer\n        ref={navigationRef}\n        onReady={onReady}\n        linking={linking}\n        initialRouteName=\"LoadingScreen\"\n      >\n        <Toast />\n        {userToken ? <AppStack /> : <AuthStack />}\n      </NavigationContainer>\n      <UpdateAppModal\n        isVisible={showUpdateModal}\n        onClose={() => setShowUpdateModal(false)}\n        onAppUpdate={handleAppUpdate}\n      />\n    </>\n  );\n};\n\nexport default () => {\n  return (\n    <UserProvider>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </UserProvider>\n  );\n};\n\n","import { registerRootComponent } from 'expo';\nimport App from './App';\nimport { vexo } from 'vexo-analytics';\n//import DevApp from './DevApp';\n//import { AppRegistry } from 'react-native';\n\nvexo(\"2098a553-a127-4f33-943d-51ba5b24be59\")\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n//AppRegistry.runApplication('main', () => DevApp)\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [813], () => (__webpack_require__(6935)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","analytics","getStorage","getAnalytics","AuthContext","createContext","AuthProvider","_ref","children","setUserInfoToStore","useUser","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","loadingLogin","setLoadingLogin","useEffect","unsubscribe","onAuthStateChanged","_ref2","_asyncToGenerator","authUser","error","console","_x","apply","arguments","signUpWithEmailPassword","_ref3","email","password","createUserWithEmailAndPassword","then","userCredential","uid","firebaseId","catch","log","_x2","_x3","logOut","_ref4","signOut","_jsx","Provider","value","signInWithEmailPassword","signInWithEmailAndPassword","LinearGradient","colors","style","flex","justifyContent","alignItems","height","width","ActivityIndicator","size","color","AuthOpen","useContext","DOMAIN_URL","UserContext","UserProvider","userToken","setUserToken","userDetails","setUserDetails","_useState5","_useState6","userInfo","setUserInfo","loadUserToken","storedToken","AsyncStorage","getItem","fetchUserDetails","response","fetch","API_BASE_URL","toString","ok","userData","json","gender","image","name","phoneNumber","_id","tenantType","rentPosts","coins","subscriptionStartDate","location","phone","id","statusText","login","token","OneSignal","User","addSms","setItem","logout","_ref5","removeUserInfoFromStore","removeItem","_ref6","_ref8","_ref7","rentPost","_ref7$subscriptionSta","_ref7$location","locationMarked","messagingToken","existingUserInfo","JSON","parse","length","_objectSpread","stringify","userId","TextAnimator","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","animate","toValue","undefined","animations","state","textArr","map","_","i","Animated","timing","animatedValues","duration","useNativeDriver","stagger","reverse","start","setTimeout","onFinish","content","trim","split","forEach","Value","_createClass","key","this","prevProps","_this2","setState","_this3","View","styles","textWrapper","word","index","_jsxs","Text","textStyle","opacity","transform","translateY","multiply","React","StyleSheet","create","flexDirection","flexWrap","Dimensions","get","Authentication","_route$params","route","navigation","adId","params","adIdm","_AuthOpen","formattedValue","setFormattedValue","isUserExists","setIsUserExists","screen","setScreen","_useState7","_useState8","setPhoneNumber","_useState9","_useState10","otp","setOtp","_useState11","_useState12","assignedOtp","setAssignedOtp","_useState13","_useState14","isLoading","setIsLoading","_useState15","_useState16","isTextInputFocused","setIsTextInputFocused","_useState17","_useState18","currentTextIndex","setCurrentTextIndex","animatedTexts","_useClearByFocusCell","useClearByFocusCell","setValue","_useClearByFocusCell2","getCellOnLayoutHandler","navigate","handleAnimationComplete","renderMedia","LottieView","Platform","OS","require","source","autoPlay","loop","Lottie","generateOtp","Math","floor","random","fetchUserExistsStatus","checkPhoneResponse","checkPhoneData","exists","sendOTP","postData","axios","post","headers","data","status","alert","_error$response","message","verifyOTP","handleTextInputFocus","handleTextInputBlur","gradient","x","y","end","lottie","KeyboardAvoidingView","behavior","keyboardVerticalOffset","ScrollView","contentContainerStyle","container","keyboardShouldPersistTaps","header","subheader","PhoneNumberInput","defaultCode","onChangeText","text","logEvent","customEvent","onChangeFormattedText","placeholder","withDarkTheme","withShadow","onFocus","onBlur","TouchableOpacity","button","onPress","buttonText","iconContainer","Ionicons","CodeField","caretHidden","cellCount","rootStyle","codeFieldRoot","keyboardType","textContentType","renderCell","symbol","isFocused","onLayout","cell","focusCell","cellText","Cursor","buttonContainer","_Fragment","resendText","renderScreen","fontSize","fontWeight","marginBottom","fontFamily","top","backgroundColor","paddingVertical","paddingHorizontal","borderRadius","resendButton","marginTop","backButton","countryPickerContainer","borderColor","borderWidth","countryPicker","resizeMode","marginLeft","marginRight","lineHeight","textAlign","position","left","zIndex","_Dimensions$get","OnboardingScreen","useNavigation","handleDone","Onboarding","onDone","onSkip","DoneButtonComponent","Object","assign","_objectDestructuringEmpty","doneButton","containerStyles","pages","title","subtitle","padding","centeredView","closeButton","alignSelf","description","downloadButton","elevation","modalView","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","modalText","icon","benefitItem","benefitText","visible","onClose","Modal","animationType","transparent","onRequestClose","Linking","openURL","amenitiesMapping","label","flexContainer","loaderContainer","footer","borderTopWidth","bottom","right","borderBottomWidth","borderBottomColor","villaImage","villaName","marginVertical","marginHorizontal","offerContainer","offerText","hostImage","hostName","price","directMessageButton","directMessageButtonText","postedByCurrentUserMessage","amenitiesContainer","amenitiesTitle","amenitiesList","amenityItem","amenityLabel","priceContainer","originalPrice","textDecorationLine","discountedPrice","bookNowButton","bookNowButtonText","flatmateRow","flatmatesSection","flatmatesGrid","flatmateCard","flatmateImage","flatmateName","flatmateOccupation","trustIcon","scrollViewContent","paddingBottom","seeMoreButtonContainer","seeMoreButtonText","shareIcon","soldContainer","soldMessage","showDownloadAppModal","setShowDownloadAppModal","ad","setAd","setFirebaseId","flatmates","flatmatesData","setFlatmatesData","showDirectMessageButton","setShowDirectMessageButton","isPostedByCurrentUser","isAdAvailable","setIsAdAvailable","fetchPostDetails","onShare","shareMessage","adTitle","navigator","share","Clipboard","setString","Alert","Share","userDoc","getDoc","doc","handleBackButton","SafeAreaView","Image","uri","images","FontAwesome","adDescription","amenity","flatmate","occupation","DownloadAppModal","MaterialIcons","BannerWidth","bannerImage","Carousel","autoplay","autoplayTimeout","pageSize","renderPage","AnimatedCard","item","scale","useSharedValue","lastPress","useRef","Date","now","animatedStyles","useAnimatedStyle","_f","_closure","asString","__workletHash","__location","__optimalization","animatedImageStyles","perspective","rotateY","card","activeOpacity","current","onPressIn","withSpring","onPressOut","delayPressIn","touchable","adImage","adDetails","numberOfLines","ellipsizeMode","adInfo","adPrice","adBedrooms","bedrooms","adList","overflow","backfaceVisibility","borderTopLeftRadius","borderTopRightRadius","adLocation","filterButtonsContainer","filterButton","filterButtonActive","filterText","filterTextActive","_useUser","ads","setAds","banners","setBanners","refreshing","setRefreshing","bannersLoading","setBannersLoading","genderFilter","setGenderFilter","filteredAds","setFilteredAds","fetchAds","fetchBanners","handleGenderFilterChange","newFilter","bannersQuery","query","collection","fetchedBanners","getDocs","docs","link","handleAdPress","onRefresh","useCallback","filtered","filter","isMaleOnly","filterAds","SkeletonLoader","boneColor","highlightColor","BannerCarousel","FlatList","keyExtractor","renderItem","numColumns","refreshControl","RefreshControl","tintColor","Loading","_Component","Component","Stack","createStackNavigator","showOnboarding","setShowOnboarding","checkIfAlreadyOnboarded","onboarded","Navigator","initialRouteName","Screen","options","headerShown","component","AdDetailsWithoutAuthentication","HomeWithoutAuthentication","screenOptions","fab","bannerContainer","bannerCloseButton","showClose","setShowClose","bannerTimer","clearTimeout","adIds","domains","tenantTypeContainer","actionButton","loader","profileImage","flexGrow","modalContainer","linearGradient","modalContent","modalTitle","input","chooseImageButton","chooseImageText","genderContainer","radioButtons","radioButton","radioButtonSelected","radioButtonText","radioButtonTextSelected","radioButtonsTenantType","radioButtonTenantType","isVisible","onDismiss","setLocationModal","_useUser2","setName","setEmail","setUserId","setGender","setTenantType","setImage","setLoading","setSuggestions","setFieldsDisabled","_useState19","_useState20","userLocation","setUserLocation","handleGenderSelect","selectedGender","requestLocationPermission","Location","requestForegroundPermissionsAsync","getCurrentPositionAsync","updateProfileToFirebase","pic","isEdit","newDocRef","handler","updateDoc","setDoc","timestamp","serverTimestamp","updateAuthProfile","currentUser","displayName","photoURL","handleTenantTypeSelect","selectedType","handleUpdate","ImagePicker","requestMediaLibraryPermissionsAsync","granted","pickerResult","launchImageLibraryAsync","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","selectedImageUri","assets","file","blob","res","type","RNS3","put","keyPrefix","bucket","region","accessKey","secretKey","successActionStatus","Error","body","postResponse","apiEndpoint","method","addEmail","Toast","show","text1","text2","updateButtonStyle","MaterialCommunityIcons","TextInput","placeholderTextColor","filteredDomains","domain","includes","maleIcon","femaleIcon","student","professionals","family","users","userLoggedIn","newUsers","_Object$entries$flat","entries","flat","_Object$entries$flat2","id1","id2","cardShadow","matchDetails","lastMessage","setLastmessage","matchedUserInfo","setMatchedUserInfo","getMatchedUserInfo","onSnapshot","generateId","orderBy","snapshot","_snapshot$docs$","_snapshot$docs$$data","tw","photoUrl","substring","horizontal","matches","setMatches","loading","where","ChatRow","ChatList","DEFAULT_LOCATION","leftContainer","selectedLocationContainer","downIcon","rightContainer","iconButton","selectedLocationText","modalGradient","modalHeader","modalHeaderText","searchContainer","searchInput","clearIcon","locationList","locationItem","locationText","tagsContainer","tag","tagText","onSettingPress","_ref$showBack","showBack","_ref$locationModal","locationModal","useToken","selectedLocation","setSelectedLocation","allLocations","setLocations","modalVisible","setModalVisible","searchQuery","setSearchQuery","suggestedLocations","setSuggestedLocations","topLocations","setTopLocations","fetchLocations","_response$data$locati","locations","fetchedLocations","slice","selectLocation","addTag","renderTag","edges","goBack","Icon","filteredLocations","toLowerCase","showsHorizontalScrollIndicator","baseURL","topBar","cartItemList","cartItemContainer","cartItemImage","cartItemInfo","cartItemName","cartItemPrice","removeFromCartButton","removeFromCartButtonText","loadingContainer","emptyCartText","cartSummaryContainer","borderTopColor","cartSummaryText","continueButton","continueButtonText","fixedCartSummaryContainer","cartItems","setCartItems","fetchCartItems","calculateTotalPrice","reduce","total","productId","quantity","result","api","handleRemoveFromCart","itemId","prevCartItems","delete","imageUrl","disabled","totalPrice","formContainer","addressInput","summaryContainer","summaryText","paymentText","cancelButton","completeButton","completeButtonText","fixedContentContainer","bottomInfoContainer","address","setAddress","pincode","setPincode","setPhone","handleCompleteOrder","orderData","err","KeyboardAwareScrollView","autoCapitalize","multiline","orderList","orderItemContainer","orderItemText","emptyText","showDetailsButton","showDetailsButtonText","modalBackground","cartItemModalContent","cartItemModalText","closeButtonText","orders","setOrders","fetchOrders","selectedCartItem","setSelectedCartItem","isCartItemModalVisible","setIsCartItemModalVisible","closeCartItemModal","renderCartItem","cartItem","productContainer","productContent","productImage","productInfo","productName","productDescription","productPrice","quantityContainer","quantityButton","quantityText","addToCartButton","addToCartButtonText","addedToCartButton","product","isItemAddedToCart","setIsItemAddedToCart","setQuantity","handleAddToCart","requestBody","prevQuantity","max","cartCountContainer","cartCountText","cartLabelText","_ref$cartItemsCount","cartItemsCount","clearSearchButton","topRightBar","marginEnd","topRightBarCart","productList","quantityInput","popoverBackground","popoverContent","popoverOption","popoverOptionText","cartCountCard","cartCountLabel","noDataContainer","noDataText","products","setProducts","productLoading","setProductLoading","quantities","setQuantities","setCartItemsCount","fetchProducts","fetchCartDetails","clearSearchString","queryParams","prevLoading","_defineProperty","newItem","concat","_toConsumableArray","prevQuantities","_x4","cartCount","calculateTotalCartCount","onSubmitEditing","showsVerticalScrollIndicator","CartCountCard","ProductCatalogScreen","Cart","CheckoutProcess","OrderManagement","SingleProductViewScreen","Tab","createBottomTabNavigator","tabBar","addButton","addButtonText","_React$useState","_React$useState2","isModalVisible","_React$useState3","_React$useState4","isUpdateModalVisible","setUpdateModalVisible","_React$useState5","_React$useState6","_React$useState7","_React$useState8","userProfileData","setUserProfileData","handleMyAds","toggleModal","handleUpdateProfile","handleLogout","renderCustomHeader","CustomHeader","onBackPress","tabBarOptions","activeTintColor","inactiveTintColor","showLabel","Home","tabBarIcon","focused","StoreStackNavigator","Chat","Pressable","UpdateProfileModal","onUpdateProfile","updatedData","PostAdScreen","_route$params$ad","_route$params2","_route$params2$ad","_route$params3","_route$params3$ad","_route$params4","_route$params4$ad","_route$params5","_route$params5$ad","_route$params6","_route$params6$ad","_route$params7","_route$params7$ad","_route$params8","_route$params8$ad","_route$params9","_route$params9$ad","_route$params10","_route$params10$ad","_route$params11","_route$params11$ad","_route$params12","_route$params12$ad","setImages","setLocation","setAdTitle","setAdDescription","setPrice","maxResidents","setMaxResidents","preference","setPreference","setIsMaleOnly","_useState21","isFurnished","_useState22","setIsFurnished","_useState23","hasAttachedBathroom","_useState24","setHasAttachedBathroom","_useState25","isBachelorsAllowed","_useState26","setIsBachelorsAllowed","_useState27","_useState28","handleImageUpload","multiple","newImages","uploadImagesToS3","s3Images","imageUri","s3ImageUrl","push","handleSubmit","_route$params13","activityIndicatorContainer","imageContainer","heading","imageUploadButton","uploadButtonText","imageWrapper","deleteIcon","handleDeleteImage","fieldContainer","RNPickerSelect","onValueChange","items","pickerSelectStyles","multilineInput","stepperContainer","stepperButton","stepperButtonText","stepperValue","Switch","trackColor","false","true","submitButton","submitButtonText","minHeight","textAlignVertical","inputIOS","paddingRight","inputAndroid","onEdit","onDelete","onClaim","headerText","deleteConfirmationContainer","deleteConfirmationText","deleteConfirmationButtons","confirmButton","emptyListContainer","emptyListText","confirmButtonText","cancelButtonText","claimModalContainer","claimModalText","iconButtonText","modalCloseButton","userAds","setUserAds","selectedAd","setSelectedAd","isDeleteConfirmationVisible","setDeleteConfirmationVisible","isClaimModalVisible","setClaimModalVisible","fetchUserAds","handleEdit","handleEmail","handlePhoneCall","handleDelete","prevAds","handleClaim","AdCard","ListEmptyComponent","AntDesign","Entypo","fromAdDetails","TimeAgo","addLocale","en","timeAgo","messageBubble","maxWidth","messageText","numericTimestamp","toDate","getTime","format","_message$timestamp","date2","chatHeaderContainer","chatHeaderImage","chatHeaderText","coinsTitle","coinsValue","coinsContainer","AnimatedNumberComponent","setAnimatedNumberComponent","WebAnimatedNumbers","animatedNumbers","premiumButton","premiumButtonText","onTakePremium","keyboardAvoidingView","messageInputContainer","textInput","sendButton","sendButtonText","modalCloseText","webView","messageInputContainerWeb","suggestionsContainer","inputSection","flatList","modalCenteredView","modalStyles","messagePreview","imageStyle","flatListRef","userInfoFromAsync","showRequestDetailsModal","setShowRequestDetailsModal","setInput","messages","setMessages","isConversationStarter","setConversationStarter","combinedUid","setCombinedUid","showModal","setShowModal","setInputFocus","showOneCointModal","setOneCointModal","webviewUrl","isWeb","fetchUserInitialDetails","firstMessage","handleCloseRequestDetailsModal","setMatchUsers","matchDocRef","docSnapshot","sanitizedUserInto","usersMatched","fetchMessages","fetchedMessages","handleSendMessage","numerals","Array","from","count","regex","RegExp","match","isSuspiciousText","cancelable","addDoc","oneSignalResponse","userIds","timestampSeconds","seconds","timestampNanoseconds","nanoseconds","updatedCoins","prevUserInfo","handleModalClose","ChatHeader","ref","inverted","SenderMessage","ReceiverMessage","WebView","src","CoinModal","HomeTabNavigator","UserAds","AdDetailsScreen","Message","onAppUpdate","backdropColor","backdropOpacity","Debug","setLogLevel","LogLevel","Verbose","initialize","Constants","expoConfig","extra","oneSignalAppId","Notifications","requestPermission","App","navigationRef","useNavigationContainerRef","openedNotificationRef","showUpdateModal","setShowUpdateModal","action","setAction","setFontsLoaded","_opened","openResult","notification","additionalData","routes","parseInt","dispatch","CommonActions","_checkNetwork","Network","getNetworkStateAsync","isConnected","checkNetwork","identifyDevice","Analytics","removeEventListener","_loadResourcesAndDataAsync","Font","loadAsync","e","warn","loadResourcesAndDataAsync","_fetchAppUpdateStatus","_response$data","blockApp","fetchAppUpdateStatus","linking","prefixes","config","screens","NavigationContainer","onReady","addEventListener","AppStack","AuthStack","UpdateAppModal","canOpenURL","supported","vexo","registerRootComponent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","ns","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","g","globalThis","Function","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}