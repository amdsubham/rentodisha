{"version":3,"file":"static/js/main.b2940e76.js","mappings":"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","sources":["firebase/firebase.js","hooks/useAuth.js","services/config.js","context/UserContext.js","components/TextAnimator.js","screens/Authentication.js","utils/asyncStorage.js","screens/OnboardingScreen.js","screens/AdDetailsWithoutAuthentication.js","components/BannerCarousel.js","screens/HomeWithoutAuthentication.js","navigation/AuthStack.js","screens/Home.js","components/UpdateProfileModal.js","utils/getMatchedUserInfo.js","utils/generateIds.js","components/ChatRow.js","components/ChatList.js","screens/Chat.js","components/CustomHeader.js","api.js","screens/store/Cart.js","screens/store/CheckoutProcess.js","screens/store/OrderManagement.js","screens/store/SingleProductViewScreen.js","components/CartCountCard.js","screens/store/ProductCatalogScreen.js","navigation/StoreStackNavigator.js","screens/HomeTabNavigator.js","screens/PostAd.js","screens/Default.js","components/AdCard.js","screens/UserAds.js","screens/AdDetails.js","components/ReceiverMessage.js","components/SenderMessage.js","components/ChatHeader.js","components/MessageSuggestion.js","components/CoinModal.js","screens/Message.js","navigation/AppStack.js","components/UpdateAppModal.js","App.js","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from 'firebase/auth'\nimport { getFirestore } from 'firebase/firestore'\nimport { getStorage } from \"firebase/storage\";\nimport { initializeAuth, getReactNativePersistence } from 'firebase/auth';\nimport ReactNativeAsyncStorage from '@react-native-async-storage/async-storage';\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyApunLilBsWG8YvyLL6hNdpWW0oB_JGNl8\",\n    authDomain: \"odicult-c051c.firebaseapp.com\",\n    databaseURL: \"https://odicult-c051c-default-rtdb.firebaseio.com\",\n    projectId: \"odicult-c051c\",\n    storageBucket: \"odicult-c051c.appspot.com\",\n    messagingSenderId: \"264373040060\",\n    appId: \"1:264373040060:web:8d9c8e752ae975257331b9\",\n    measurementId: \"G-YJTXX7D32M\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app)\n\n// initializeAuth(app, {\n//     persistence: getReactNativePersistence(ReactNativeAsyncStorage)\n// });\nconst db = getFirestore()\nconst storage = getStorage();\nconst analytics = getAnalytics(app);\nexport { analytics, app, auth, db, storage }\n","\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from 'firebase/auth';\nimport { ActivityIndicator } from 'react-native';\nimport { auth, db } from '../firebase/firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useUser } from '../context/UserContext';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nconst AuthContext = createContext({\n})\n\nconst AuthProvider = ({ children }) => {\n  const { setUserInfoToStore } = useUser();\n  const [user, setUser] = useState(null);\n  const [loadingLogin, setLoadingLogin] = useState(true);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (authUser) => {\n      if (authUser) {\n        try {\n        } catch (error) {\n          console.error('Error fetching user details:', error);\n        }\n        setLoadingLogin(false);\n      } else {\n        // setUser(null);\n        setLoadingLogin(false);\n      }\n    });\n\n    return () => {\n      // Unsubscribe from the auth state listener when the component unmounts\n      unsubscribe();\n    };\n  }, []);\n\n  const signInWithEmailPassword = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        const uid = userCredential.user.uid;\n        setUserInfoToStore({ firebaseId: uid })\n\n      })\n      .catch((error) => {\n        console.log(\"Firebase SignIn Error\", error)\n      });\n  };\n\n  const signUpWithEmailPassword = async (email, password) => {\n    await createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        const uid = userCredential.user.uid;\n        setUserInfoToStore({ firebaseId: uid })\n      })\n      .catch((error) => {\n        console.log(\"Firebase SignUp Error\", error)\n      });\n  };\n\n  const logOut = async () => {\n    setLoadingLogin(true);\n    await signOut(auth);\n    setLoadingLogin(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        signInWithEmailPassword,\n        signUpWithEmailPassword,\n        loadingLogin,\n        logOut,\n      }}\n    >\n      {loadingLogin ?\n        <LinearGradient colors={['#007DBC', '#005AAA']}\n          style={{\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: \"100%\",\n            width: \"100%\"\n          }}>\n          <ActivityIndicator size=\"large\" color=\"white\" />\n        </LinearGradient>\n        : children}\n    </AuthContext.Provider>\n  );\n};\nconst AuthOpen = () => {\n  return useContext(AuthContext);\n};\n\nexport { AuthOpen, AuthProvider };","const API_BASE_URL = \"https://odicult.fruitnasta.com/api\";\nexport const BASE_URL = \"https://odicult.fruitnasta.com\";\nexport const DOMAIN_URL = \"https://rentodisha.com\";\nexport default API_BASE_URL;\n","// UserContext.js\n\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthOpen } from '../hooks/useAuth';\nimport API_BASE_URL from '../services/config';\n\nconst UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n    const [userToken, setUserToken] = useState(null);\n    const [userDetails, setUserDetails] = useState(null);\n    const [userInfo, setUserInfo] = useState(null);\n    useEffect(() => {\n        const loadUserToken = async () => {\n            try {\n                const storedToken = await AsyncStorage.getItem('userToken');\n                if (storedToken) {\n                    setUserToken(storedToken);\n\n                }\n            } catch (error) {\n                console.error('Error loading user token:', error);\n            }\n        };\n        loadUserToken();\n    }, []);\n\n    const fetchUserDetails = async () => {\n        const response = await fetch(`${API_BASE_URL}/user/getUserByPhoneNumber/${userToken.toString()}`);\n        if (response.ok) {\n            const userData = await response.json();\n            const { email, gender, image, name, phoneNumber, _id, tenantType, rentPosts, coins, subscriptionStartDate, location } = userData\n            setUserDetails(userData);\n            setUserInfoToStore({ email, gender, image, name, phone: phoneNumber, id: _id, tenantType, rentPosts, coins, subscriptionStartDate, location })\n        } else {\n            console.error('Error fetching user details:', response.statusText);\n        }\n    }\n    const login = async (token) => {\n        setUserToken(token);\n        try {\n            // Store the user token in async storage\n            await AsyncStorage.setItem('userToken', token);\n        } catch (error) {\n            console.error('Error storing user token:', error);\n        }\n    };\n\n    const logout = async () => {\n        setUserToken(null);\n        removeUserInfoFromStore()\n        try {\n            // Remove the user token from async storage\n            await AsyncStorage.removeItem('userToken');\n        } catch (error) {\n            console.error('Error removing user token:', error);\n        }\n    };\n\n\n    const removeUserInfoFromStore = async () => {\n        try {\n            // Remove the user info from async storage\n            await AsyncStorage.removeItem('userInfo');\n            // You can also reset the user info state if needed\n            setUserInfo({});\n        } catch (error) {\n            console.error('Error removing user info:', error);\n        }\n    };\n\n    const setUserInfoToStore = async ({\n        name,\n        id,\n        firebaseId,\n        phone,\n        gender,\n        rentPost,\n        email,\n        image,\n        tenantType,\n        coins,\n        subscriptionStartDate = 'NA',\n        location = {},\n        locationMarked,\n    }) => {\n        try {\n            // Get the existing user info from async storage\n            const existingUserInfo = await AsyncStorage.getItem('userInfo');\n            let userInfo = existingUserInfo ? JSON.parse(existingUserInfo) : {};\n\n            // Check if firebaseId exists in userInfo\n            if (!userInfo.firebaseId || !userInfo.firebaseId.length) {\n                userInfo = {\n                    ...userInfo,\n                    firebaseId,\n                };\n            }\n\n            // Update the other user info fields\n            userInfo = {\n                ...userInfo,\n                name,\n                id,\n                phone,\n                gender,\n                rentPost,\n                email,\n                image,\n                tenantType,\n                coins,\n                subscriptionStartDate,\n                location,\n                locationMarked\n            };\n\n            await AsyncStorage.setItem('userInfo', JSON.stringify(userInfo));\n            setUserInfo(userInfo);\n        } catch (error) {\n            console.error('Error storing/updating user info:', error);\n        }\n    };\n\n    return (\n        <UserContext.Provider value={{\n            userToken,\n            userId: userInfo?.id,\n            login,\n            logout,\n            userDetails,\n            fetchUserDetails,\n            setUserInfoToStore,\n            userInfo,\n        }}>\n            {children}\n        </UserContext.Provider>\n    );\n};\n\nexport const useUser = () => {\n    return useContext(UserContext);\n};\n","import * as React from 'react';\nimport { View, StyleSheet, Animated } from 'react-native';\n\nexport default class TextAnimator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textArr: props.content.trim().split(' '),\n            animatedValues: [],\n        };\n        this.state.textArr.forEach((_, i) => {\n            this.state.animatedValues[i] = new Animated.Value(0);\n        });\n    }\n\n    componentDidMount() {\n        this.animate();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.content !== this.props.content) {\n            this.setState({\n                textArr: this.props.content.trim().split(' '),\n                animatedValues: this.props.content.trim().split(' ').map(() => new Animated.Value(0)),\n            }, () => {\n                this.animate();\n            });\n        }\n    }\n\n    animate = (toValue = 1) => {\n        const animations = this.state.textArr.map((_, i) => {\n            return Animated.timing(this.state.animatedValues[i], {\n                toValue,\n                duration: this.props.duration,\n                useNativeDriver: true\n            });\n        });\n\n        Animated.stagger(\n            this.props.duration / 5,\n            toValue === 0 ? animations.reverse() : animations\n        ).start(() => {\n            setTimeout(() => this.animate(toValue === 0 ? 1 : 0), 1000);\n            if (this.props.onFinish) {\n                this.props.onFinish();\n            }\n        });\n    };\n\n    render() {\n        return (\n            <View style={[this.props.style, styles.textWrapper]}>\n                {this.state.textArr.map((word, index) => {\n                    return (\n                        <Animated.Text\n                            key={`${word}-${index}`}\n                            style={[\n                                this.props.textStyle,\n                                {\n                                    opacity: this.state.animatedValues[index],\n                                    transform: [\n                                        {\n                                            translateY: Animated.multiply(\n                                                this.state.animatedValues[index],\n                                                new Animated.Value(-5)\n                                            )\n                                        }\n                                    ],\n                                },\n                            ]}\n                        >\n                            {word}\n                            {`${index < this.state.textArr.length - 1 ? ' ' : ''}`}\n                        </Animated.Text>\n                    );\n                })}\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    textWrapper: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    }\n});\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {\n    StyleSheet,\n    View,\n    Text,\n    TouchableOpacity,\n    ActivityIndicator,\n    ScrollView,\n    Dimensions,\n    KeyboardAvoidingView,\n    Platform\n} from 'react-native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { Image } from 'react-native';\n\nimport PhoneNumberInput from 'react-native-phone-number-input';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport { AuthOpen } from '../hooks/useAuth';\nimport Lottie from 'lottie-react-native';\nimport LottieView from 'react-native-web-lottie';\n\nimport { CodeField, Cursor, useClearByFocusCell } from 'react-native-confirmation-code-field';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport TextAnimator from '../components/TextAnimator';\nimport { logEvent } from 'firebase/analytics';\nimport { analytics } from '../firebase/firebase';\n\nconst { width, height } = Dimensions.get('window');\nconst CELL_COUNT = 6;\nexport default function Authentication({ route, navigation }) {\n    const adId = route.params?.adIdm\n    const { signInWithEmailPassword, signUpWithEmailPassword } = AuthOpen();\n    const [formattedValue, setFormattedValue] = useState('');\n    const { login } = useUser();\n    const [isUserExists, setIsUserExists] = useState(false);\n    const [screen, setScreen] = useState(1);\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [otp, setOtp] = useState('');\n    const [assignedOtp, setAssignedOtp] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [isTextInputFocused, setIsTextInputFocused] = useState(false);\n    const [currentTextIndex, setCurrentTextIndex] = useState(0);\n    const animatedTexts = [\n        'No Broker in Between 🏠',\n        'Fast and Reliable 🔥',\n        'Your Dream House Awaits! 🏠'\n    ];\n    const [props, getCellOnLayoutHandler] = useClearByFocusCell({\n        value: otp,\n        setValue: setOtp,\n    });\n\n    useEffect(() => {\n        setIsLoading(true)\n        if (adId) {\n            setTimeout(() => {\n                navigation.navigate('AdDetailsWithoutAuthentication', { adId });\n            }, 100);\n        }\n        setIsLoading(false)\n    }, [adId]);\n\n\n    const handleAnimationComplete = () => {\n        if (currentTextIndex < animatedTexts.length - 1) {\n            setCurrentTextIndex(currentTextIndex + 1);\n        }\n    };\n\n    const renderMedia = () => {\n        if (Platform.OS === 'web') {\n            return (\n                <LottieView\n                    source={require('../assets/animations/dreamHouse.json')}\n                    autoPlay\n                    loop\n                />\n            );\n        } else {\n            return (\n                <Lottie\n                    source={require('../assets/animations/dreamHouse.json')}\n                    autoPlay\n                    loop\n                />\n            );\n        }\n    };\n\n    const generateOtp = () => {\n        const otp =\n            (phoneNumber === '7008105210' || phoneNumber === '7777711111'\n                || phoneNumber === '7777722222' || phoneNumber === '7777733333'\n                || phoneNumber === '7777744444' || phoneNumber === '7777755555' || phoneNumber === '7777766666'\n            )\n                ? 121212\n                : Math.floor(100000 + Math.random() * 900000);\n        setAssignedOtp(otp);\n        return otp;\n    };\n\n    const fetchUserExistsStatus = async () => {\n        const checkPhoneResponse = await fetch(\n            `${API_BASE_URL}/user/check-phone/${phoneNumber}`\n        );\n        const checkPhoneData = await checkPhoneResponse.json();\n        setIsUserExists(checkPhoneData.exists);\n    };\n\n    const sendOTP = async () => {\n        try {\n            setIsLoading(true);\n\n            const postData = {\n                phoneNumber: formattedValue,\n                assignedOtp: generateOtp(),\n            };\n            const response = await axios.post(`${API_BASE_URL}/user/sendotp`, postData, {\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            });\n\n            const { data } = response;\n            // Check the response from your own server's endpoint\n            if (data.status === 'OK') {\n                fetchUserExistsStatus();\n                setScreen(2);\n            } else {\n                alert('Failed to send OTP. Please try again.');\n            }\n        } catch (error) {\n            // Handle errors\n            console.error('Error sending OTP:', error.response?.data || error.message);\n            alert('Error sending OTP. Please check your network connection.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const verifyOTP = () => {\n        try {\n            setIsLoading(true);\n            if (otp === assignedOtp.toString()) {\n                login(phoneNumber);\n                if (isUserExists) {\n                    signInWithEmailPassword(`${phoneNumber}@gmail.com`, phoneNumber);\n                } else {\n                    signUpWithEmailPassword(`${phoneNumber}@gmail.com`, phoneNumber);\n                }\n            } else {\n                // OTPs do not match, show an error alert\n                alert('Invalid OTP. Please try again.');\n            }\n        } catch (error) {\n            alert('Error verifying OTP. Please try again.');\n            console.log('error', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleTextInputFocus = () => {\n        setIsTextInputFocused(true);\n    };\n\n    const handleTextInputBlur = () => {\n        setIsTextInputFocused(false);\n    };\n\n    const renderScreen = () => {\n        switch (screen) {\n            case 1:\n                return (\n                    <LinearGradient\n                        colors={['#003366', '#006699', '#0099CC']}\n                        style={styles.gradient}\n                        start={{ x: 0, y: 0 }}\n                        end={{ x: 1, y: 1 }}\n                    >\n                        {(!isTextInputFocused) && (<View style={styles.lottie}>\n                            {renderMedia()}\n                            <TextAnimator\n                                content={animatedTexts[currentTextIndex]}\n                                textStyle={styles.textStyle}\n                                duration={1500}\n                                onFinish={handleAnimationComplete}\n                            />\n                        </View>)}\n                        <KeyboardAvoidingView\n                            behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n                            style={{ flex: 1 }}\n                            keyboardVerticalOffset={Platform.OS === 'ios' ? -100 : 0}\n                        >\n                            <ScrollView\n                                contentContainerStyle={styles.container}\n                                keyboardShouldPersistTaps=\"handled\"\n                            >\n                                <Text style={styles.header}>Enter Your Mobile Number</Text>\n                                <Text style={styles.subheader}>\n                                    We will send you a Confirmation Code\n                                </Text>\n\n                                <PhoneNumberInput\n                                    defaultCode=\"IN\"\n                                    value={phoneNumber}\n                                    onChangeText={(text) => {\n                                        logEvent(analytics, \"phone number changed\", text);\n                                        setPhoneNumber(text);\n                                    }}\n                                    onChangeFormattedText={(text) => {\n                                        setFormattedValue(text);\n                                    }}\n                                    placeholder=\"Enter Phone Number\"\n                                    withDarkTheme\n                                    withShadow\n                                    onFocus={handleTextInputFocus}\n                                    onBlur={handleTextInputBlur}\n                                />\n\n                                {isLoading ? (\n                                    <ActivityIndicator size=\"small\" color=\"#E5E5E5\" />\n                                ) : (\n                                    <TouchableOpacity\n                                        style={styles.button}\n                                        onPress={sendOTP}\n                                    >\n                                        <Text style={styles.buttonText}>VERIFY</Text>\n                                    </TouchableOpacity>\n                                )}\n                            </ScrollView>\n                        </KeyboardAvoidingView>\n                    </LinearGradient>\n                );\n            case 2:\n\n                return (\n                    <LinearGradient\n                        colors={['#003366', '#006699', '#0099CC']}\n                        style={styles.gradient}\n                        start={{ x: 0, y: 0 }}\n                        end={{ x: 1, y: 1 }}\n                    >\n                        <View style={styles.iconContainer}>\n                            <TouchableOpacity onPress={() => setScreen(1)}>\n                                <Ionicons name=\"arrow-back\" size={30} color=\"#FFFFFF\" />\n                            </TouchableOpacity>\n                        </View>\n                        <ScrollView\n                            contentContainerStyle={styles.container}\n                            keyboardShouldPersistTaps=\"handled\"\n                        >\n                            <Text style={styles.header}>Enter Verification Code</Text>\n                            <CodeField\n                                {...props}\n                                caretHidden={false}\n                                value={otp}\n                                onChangeText={setOtp}\n                                cellCount={CELL_COUNT}\n                                rootStyle={styles.codeFieldRoot}\n                                keyboardType=\"number-pad\"\n                                textContentType=\"oneTimeCode\"\n                                renderCell={({ index, symbol, isFocused }) => (\n                                    <View\n                                        onLayout={getCellOnLayoutHandler(index)}\n                                        key={index}\n                                        style={[styles.cell, isFocused && styles.focusCell]}\n                                    >\n                                        <Text style={styles.cellText}>\n                                            {symbol || (isFocused ? <Cursor /> : null)}\n                                        </Text>\n                                    </View>\n                                )}\n                            />\n                            <View style={styles.buttonContainer}>\n                                {isLoading ? (\n                                    <ActivityIndicator size=\"small\" color=\"#FFFFFF\" />\n                                ) : (\n                                    <>\n                                        <TouchableOpacity\n                                            style={styles.button}\n                                            onPress={verifyOTP}\n                                        >\n                                            <Text style={styles.buttonText}>VERIFY OTP</Text>\n                                        </TouchableOpacity>\n                                        <TouchableOpacity\n                                            onPress={sendOTP}\n                                        >\n                                            <Text style={styles.resendText}>RESEND OTP</Text>\n                                        </TouchableOpacity>\n                                    </>\n                                )}\n                            </View>\n                        </ScrollView>\n                    </LinearGradient>\n                );\n\n\n\n            default:\n                return <View />;\n        }\n    };\n\n    return renderScreen();\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        // backgroundColor: '#E5E5E5',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    header: {\n        fontSize: 24,\n        color: '#E5E5E5',\n        fontWeight: 'bold',\n        marginBottom: 10,\n        fontFamily: 'open-sans-regular'\n    },\n    subheader: {\n        fontSize: 16,\n        color: '#E5E5E5',\n        marginBottom: 30,\n        fontFamily: 'open-sans-regular'\n    },\n    button: {\n        top: 15,\n        backgroundColor: '#FFFFFF',\n        paddingVertical: 15,\n        paddingHorizontal: 30,\n        borderRadius: 5,\n\n    },\n    resendButton: {\n        backgroundColor: '#E5E5E5',\n        paddingVertical: 15,\n        paddingHorizontal: 30,\n        borderRadius: 5,\n        marginTop: 10,\n    },\n    backButton: {\n        backgroundColor: '#E5E5E5',\n        paddingVertical: 15,\n        paddingHorizontal: 30,\n        borderRadius: 5,\n        marginBottom: 10,\n    },\n    buttonText: {\n        color: '#007DBC',\n        fontFamily: 'open-sans-bold'\n    },\n    buttonContainer: {\n        marginTop: 20,\n        alignItems: 'center',\n    },\n    countryPickerContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n        width: 110,\n        borderColor: '#007DBC',\n        borderWidth: 1,\n        borderRadius: 5,\n    },\n    countryPicker: {\n        flex: 1,\n        height: 40,\n        color: '#007DBC',\n    },\n    lottie: {\n        width: width,\n        height: width,\n        alignItems: 'center',\n        justifyContent: 'center',\n        top: 50,\n    },\n    image: {\n        width: 250,\n        height: 250,\n        resizeMode: 'contain', // or 'cover' depending on your requirement\n    },\n    codeFieldRoot: {\n        marginTop: 20,\n        width: 280,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n    cell: {\n        width: 30,\n        height: 45,\n        lineHeight: 38,\n        fontSize: 24,\n        borderWidth: 2,\n        borderColor: '#FFFFFF',\n        textAlign: 'center',\n        marginRight: 8,\n    },\n    focusCell: {\n        borderColor: '#000',\n    },\n    cellText: {\n        color: '#FFFFFF',\n        fontSize: 36,\n        textAlign: 'center',\n    },\n    gradient: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    iconContainer: {\n        position: 'absolute',\n        top: 50,  // Adjust according to your need\n        left: 20,  // Adjust according to your need\n        zIndex: 10,\n    },\n    resendText: {\n        color: '#FFFFFF',\n        textAlign: 'center',\n        marginTop: 15,  // Or any other value that suits your design\n        fontSize: 16,   // Or any other value that suits your design\n        top: 20\n    },\n    textStyle: {\n        fontSize: 20,\n        fontFamily: 'open-sans-regular',\n        marginBottom: 14,\n        color: '#FFFFFF',\n        marginTop: 20, // Added this line to create a gap of 50\n    },\n});\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport const setItem = async (key, value) => {\n  try {\n    await AsyncStorage.setItem(key, value);\n  } catch (error) {\n    console.log('Error storing value: ', error);\n  }\n};\n\n\nexport const getItem = async (key) => {\n  try {\n    const value = await AsyncStorage.getItem(key);\n    return value;\n  } catch (error) {\n    console.log('Error retrieving value: ', error);\n  }\n};\n\nexport const removeItem = async (key) => {\n  try {\n    await AsyncStorage.removeItem(key);\n  } catch (error) {\n    console.log('Error deleting value: ', error);\n  }\n}","import { View, Text, StyleSheet, Dimensions, TouchableOpacity } from 'react-native'\nimport React from 'react'\nimport Onboarding from 'react-native-onboarding-swiper';\nimport Lottie from 'lottie-react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { setItem } from '../utils/asyncStorage';\n\nconst { width, height } = Dimensions.get('window');\n\nexport default function OnboardingScreen() {\n    const navigation = useNavigation();\n\n    const handleDone = () => {\n        navigation.navigate('HomeTabNavigator');\n        setItem('onboarded', '1');\n    }\n\n    const doneButton = ({ ...props }) => {\n        return (\n            <TouchableOpacity style={styles.doneButton} {...props}>\n                <Text>Done</Text>\n            </TouchableOpacity>\n        )\n\n    }\n    return (\n        <View style={styles.container}>\n            <Onboarding\n                onDone={handleDone}\n                onSkip={handleDone}\n                // bottomBarHighlight={false}\n                DoneButtonComponent={doneButton}\n                containerStyles={{ paddingHorizontal: 15 }}\n                pages={[\n                    {\n                        backgroundColor: '#003366',\n\n                        image: (\n                            <View style={styles.lottie}>\n                                <Lottie source={require('../assets/animations/nearbyRooms.json')} autoPlay loop />\n                            </View>\n                        ),\n                        title: 'Nearby Rooms',\n                        subtitle: 'Discover rooms close to your current location easily.',\n                    },\n                    {\n                        backgroundColor: '#006699',\n                        image: (\n                            <View style={styles.lottie}>\n                                <Lottie source={require('../assets/animations/directMessageFlatmates.json')} autoPlay loop />\n                            </View>\n                        ),\n                        title: 'Direct Message Flatmate',\n                        subtitle: 'Contact flatmates directly, no broker in between.',\n                    },\n                    {\n                        backgroundColor: '#0099CC',\n                        image: (\n                            <View style={styles.lottie}>\n                                <Lottie source={require('../assets/animations/verifiedListings.json')} autoPlay loop />\n                            </View>\n                        ),\n                        title: 'Verified Listings',\n                        subtitle: '100% verified rooms with 1000+ users trusted.',\n                    },\n                ]}\n            />\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: 'white'\n    },\n    lottie: {\n        width: width * 0.9,\n        height: width\n    },\n    doneButton: {\n        padding: 20,\n        // backgroundColor: 'white',\n        // borderTopLeftRadius: '100%',\n        // borderBottomLeftRadius: '100%'\n    }\n})","import React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, Image, TouchableOpacity, ScrollView, SafeAreaView, Share, Platform, Clipboard, Alert, ActivityIndicator, } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { db } from '../firebase/firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useUser } from '../context/UserContext';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport API_BASE_URL, { DOMAIN_URL } from '../services/config';\nimport * as FileSystem from 'expo-file-system';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons'; // Import for larger icon\n\nconst amenitiesMapping = [\n    { key: 'isFurnished', label: 'Furnished', icon: 'bed-outline' },\n    { key: 'hasAttachedBathroom', label: 'Attached Bathroom', icon: 'water-outline' },\n    { key: 'isMaleOnly', label: 'Male Only', icon: 'male-outline' },\n    { key: 'isBachelorsAllowed', label: 'Bachelors Allowed', icon: 'people-outline' },\n    // Add other attributes and their corresponding labels and icons here...\n];\n\nconst AdDetailsWithoutAuthentication = ({ route }) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const { userInfo } = useUser();\n    const { adId } = route.params;\n    const navigation = useNavigation();\n    const [ad, setAd] = useState();\n    const [firebaseId, setFirebaseId] = useState(ad?.firebaseId);\n    const [flatmatesData, setFlatmatesData] = useState(ad?.flatmates);\n    const [userDetails, setUserDetails] = useState(null);\n    const [showDirectMessageButton, setShowDirectMessageButton] = useState(false);\n    const isPostedByCurrentUser = firebaseId === userInfo?.firebaseId;\n    const [isAdAvailable, setIsAdAvailable] = useState(true);\n    useEffect(() => {\n        const fetchPostDetails = async () => {\n            setIsLoading(true);\n\n            try {\n                const response = await fetch(`${API_BASE_URL}/rentpost/getPostsById/${adId}`);\n                if (response.ok) {\n                    const data = await response.json();\n                    setAd(data)\n                    setFirebaseId(data?.firebaseId)\n                    setFlatmatesData(data?.flatmates || [])\n                    setIsAdAvailable(true);\n                } else {\n                    setIsAdAvailable(false);\n                    console.error('Failed to fetch user ads');\n                }\n            } catch (error) {\n                console.error('Error fetching user ads:', error);\n            } finally {\n                setIsLoading(false); // Stop loading\n            }\n        };\n\n        if (adId) {\n            fetchPostDetails();\n        }\n    }, [adId]);\n\n\n    const onShare = async () => {\n        const shareMessage = `${ad?.adTitle} At Price ₹${ad?.price}\\n\\n Check this out!! ✨🏠🌟\\n\\n` + `${DOMAIN_URL}/ads/${ad?._id}`;\n\n        if (Platform.OS === 'web') {\n            // Attempt to use the Web Share API if available\n            if (navigator.share) {\n                navigator.share({\n                    title: ad?.adTitle,\n                    text: shareMessage,\n                    // url: ad?.images[0],\n                }).catch(error => console.log('Error sharing', error));\n            } else {\n                Clipboard.setString(shareMessage);\n                Alert.alert('Link copied to clipboard');\n            }\n        } else {\n            // Mobile sharing\n            try {\n                await Share.share({\n                    message: shareMessage,\n                    //url: ad?.images[0], // Include this only if it's a local file\n                });\n            } catch (error) {\n                console.error(error.message);\n            }\n        }\n    };\n\n    useEffect(() => {\n        const fetchUserDetails = async () => {\n            try {\n                const userDoc = await getDoc(doc(db, 'user_profiles', firebaseId));\n\n                if (userDoc.exists()) {\n                    setUserDetails(userDoc.data());\n                    setShowDirectMessageButton(true);\n                }\n            } catch (error) {\n                console.error('Error fetching user details:', error);\n            }\n        };\n\n        if (firebaseId) {\n            fetchUserDetails();\n        }\n    }, [firebaseId]);\n\n\n    const handleDirectMessage = () => {\n        navigation.navigate('HomeTabNavigator');\n    };\n\n    const handleBackButton = () => {\n        navigation.navigate('HomeWithoutAuthentication');\n    };\n\n    if (isLoading) {\n        return (\n            <View style={styles.loaderContainer}>\n                <ActivityIndicator size=\"large\" color=\"#FFFFFF\" />\n            </View>\n        )\n    }\n    if (!isAdAvailable) {\n        return (\n            <LinearGradient colors={['#007DBC', '#005AAA']} style={styles.soldContainer}>\n                <MaterialIcons name=\"error-outline\" size={60} color=\"white\" />\n                <Text style={styles.soldMessage}>This ad has been sold</Text>\n                <TouchableOpacity onPress={handleBackButton} style={styles.seeMoreButtonContainer}>\n\n                    <Text style={styles.seeMoreButtonText}> See More</Text>\n                    <Ionicons name=\"arrow-forward\" size={24} color=\"white\" />\n                </TouchableOpacity>\n            </LinearGradient>\n        );\n    }\n    return (\n        <SafeAreaView style={styles.flexContainer}>\n            <View style={{ height: \"90%\", backgroundColor: '#f8f9fa', }}>\n                <LinearGradient colors={['#007DBC', '#005AAA']} style={styles.header}>\n                    <TouchableOpacity onPress={handleBackButton} style={styles.seeMoreButtonContainer}>\n                        <Ionicons name=\"arrow-back\" size={24} color=\"white\" />\n                        <Text style={styles.seeMoreButtonText}> See More</Text>\n                    </TouchableOpacity>\n                </LinearGradient>\n                <ScrollView contentContainerStyle={styles.scrollViewContent}>\n                    <Image source={{ uri: ad?.images[0] }} style={styles.villaImage} />\n                    <TouchableOpacity style={styles.shareIcon} onPress={onShare}>\n                        <Ionicons name=\"share-social\" size={24} color=\"white\" />\n                    </TouchableOpacity>\n                    <Text style={styles.villaName}>{ad?.adTitle}</Text>\n                    <Text style={styles.location}>{ad?.location}</Text>\n                    <View style={styles.offerContainer}>\n                        <FontAwesome name=\"check\" size={24} color=\"white\" style={styles.trustIcon} />\n\n                        <Text style={styles.offerText}>Verified User</Text>\n                    </View>\n                    <Text style={styles.description}>{ad?.adDescription}</Text>\n                    {ad &&\n                        (<View style={styles.amenitiesContainer}>\n                            <View style={styles.amenitiesList}>\n                                {amenitiesMapping.map(amenity => {\n                                    if (ad[amenity.key]) {\n                                        return (\n                                            <View style={styles.amenityItem} key={amenity.key}>\n                                                <Ionicons name={amenity.icon} size={24} color=\"white\" />\n                                                <Text style={styles.amenityLabel}>{amenity.label}</Text>\n                                            </View>\n                                        );\n                                    }\n                                    return null;\n                                })}\n                            </View>\n                        </View>)}\n                    {\n                        (ad && flatmatesData.length > 0) &&\n                        (<View style={styles.flatmatesSection}>\n                            <Text style={styles.title}>Flatmates</Text>\n                            <View style={styles.flatmatesGrid}>\n                                {flatmatesData.map((flatmate, index) => (\n                                    <View key={index} style={styles.flatmateCard}>\n                                        <Image source={{ uri: flatmate.image }} style={styles.flatmateImage} />\n                                        <Text style={styles.flatmateName}>{flatmate.name}</Text>\n                                        <Text style={styles.flatmateOccupation}>{flatmate.occupation}</Text>\n                                    </View>\n                                ))}\n                            </View>\n                        </View>)\n                    }\n                </ScrollView>\n            </View>\n            {isPostedByCurrentUser ? (\n                // Display a message indicating that the advertisement is posted by the current user\n                <Text style={styles.postedByCurrentUserMessage}>\n                    This advertisement is posted by you.\n                </Text>\n            ) : showDirectMessageButton && (\n                <View style={styles.footer}>\n                    <View style={styles.priceContainer}>\n                        <Text style={styles.discountedPrice}>₹{ad?.price}/month</Text>\n                    </View>\n                    <TouchableOpacity onPress={handleDirectMessage} style={styles.bookNowButton}>\n                        <Text style={styles.bookNowButtonText}>\n                            Direct Message\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n\n            )}\n\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    flexContainer: {\n        flex: 1,\n        backgroundColor: '#f8f9fa',\n        fontFamily: 'open-sans-regular'\n    },\n    container: {\n        flex: 1,\n    },\n    loaderContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#005AAA', // Adjust the color and opacity to match your gradient\n    },\n    footer: {\n        borderTopWidth: 1,\n        borderColor: '#eaecef',\n        backgroundColor: '#fff',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        zIndex: 10,\n        padding: 16,\n        flexDirection: 'row',\n        ...(Platform.OS === 'web' ? {\n            position: 'fixed',\n            bottom: 0,\n            left: 0,\n            right: 0,\n        } : {\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            right: 0,\n        }),\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        padding: 16,\n        alignItems: 'center',\n        borderBottomWidth: 1,\n        borderBottomColor: '#eaecef',\n    },\n    icon: {\n        width: 24,\n        height: 24,\n    },\n    backButton: {\n        fontSize: 18,\n        color: '#007bff',\n    },\n    villaImage: {\n        width: '100%',\n        height: 300,\n        resizeMode: 'cover',\n    },\n    villaName: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginVertical: 8,\n        marginHorizontal: 16,\n        color: '#212529',\n        fontFamily: 'open-sans-bold'\n    },\n    location: {\n        fontSize: 16,\n        color: '#6c757d',\n        marginBottom: 8,\n        marginLeft: 16,\n        fontFamily: 'open-sans-regular'\n    },\n    offerContainer: {\n        flexDirection: 'row',\n        backgroundColor: '#007DBC',\n        padding: 12,\n        marginHorizontal: 16,\n        marginVertical: 8,\n        borderRadius: 4,\n    },\n    offerText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontFamily: 'open-sans-regular'\n    },\n    description: {\n        marginHorizontal: 16,\n        marginVertical: 8,\n        fontSize: 16,\n        color: '#212529',\n        fontFamily: 'open-sans-regular'\n    },\n    hostImage: {\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        margin: 16,\n        borderWidth: 2,\n        borderColor: '#eaecef',\n    },\n    hostName: {\n        fontSize: 18,\n        fontWeight: '500',\n        marginLeft: 16,\n        color: '#212529',\n    },\n    price: {\n        fontSize: 28,\n        fontWeight: 'bold',\n        marginHorizontal: 16,\n        marginVertical: 8,\n        color: '#28a745',\n    },\n    directMessageButton: {\n        backgroundColor: '#28a745',\n        padding: 12,\n        marginHorizontal: 16,\n        marginVertical: 8,\n        borderRadius: 4,\n        alignItems: 'center',\n    },\n    directMessageButtonText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontSize: 18,\n    },\n    postedByCurrentUserMessage: {\n        color: '#dc3545',\n        textAlign: 'center',\n        marginBottom: 10,\n        fontSize: 16,\n    },\n    amenitiesContainer: {\n        padding: 16,\n        borderBottomWidth: 1,\n        borderBottomColor: '#eaecef',\n        backgroundColor: '#fff',\n    },\n    amenitiesTitle: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#212529',\n        marginBottom: 8,\n        fontFamily: 'open-sans-bold'\n    },\n    amenitiesList: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'flex-start',\n    },\n    amenityItem: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        backgroundColor: '#007DBC', // This sets the background color to a blue shade\n        borderRadius: 16,\n        padding: 8,\n        marginRight: 8,\n        marginBottom: 8,\n    },\n    amenityLabel: {\n        marginLeft: 8,\n        fontSize: 14,\n        color: '#FFFFFF', // This sets the text color to white\n        fontFamily: 'open-sans-regular'\n    },\n    priceContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    originalPrice: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        textDecorationLine: 'line-through',\n        marginRight: 8,\n    },\n    discountedPrice: {\n        fontSize: 22,\n        fontWeight: 'bold',\n    },\n    bookNowButton: {\n        backgroundColor: '#28a745',\n        padding: 12,\n        borderRadius: 4,\n        alignItems: 'center',\n    },\n    bookNowButtonText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontSize: 18,\n    },\n    flatmateRow: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    flatmatesSection: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#e9ecef', // Changed background color for better visibility\n    },\n    title: {\n        fontSize: 24,\n        marginBottom: 20,\n        fontFamily: 'open-sans-bold'\n    },\n    flatmatesGrid: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between', // To maintain equal spacing between two cards in a row\n    },\n    flatmateCard: {\n        width: '48%', // Slightly less than half to account for any potential margins or paddings\n        marginBottom: 15,\n        padding: 10, // Added some padding\n        backgroundColor: '#fff', // White background for the card\n        borderRadius: 8, // Rounded corners\n        alignItems: 'center', // Center items horizontally\n    },\n    flatmateImage: {\n        width: 50,\n        height: 50,\n        borderRadius: 25,\n        marginBottom: 10, // Margin below the image\n    },\n    flatmateName: {\n        fontSize: 18,\n        fontWeight: '600',\n        fontFamily: 'open-sans-regular',\n        textAlign: 'center', // Center the text\n    },\n    flatmateOccupation: {\n        fontSize: 14,\n        color: 'gray',\n        fontFamily: 'open-sans-light',\n        textAlign: 'center', // Center the text\n    },\n    trustIcon: {\n        marginRight: 5,  // Some space between the icon and text\n        bottom: 2,\n    },\n    scrollViewContent: {\n        paddingBottom: 20, // Add some bottom padding to accommodate for any absolutely positioned elements\n    },\n    seeMoreButtonContainer: {\n        flexDirection: 'row', // Align items in a row\n        alignItems: 'center', // Center items vertically\n        padding: 10,\n        borderRadius: 5,\n        // Add any additional styling as needed\n    },\n    seeMoreButtonText: {\n        color: '#FFFFFF', // White text color\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginLeft: 5, // Space between icon and text\n        // Add more text styling as needed\n    },\n    shareIcon: {\n        position: 'absolute',\n        right: 10,\n        top: 10,\n        backgroundColor: 'rgba(0, 0, 0, 0.6)',\n        padding: 8,\n        borderRadius: 25,\n        width: 40,\n        zIndex: 1, // Add this line\n    },\n    soldContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    soldMessage: {\n        fontSize: 24,\n        color: 'white',\n        marginTop: 20,\n        textAlign: 'center',\n        fontFamily: 'open-sans-bold'\n    },\n\n});\n\n\n\nexport default AdDetailsWithoutAuthentication;\n","import { logEvent } from 'firebase/analytics';\nimport React from 'react';\nimport { Image, Dimensions, StyleSheet } from 'react-native';\nimport Carousel from 'react-native-banner-carousel';\nimport { analytics } from '../firebase/firebase';\n\nconst BannerWidth = Dimensions.get('window').width;\nconst BannerHeight = 200; // Adjust the height as needed\n\nconst BannerCarousel = ({ data }) => {\n    const renderPage = (image, index) => (\n        <Image key={index} source={{ uri: image }} style={styles.bannerImage} />\n    );\n\n    return (\n        <Carousel\n            autoplay\n            autoplayTimeout={5000}\n            loop\n            index={0}\n            pageSize={BannerWidth}\n        >\n            {data.map((image, index) => renderPage(image, index))}\n        </Carousel>\n    );\n};\n\nconst styles = StyleSheet.create({\n    bannerImage: {\n        width: BannerWidth,\n        height: BannerHeight,\n        // Add any additional styling for your images here\n    },\n    // You can add additional styles if needed\n});\n\nexport default BannerCarousel;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { View, Text, FlatList, TouchableOpacity, StyleSheet, Image, RefreshControl, Dimensions } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { collection, getDocs, getFirestore, query } from 'firebase/firestore'\nimport Animated, { useSharedValue, useAnimatedStyle, withSpring } from 'react-native-reanimated';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { analytics, db } from '../firebase/firebase';\nimport BannerCarousel from '../components/BannerCarousel';\nimport { logEvent } from 'firebase/analytics';\nimport SkeletonLoader from \"expo-skeleton-loader\";\nconst { height, width } = Dimensions.get('window');\n\nconst HomeWithoutAuthentication = () => {\n    const { userToken, userInfo } = useUser();\n    const [ads, setAds] = useState([]);\n    const [banners, setBanners] = useState([]);\n    const [refreshing, setRefreshing] = useState(false);\n    const navigation = useNavigation();\n    const [bannersLoading, setBannersLoading] = useState(true);\n    const [genderFilter, setGenderFilter] = useState('all'); // 'all', 'male', 'female'\n    const [filteredAds, setFilteredAds] = useState([]);\n\n    useEffect(() => {\n        fetchAds();\n        fetchBanners()\n    }, []);\n\n    const fetchAds = async () => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/rentpost/getAllPosts`);\n            if (response.ok) {\n                const data = await response.json();\n                setAds(data);\n            } else {\n                console.error('Failed to fetch ad posts');\n            }\n        } catch (error) {\n            console.error('Error fetching ad posts:', error);\n        } finally {\n            setRefreshing(false);\n        }\n    };\n\n    const handleGenderFilterChange = (newFilter) => {\n        setGenderFilter(newFilter);\n    };\n\n    const skeletonBanner = () => (\n        <SkeletonLoader\n            boneColor=\"#B0B3B8\"\n            highlightColor=\"#E0E0E0\"\n        >\n            <SkeletonLoader.Item\n                style={{ width, height: height / 4, marginVertical: 10 }}\n            />\n        </SkeletonLoader>\n    );\n    const filterAds = () => {\n        let filtered;\n        switch (genderFilter) {\n            case 'male':\n                filtered = ads.filter(ad => ad.isMaleOnly === true);\n                break;\n            case 'female':\n                filtered = ads.filter(ad => ad.isMaleOnly === false);\n                break;\n            default:\n                filtered = ads;\n        }\n        setFilteredAds(filtered);\n    };\n    const fetchBanners = async () => {\n        try {\n            setBannersLoading(true);\n            const bannersQuery = query(collection(db, 'banners'));\n            const bannersSnapshot = await getDocs(bannersQuery);\n            const fetchedBanners = bannersSnapshot.docs.map(doc => doc.data().link);\n            setBanners(fetchedBanners);\n        } catch (error) {\n            console.error('Error fetching banners:', error);\n        } finally {\n            setBannersLoading(false);\n        }\n    };\n\n    const renderAdCard = ({ item }) => (\n        <AnimatedCard item={item} onPress={handleAdPress} />\n    );\n\n    const handleAdPress = (ad) => {\n        logEvent(analytics, \"Post OnClick\", (ad));\n        navigation.navigate('AdDetailsWithoutAuthentication', { adId: ad._id });\n    };\n\n    const onRefresh = useCallback(() => {\n        setRefreshing(true);\n        fetchAds();\n    }, []);\n    useEffect(() => {\n        filterAds();\n    }, [ads, genderFilter]);\n    return (\n        <>\n            <View style={styles.container}>\n                {bannersLoading && skeletonBanner()}\n                {!bannersLoading && banners.length > 0 && <BannerCarousel data={banners} />}\n                <View style={styles.filterButtonsContainer}>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'all' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('all')}\n                    >\n                        <Text style={genderFilter === 'all' ? styles.filterTextActive : styles.filterText}>All</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'male' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('male')}\n                    >\n                        <Text style={genderFilter === 'male' ? styles.filterTextActive : styles.filterText}>Male Only</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'female' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('female')}\n                    >\n                        <Text style={genderFilter === 'female' ? styles.filterTextActive : styles.filterText}>Female Only</Text>\n                    </TouchableOpacity>\n                </View>\n                <FlatList\n                    data={filteredAds.length ? filteredAds : ads}\n                    keyExtractor={(item) => item._id}\n                    renderItem={renderAdCard}\n                    contentContainerStyle={styles.adList}\n                    numColumns={2}\n                    refreshControl={\n                        <RefreshControl\n                            refreshing={refreshing}\n                            onRefresh={onRefresh}\n                            tintColor=\"#007DBC\"\n                        />\n                    }\n                />\n            </View>\n        </>\n    );\n};\n\nconst AnimatedCard = ({ item, onPress }) => {\n    const scale = useSharedValue(1);\n    const lastPress = useRef(Date.now());\n\n    const animatedStyles = useAnimatedStyle(() => {\n        return {\n            transform: [{ scale: scale.value }],\n        };\n    });\n\n    const animatedImageStyles = useAnimatedStyle(() => {\n        return {\n            transform: [\n                { perspective: 1000 },\n                { rotateY: `${scale.value * 0}deg` },\n            ],\n        };\n    });\n\n    const handlePress = () => {\n        const now = Date.now();\n        if (now - lastPress.current > 300) { // Prevent multiple rapid presses\n            lastPress.current = now;\n            onPress(item);\n        }\n    };\n\n    const handlePressIn = () => {\n        scale.value = withSpring(1.05);\n    };\n\n    const handlePressOut = () => {\n        scale.value = withSpring(1);\n    };\n\n    return (\n        <Animated.View style={[styles.card, animatedStyles]}>\n            <TouchableOpacity\n                activeOpacity={1}\n                onPress={handlePress}\n                onPressIn={handlePressIn}\n                onPressOut={handlePressOut}\n                delayPressIn={100} // Add delay here\n                style={styles.touchable}\n            >\n                <LinearGradient colors={['#005AAA', '#007DBC']} style={styles.gradient}>\n                    <Animated.Image source={{ uri: item.images[0] }} style={[styles.adImage, animatedImageStyles]} />\n                    <View style={styles.adDetails}>\n                        <Text\n                            style={styles.adTitle}\n                            numberOfLines={2}\n                            ellipsizeMode='tail'\n                        >\n                            {item.adTitle}\n                        </Text>\n                        <View style={styles.adInfo}>\n                            <Text style={styles.adPrice}>Price: ₹{item.price}</Text>\n                            <Text style={styles.adBedrooms}>{item.bedrooms} {item.location}</Text>\n                        </View>\n                    </View>\n                </LinearGradient>\n            </TouchableOpacity>\n        </Animated.View>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n    bannerImage: {\n        width: '100%',\n        height: 200,\n    },\n    adList: {\n        padding: 8,\n    },\n    touchable: {\n        flex: 1,\n    },\n    card: {\n        flex: 0.5,\n        margin: 8,\n        borderRadius: 15,\n        overflow: 'hidden',\n        backgroundColor: '#fff',\n        elevation: 6,\n        shadowColor: 'rgba(0,0,0,0.15)',\n        shadowOffset: { width: 0, height: 3 },\n        shadowOpacity: 1,\n        shadowRadius: 6,\n        borderColor: '#f0f0f0', // Light grey border\n        borderWidth: 1, // Border width\n        fontFamily: 'open-sans-regular',\n    },\n    adImage: {\n        width: '100%',\n        height: 140,\n        backfaceVisibility: 'hidden',\n        borderTopLeftRadius: 15, // Match border radius of card\n        borderTopRightRadius: 15, // Match border radius of card\n    },\n    adDetails: {\n        flex: 1,\n        padding: 12, // Slightly more padding\n    },\n    adTitle: {\n        fontSize: 14, // Reduced font size for title\n        //fontWeight: 'bold',\n        marginBottom: 5,\n        color: 'white', // Darker text color for better readability\n        fontFamily: 'open-sans-bold',\n    },\n    adLocation: {\n        fontSize: 14, // Reduced font size for location\n        color: 'white', // Lighter text color for location\n        marginBottom: 8, // Added margin-bottom for spacing\n    },\n    adInfo: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    adPrice: {\n        fontSize: 16,\n        color: '#deac47',\n        fontFamily: 'open-sans-bold',\n    },\n    adBedrooms: {\n        fontSize: 12,\n        color: '#999',\n    },\n\n    filterButtonsContainer: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        padding: 10,\n        //marginBottom: 20,\n    },\n    filterButton: {\n        borderWidth: 1,\n        borderColor: '#007DBC',\n        paddingVertical: 8,\n        paddingHorizontal: 20,\n        borderRadius: 20,\n        marginHorizontal: 5,\n        backgroundColor: 'white',\n    },\n    filterButtonActive: {\n        backgroundColor: '#007DBC',\n    },\n    filterText: {\n        color: '#007DBC',\n        textAlign: 'center',\n    },\n    filterTextActive: {\n        color: 'white',\n        textAlign: 'center',\n    },\n});\n\nexport default HomeWithoutAuthentication;\n","// src/navigation/AuthStack.js\n\nimport React, { useEffect, useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Platform } from 'react-native'; // Import Platform from 'react-native'\nimport Authentication from '../screens/Authentication';\nimport OnboardingScreen from '../screens/OnboardingScreen';\nimport { getItem } from '../utils/asyncStorage';\nimport AdDetailsWithoutAuthentication from '../screens/AdDetailsWithoutAuthentication';\nimport HomeWithoutAuthentication from '../screens/HomeWithoutAuthentication';\n\nconst Stack = createStackNavigator();\n\nconst AuthStack = () => {\n    const [showOnboarding, setShowOnboarding] = useState(null);\n\n    useEffect(() => {\n        checkIfAlreadyOnboarded();\n    }, []);\n\n    const checkIfAlreadyOnboarded = async () => {\n        let onboarded = await getItem('onboarded');\n        if (onboarded == 1) {\n            setShowOnboarding(false);\n        } else {\n            setShowOnboarding(true);\n        }\n    };\n\n    if (showOnboarding && Platform.OS !== 'web') { // Check the platform here\n        return (\n            <Stack.Navigator initialRouteName='Onboarding'>\n                <Stack.Screen name=\"Onboarding\" options={{ headerShown: false }} component={OnboardingScreen} />\n                <Stack.Screen name=\"HomeTabNavigator\" options={{ headerShown: false }} component={Authentication} />\n                <Stack.Screen name=\"AdDetailsWithoutAuthentication\" component={AdDetailsWithoutAuthentication} />\n                <Stack.Screen name=\"HomeWithoutAuthentication\" component={HomeWithoutAuthentication} />\n            </Stack.Navigator>\n        );\n    }\n\n    if (showOnboarding == null) return null;\n\n    return (\n        <Stack.Navigator\n            screenOptions={{\n                headerShown: false\n            }}\n            initialRouteName='HomeTabNavigator'\n        >\n            <Stack.Screen name=\"HomeTabNavigator\" component={Authentication} />\n            <Stack.Screen name=\"HomeWithoutAuthentication\" component={HomeWithoutAuthentication} />\n            <Stack.Screen name=\"AdDetailsWithoutAuthentication\" component={AdDetailsWithoutAuthentication} />\n        </Stack.Navigator>\n    );\n};\n\nexport default AuthStack;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { View, Text, FlatList, TouchableOpacity, StyleSheet, Image, RefreshControl, Dimensions, ActivityIndicator } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { collection, getDocs, query } from 'firebase/firestore'\nimport Animated, { useSharedValue, useAnimatedStyle, withSpring } from 'react-native-reanimated';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { analytics, db } from '../firebase/firebase';\nimport BannerCarousel from '../components/BannerCarousel';\nimport { logEvent } from 'firebase/analytics';\nimport SkeletonLoader from \"expo-skeleton-loader\";\nconst { height, width } = Dimensions.get('window');\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nconst Home = () => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [ads, setAds] = useState([]);\n    const [banners, setBanners] = useState([]);\n    const [refreshing, setRefreshing] = useState(false);\n    const navigation = useNavigation();\n    const [bannersLoading, setBannersLoading] = useState(true);\n    const [genderFilter, setGenderFilter] = useState('all'); // 'all', 'male', 'female'\n    const [filteredAds, setFilteredAds] = useState([]);\n    useEffect(() => {\n        fetchAds();\n        fetchBanners()\n\n    }, []);\n\n    const fetchAds = async () => {\n        try {\n            setIsLoading(true)\n            const response = await fetch(`${API_BASE_URL}/rentpost/getAllPosts`);\n            if (response.ok) {\n                const data = await response.json();\n                setAds(data);\n                setIsLoading(false)\n            } else {\n                console.error('Failed to fetch ad posts');\n            }\n        } catch (error) {\n            console.error('Error fetching ad posts:', error);\n        } finally {\n            setRefreshing(false);\n            setIsLoading(false)\n        }\n    };\n\n    const navigateToPostAdScreen = () => {\n        navigation.navigate('PostAd');\n    };\n    const handleGenderFilterChange = (newFilter) => {\n        setGenderFilter(newFilter);\n    };\n\n    const skeletonBanner = () => (\n        <SkeletonLoader\n            boneColor=\"#B0B3B8\"\n            highlightColor=\"#E0E0E0\"\n        >\n\n            <SkeletonLoader.Item\n                style={{ width, height: height / 4, marginVertical: 10 }}\n            />\n        </SkeletonLoader>\n    );\n    const filterAds = () => {\n        let filtered;\n        switch (genderFilter) {\n            case 'male':\n                filtered = ads.filter(ad => ad.isMaleOnly === true);\n                break;\n            case 'female':\n                filtered = ads.filter(ad => ad.isMaleOnly === false);\n                break;\n            default:\n                filtered = ads;\n        }\n        setFilteredAds(filtered);\n    };\n    const fetchBanners = async () => {\n        try {\n            setBannersLoading(true);\n            const bannersQuery = query(collection(db, 'banners'));\n            const bannersSnapshot = await getDocs(bannersQuery);\n            const fetchedBanners = bannersSnapshot.docs.map(doc => doc.data().link);\n            setBanners(fetchedBanners);\n        } catch (error) {\n            console.error('Error fetching banners:', error);\n        } finally {\n            setBannersLoading(false);\n        }\n    };\n\n    const renderAdCard = ({ item }) => (\n        <AnimatedCard item={item} onPress={handleAdPress} />\n    );\n\n    const handleAdPress = (ad) => {\n        logEvent(analytics, \"Post OnClick\", (ad));\n        navigation.navigate('SingleScreenAd', { adIds: ad?._id });\n    };\n\n    const onRefresh = useCallback(() => {\n        setRefreshing(true);\n        fetchAds();\n        fetchBanners();\n    }, []);\n\n    useEffect(() => {\n        filterAds();\n    }, [ads, genderFilter]);\n\n    if (isLoading && refreshing && bannersLoading) {\n        return (\n            <View style={styles.loaderContainer}>\n                <ActivityIndicator size=\"large\" color=\"#FFFFFF\" />\n            </View>\n        )\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                {bannersLoading && skeletonBanner()}\n                {!bannersLoading && banners.length > 0 && <BannerCarousel data={banners} />}\n                <View style={styles.filterButtonsContainer}>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'all' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('all')}\n                    >\n                        <Text style={genderFilter === 'all' ? styles.filterTextActive : styles.filterText}>All</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'male' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('male')}\n                    >\n                        <Text style={genderFilter === 'male' ? styles.filterTextActive : styles.filterText}>Male Only</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'female' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('female')}\n                    >\n                        <Text style={genderFilter === 'female' ? styles.filterTextActive : styles.filterText}>Female Only</Text>\n                    </TouchableOpacity>\n                </View>\n                <FlatList\n                    data={filteredAds.length ? filteredAds : ads}\n                    keyExtractor={(item) => item._id}\n                    renderItem={renderAdCard}\n                    contentContainerStyle={styles.adList}\n                    numColumns={2}\n                    refreshControl={\n                        <RefreshControl\n                            refreshing={refreshing}\n                            onRefresh={onRefresh}\n                            tintColor=\"white\"\n                        />\n                    }\n                />\n            </View>\n            <TouchableOpacity\n                style={styles.fab}\n                onPress={navigateToPostAdScreen}\n            >\n                <MaterialIcons name=\"post-add\" size={40} color=\"white\" />\n            </TouchableOpacity>\n        </>\n    );\n};\n\nconst AnimatedCard = ({ item, onPress }) => {\n    const scale = useSharedValue(1);\n    const lastPress = useRef(Date.now());\n\n    const animatedStyles = useAnimatedStyle(() => {\n        return {\n            transform: [{ scale: scale.value }],\n        };\n    });\n\n    const animatedImageStyles = useAnimatedStyle(() => {\n        return {\n            transform: [\n                { perspective: 1000 },\n                { rotateY: `${scale.value * 0}deg` },\n            ],\n        };\n    });\n\n    const handlePress = () => {\n        const now = Date.now();\n        if (now - lastPress.current > 300) { // Prevent multiple rapid presses\n            lastPress.current = now;\n            onPress(item);\n        }\n    };\n\n    const handlePressIn = () => {\n        scale.value = withSpring(1.05);\n    };\n\n    const handlePressOut = () => {\n        scale.value = withSpring(1);\n    };\n\n    return (\n        <Animated.View style={[styles.card, animatedStyles]}>\n            <TouchableOpacity\n                activeOpacity={1}\n                onPress={handlePress}\n                onPressIn={handlePressIn}\n                onPressOut={handlePressOut}\n                delayPressIn={100} // Add delay here\n                style={styles.touchable}\n            >\n                <LinearGradient colors={['#005AAA', '#007DBC']} style={styles.gradient}>\n                    <Animated.Image source={{ uri: item.images[0] }} style={[styles.adImage, animatedImageStyles]} />\n                    <View style={styles.adDetails}>\n                        <Text\n                            style={styles.adTitle}\n                            numberOfLines={2}\n                            ellipsizeMode='tail'\n                        >\n                            {item.adTitle}\n                        </Text>\n                        <View style={styles.adInfo}>\n                            <Text style={styles.adPrice}>Price: ₹{item.price}</Text>\n                            <Text style={styles.adBedrooms}>{item.bedrooms} {item.location}</Text>\n                        </View>\n                    </View>\n                </LinearGradient>\n            </TouchableOpacity>\n        </Animated.View>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n    bannerImage: {\n        width: '100%',\n        height: 200,\n    },\n    adList: {\n        padding: 8,\n    },\n    touchable: {\n        flex: 1,\n    },\n    card: {\n        flex: 0.5,\n        margin: 8,\n        borderRadius: 15,\n        overflow: 'hidden',\n        backgroundColor: '#fff',\n        elevation: 6,\n        shadowColor: 'rgba(0,0,0,0.15)',\n        shadowOffset: { width: 0, height: 3 },\n        shadowOpacity: 1,\n        shadowRadius: 6,\n        borderColor: '#f0f0f0', // Light grey border\n        borderWidth: 1, // Border width\n        fontFamily: 'open-sans-regular',\n    },\n    adImage: {\n        width: '100%',\n        height: 140,\n        backfaceVisibility: 'hidden',\n        borderTopLeftRadius: 15, // Match border radius of card\n        borderTopRightRadius: 15, // Match border radius of card\n    },\n    adDetails: {\n        flex: 1,\n        padding: 12, // Slightly more padding\n    },\n    adTitle: {\n        fontSize: 14, // Reduced font size for title\n        //fontWeight: 'bold',\n        marginBottom: 5,\n        color: 'white', // Darker text color for better readability\n        fontFamily: 'open-sans-bold',\n    },\n    adLocation: {\n        fontSize: 14, // Reduced font size for location\n        color: 'white', // Lighter text color for location\n        marginBottom: 8, // Added margin-bottom for spacing\n    },\n    adInfo: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    adPrice: {\n        fontSize: 16,\n        color: '#deac47',\n        fontFamily: 'open-sans-bold',\n    },\n    adBedrooms: {\n        fontSize: 12,\n        color: '#999',\n    },\n    loaderContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#005AAA', // Adjust the color and opacity to match your gradient\n    },\n    filterButtonsContainer: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        padding: 10,\n        //marginBottom: 20,\n    },\n    filterButton: {\n        borderWidth: 1,\n        borderColor: '#007DBC',\n        paddingVertical: 8,\n        paddingHorizontal: 20,\n        borderRadius: 20,\n        marginHorizontal: 5,\n        backgroundColor: 'white',\n    },\n    filterButtonActive: {\n        backgroundColor: '#007DBC',\n    },\n    filterText: {\n        color: '#007DBC',\n        textAlign: 'center',\n    },\n    filterTextActive: {\n        color: 'white',\n        textAlign: 'center',\n    },\n    fab: {\n        position: 'absolute',\n        width: 48, // Slightly smaller\n        height: 48, // Slightly smaller\n        alignItems: 'center',\n        justifyContent: 'center',\n        right: 16, // Less offset\n        bottom: 16, // Less offset\n        backgroundColor: '#007DBC',\n        borderRadius: 24, // Adjust for smaller size\n        elevation: 6, // Reduced elevation for subtlety\n        shadowColor: '#000', // Added shadow for depth\n        shadowOpacity: 0.3,\n        shadowRadius: 4,\n        shadowOffset: { width: 0, height: 2 },\n        opacity: 0.9 // Slightly transparent\n    },\n});\n\nexport default Home;","import React, { useEffect, useCallback, useState } from 'react';\nimport {\n    View,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    Modal,\n    StyleSheet,\n    Platform,\n    ActivityIndicator,\n    Image,\n    ScrollView\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport { RNS3 } from 'react-native-aws3';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport Toast from 'react-native-toast-message';\nimport Autocomplete from 'react-native-autocomplete-input';\nimport { AuthOpen } from '../hooks/useAuth'\nimport { serverTimestamp, updateDoc, doc, setDoc } from 'firebase/firestore';\nimport { getAuth, updateProfile as updateAuthProfile } from 'firebase/auth';\nimport { db } from '../firebase/firebase';\nimport * as Location from 'expo-location';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport maleIcon from '../assets/images/male.png';\nimport femaleIcon from '../assets/images/female.png';\nimport student from '../assets/images/student.png';\nimport professionals from '../assets/images/professionals.png';\nimport family from '../assets/images/family.png';\nconst domains = ['gmail.com', 'hotmail.com', 'yahoo.com', 'outlook.com'];\n\nconst UpdateProfileModal = ({ isVisible, onDismiss, isUserExists, setLocationModal }) => {\n    const { setUserInfoToStore } = useUser()\n    const { userToken, userInfo } = useUser();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [userId, setUserId] = useState('');\n    const [gender, setGender] = useState('');\n    const [tenantType, setTenantType] = useState('');\n    const [image, setImage] = useState(null);\n    const [isLoading, setLoading] = useState(false);\n    const [suggestions, setSuggestions] = useState([]);\n    const [fieldsDisabled, setFieldsDisabled] = useState(true);\n    const [userLocation, setUserLocation] = useState(''); // State variable to store user's location\n    const handleGenderSelect = (selectedGender) => {\n        setGender(selectedGender);\n    };\n\n    const requestLocationPermission = async () => {\n        try {\n            const { status } = await Location.requestForegroundPermissionsAsync();\n            if (status !== 'granted') {\n                // Handle permission denied or other errors\n                console.error('Location permission denied.');\n                return;\n            }\n            const location = await Location.getCurrentPositionAsync({});\n            setUserLocation(location); // Store user's location in state\n        } catch (error) {\n            console.error('Error getting user location:', error);\n        }\n    };\n\n    const updateProfileToFirebase = async ({ name, pic, email, isEdit }) => {\n        try {\n            const newDocRef = doc(db, 'user_profiles', userInfo.firebaseId);\n            const handler = isEdit ? updateDoc : setDoc;\n            await handler(newDocRef, {\n                id: userInfo.firebaseId,\n                name,\n                pic,\n                email,\n                phone: userToken.toString(),\n                timestamp: serverTimestamp(),\n            });\n            const auth = getAuth();\n            await updateAuthProfile(auth.currentUser, {\n                displayName: name,\n                photoURL: pic,\n            });\n            console.log('Updated to Firestore and Firebase Authentication');\n        } catch (error) {\n            console.error('Error updating profile:', error);\n        }\n    };\n\n    const handleTenantTypeSelect = (selectedType) => {\n        setTenantType(selectedType);\n    };\n\n    const handleChooseImage = async () => {\n        const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n        if (permissionResult.granted === false) {\n            alert('Permission to access media library is required!');\n            return;\n        }\n\n        const pickerResult = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n        });\n\n        if (!pickerResult.cancelled) {\n            const selectedImageUri = pickerResult.assets[0].uri;\n            setImage(selectedImageUri);\n        }\n    };\n\n    const handleEmailChange = (text) => {\n        setEmail(text);\n        const query = text.split('@')[1];\n        const filteredDomains = domains.filter((domain) => domain.includes(query));\n        setSuggestions(filteredDomains);\n    };\n\n    const handleUpdate = useCallback(async () => {\n        setLoading(true);\n        let s3ImageUrl = null;\n        const isEdit = userId !== ''\n        try {\n            if (image) {\n                const options = {\n                    keyPrefix: 'uploads/',\n                    bucket: 'primecaves',\n                    region: 'ap-south-1',\n                    accessKey: 'AKIARM6FSFR7MWP7YQUY',\n                    secretKey: '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',\n                    successActionStatus: 201,\n                };\n                let file;\n                if (Platform.OS === 'web') {\n                    const blob = await fetch(image).then((res) => res.blob());\n                    file = {\n                        uri: image,\n                        name: `${userToken.toString()}.jpeg`,\n                        type: 'image/jpeg',\n                        blob,\n                    };\n                } else {\n                    file = {\n                        uri: image,\n                        name: `${userToken.toString()}.jpeg`,\n                        type: 'image/jpeg',\n                    };\n                }\n                const response = await RNS3.put(file, options);\n                if (response.status !== 201) {\n                    throw new Error('Failed to upload image to S3');\n                }\n                s3ImageUrl = response.body.postResponse.location;\n            }\n            const apiEndpoint = isEdit\n                ? `${API_BASE_URL}/user/update/${userId}`\n                : `${API_BASE_URL}/user/register`;\n            const method = isEdit ? 'PUT' : 'POST'\n            const response = await fetch(apiEndpoint, {\n                method,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    tenantType,\n                    image,\n                    name,\n                    email,\n                    gender,\n                    phoneNumber: userToken.toString(),\n                    firebaseId: userInfo.firebaseId,\n                    location: userLocation,\n                }),\n            });\n\n            if (response.ok) {\n                const responseData = await response.json();\n                onDismiss();\n                if (!isUserExists) {\n                    setLocationModal(true)\n                }\n                updateProfileToFirebase({ name, pic: image, email, isEdit })\n                setUserInfoToStore({\n                    name, image, email,\n                    gender,\n                    phone: userToken.toString(),\n                    firebaseId: userInfo.firebaseId,\n                    tenantType,\n                    subscriptionStartDate: isEdit ? userInfo.subscriptionStartDate : 'NA',\n                    location: userLocation,\n                })\n                Toast.show({\n                    type: 'success',\n                    text1: 'Success',\n                    text2: 'Profile saved successfully',\n                });\n\n            } else {\n                console.error('Save failed');\n            }\n        } catch (error) {\n            console.error('Error during save:', error);\n            Toast.show({\n                type: 'error',\n                text1: 'Error',\n                text2: 'Profile failed to save',\n            });\n        } finally {\n            setLoading(false);\n        }\n    }, [userToken, name, email, gender, image, tenantType]);\n\n    useEffect(() => {\n        requestLocationPermission();\n        if (isVisible && isUserExists) {\n            setFieldsDisabled(true);\n            const fetchUserDetails = async () => {\n                try {\n                    const response = await fetch(`${API_BASE_URL}/user/getUserByPhoneNumber/${userToken.toString()}`);\n                    if (response.ok) {\n                        const userData = await response.json();\n                        setName(userData.name || '');\n                        setEmail(userData.email || '');\n                        setGender(userData.gender || '');\n                        setTenantType(userData.tenantType || '');\n                        setUserId(userData._id || '');\n                        setFieldsDisabled(false);\n                    } else {\n                        console.error('Failed to fetch user details');\n                    }\n                } catch (error) {\n                    console.error('Error fetching user details:', error);\n                    setFieldsDisabled(false);\n                }\n            };\n\n            fetchUserDetails();\n        }\n    }, [isVisible, userToken]);\n\n\n    const updateButtonStyle = [\n        styles.actionButton,\n        { backgroundColor: '#007DBC', left: 5 }, // Set background color to #007DBC\n    ];\n\n    return (\n        <Modal visible={isVisible} transparent={true} animationType=\"slide\">\n            <View style={styles.modalContainer}>\n                <LinearGradient // Use LinearGradient for the gradient background\n                    colors={['#007DBC', '#005CA1']} // Gradient colors\n                    style={styles.linearGradient}\n                >\n                    <View style={styles.modalContent}>\n                        {isUserExists && ( // Conditionally render the close icon\n                            <TouchableOpacity\n                                style={styles.closeButton}\n                                onPress={onDismiss}\n                            >\n                                <MaterialCommunityIcons\n                                    name=\"close\"\n                                    size={24}\n                                    color=\"white\" // Set the close icon color to white\n                                />\n                            </TouchableOpacity>\n                        )}\n                        <Text style={styles.modalTitle}>Update Profile</Text>\n                        <View style={styles.chooseImageButton}>\n                            <MaterialCommunityIcons\n                                name=\"camera\"\n                                size={24}\n                                color=\"#007DBC\"\n                                style={{ marginRight: 8 }}\n                            />\n                            <Text style={styles.chooseImageText}>Choose Image</Text>\n                        </View>\n                        {image && (\n                            <Image\n                                source={{ uri: image }}\n                                style={styles.profileImage}\n                            />\n                        )}\n                        <TextInput\n                            style={styles.input}\n                            placeholder=\"Name\"\n                            placeholderTextColor={\"#E7E0C3\"}\n                            value={name}\n                            onChangeText={(text) => setName(text)}\n                        />\n                        <TextInput\n                            style={styles.input}\n                            placeholder=\"Email\"\n                            textContentType=\"emailAddress\"\n                            placeholderTextColor={\"#E7E0C3\"}\n                            value={email}\n                            onChangeText={handleEmailChange}\n                        />\n                        <View style={styles.genderContainer}>\n                            <Text style={styles.label}>Gender</Text>\n                            <View style={styles.radioButtons}>\n                                <TouchableOpacity\n                                    onPress={() => handleGenderSelect('male')}\n                                    style={[\n                                        styles.radioButton,\n                                        gender === 'male' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={maleIcon}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={gender === 'male' ? styles.radioButtonTextSelected : styles.radioButtonText}>Male</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity\n                                    onPress={() => handleGenderSelect('female')}\n                                    style={[\n                                        styles.radioButton,\n                                        gender === 'female' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={femaleIcon}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={gender === 'female' ? styles.radioButtonTextSelected : styles.radioButtonText}>Female</Text>\n                                </TouchableOpacity>\n                            </View>\n                        </View>\n                        <View style={styles.tenantTypeContainer}>\n                            <Text style={styles.label}>I am</Text>\n                            <View style={styles.radioButtonsTenantType}>\n                                <TouchableOpacity\n                                    onPress={() => handleTenantTypeSelect('student')}\n                                    style={[\n                                        styles.radioButtonTenantType,\n                                        tenantType === 'student' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={student}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={tenantType === 'student' ? styles.radioButtonTextSelected : styles.radioButtonText}>Student</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity\n                                    onPress={() => handleTenantTypeSelect('professional')}\n                                    style={[\n                                        styles.radioButtonTenantType,\n                                        tenantType === 'professional' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={professionals}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={tenantType === 'professional' ? styles.radioButtonTextSelected : styles.radioButtonText}>Working Professional</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity\n                                    onPress={() => handleTenantTypeSelect('family')}\n                                    style={[\n                                        styles.radioButtonTenantType,\n                                        tenantType === 'family' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={family}\n                                        style={{ width: 24, height: 24, }}\n                                    />\n                                    <Text style={tenantType === 'family' ? styles.radioButtonTextSelected : styles.radioButtonText}>Family</Text>\n                                </TouchableOpacity>\n                            </View>\n                        </View>\n                        {isLoading ? (\n                            <ActivityIndicator size=\"small\" color=\"#dddddd\" style={styles.loader} />\n                        ) : (\n                            <View style={styles.buttonContainer}>\n                                <TouchableOpacity\n                                    style={updateButtonStyle}\n                                    onPress={handleUpdate}\n                                >\n                                    <Text style={styles.buttonText}>Save</Text>\n                                </TouchableOpacity>\n                            </View>\n                        )}\n                    </View>\n                </LinearGradient>\n            </View>\n        </Modal>\n    );\n};\nconst styles = StyleSheet.create({\n    tenantTypeContainer: {\n        width: '100%',\n        marginBottom: 10,\n    },\n    actionButton: {\n        padding: 10,\n        borderRadius: 5,\n        width: '100%',\n        alignItems: 'center',\n    },\n    loader: {\n        marginTop: 10,\n    },\n    buttonText: {\n        color: 'white',\n        fontFamily: 'open-sans-bold'\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    profileImage: {\n        width: 100,\n        height: 100,\n        borderRadius: 50,\n        marginTop: 10,\n    },\n    scrollViewContent: {\n        flexGrow: 1, // Allow the content to grow vertically\n    },\n    modalContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    },\n    linearGradient: {\n        width: '80%', // Set the width to 100% to cover the entire modal\n    },\n    modalContent: {\n        padding: 20,\n        borderRadius: 10,\n        alignItems: 'center',\n        backgroundColor: 'transparent', // Make the content background transparent\n    },\n    modalTitle: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        color: 'white', // Set the text color to white\n        fontFamily: 'open-sans-regular',\n    },\n    input: {\n        width: '100%',\n        borderWidth: 1,\n        borderColor: 'white', // Set the border color to white\n        borderRadius: 10,\n        padding: 15,\n        marginBottom: 20,\n        fontSize: 16,\n        backgroundColor: 'transparent', // Make the input background transparent\n        color: 'white', // Set the text color to white\n        fontFamily: 'open-sans-light',\n    },\n    closeButton: {\n        position: 'absolute',\n        top: 10,\n        right: 10,\n        zIndex: 1,\n    },\n    chooseImageButton: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: 10,\n    },\n    chooseImageText: {\n        color: '#007DBC',\n        fontFamily: 'open-sans-bold'\n    },\n    genderContainer: {\n        width: '100%',\n        marginBottom: 10,\n    },\n    label: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginBottom: 5,\n        color: 'white'\n    },\n    radioButtons: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n\n    },\n    radioButton: {\n        flexDirection: 'row', // Make it horizontal\n        alignItems: 'center',\n        borderWidth: 0.4,\n        borderRadius: 5,\n        padding: 10,\n        marginRight: 10,\n    },\n    radioButtonSelected: {\n        borderColor: '#dddddd',\n        borderRadius: 5,\n        borderWidth: 1,\n        backgroundColor: '#007DBC', // Set background color to blue on selection\n    },\n    radioButtonText: {\n        color: 'white',\n        fontFamily: 'open-sans-regular',\n        marginLeft: 10,\n    },\n    radioButtonTextSelected: {\n        color: 'white', // Set text color to white on selection\n        marginLeft: 10, // Add margin to separate text from icon\n        fontFamily: 'open-sans-regular'\n\n    },\n    radioButtonsTenantType: { // Center items vertically\n        justifyContent: 'space-between',\n        marginBottom: 20, // Add margin to separate options\n    },\n\n    radioButtonTenantType: {\n        flexDirection: 'row',\n        borderWidth: 0.4,\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10, // Add margin to separate options\n    },\n\n});\n\nexport default UpdateProfileModal;\n\n","const getMatchedUserInfo = (users, userLoggedIn) => {\n  const newUsers = { ...users };\n  delete newUsers[userLoggedIn];\n\n  const [id, user] = Object.entries(newUsers).flat();\n\n  return { id, ...user };\n};\n\nexport default getMatchedUserInfo;\n","const generateId = (id1, id2) => {\n    if (id1 > id2) {\n        return id1 + id2\n    } else {\n        return id2 + id1\n    }\n}\n\nexport default generateId;","\nimport React, { useEffect, useState } from \"react\";\nimport { View, Text, TouchableOpacity, Image, StyleSheet } from \"react-native\";\n\nimport { useNavigation } from '@react-navigation/native';\nimport tw from \"tailwind-rn\";\nimport { collection, onSnapshot, orderBy, query } from \"@firebase/firestore\";\nimport { db } from \"../firebase/firebase\";\nimport getMatchedUserInfo from \"../utils/getMatchedUserInfo\";\nimport { useUser } from \"../context/UserContext\";\nimport generateId from \"../utils/generateIds\";\n\nconst ChatRow = ({ matchDetails }) => {\n  const navigation = useNavigation();\n  const { userInfo } = useUser();\n  const [lastMessage, setLastmessage] = useState(\"\");\n  const [matchedUserInfo, setMatchedUserInfo] = useState(null);\n  useEffect(() => {\n    setMatchedUserInfo(getMatchedUserInfo(matchDetails.users, userInfo.firebaseId));\n  }, [matchDetails, userInfo]);\n\n  useEffect(\n    () => {\n      if (matchedUserInfo) {\n        onSnapshot(\n          query(\n            collection(db, \"matches\",\n              generateId(userInfo.firebaseId, matchedUserInfo.id)\n              , \"messages\"),\n            orderBy(\"timestamp\", \"desc\")\n          ),\n          (snapshot) => setLastmessage(snapshot.docs[0]?.data()?.message)\n        )\n      }\n    },\n    [matchedUserInfo, db]\n  );\n  let userDetails;\n  if (matchedUserInfo) {\n    userDetails = matchDetails.users[matchedUserInfo.id];\n  }\n\n\n  const handleDirectMessage = () => {\n    navigation.navigate('MessagWithData', {\n      userDetails\n    })\n  };\n  return (\n    <TouchableOpacity\n      style={[\n        tw(\"flex-row items-center py-3 px-5 bg-white mx-3 my-1 rounded-lg\"),\n        styles.cardShadow,\n      ]}\n      onPress={handleDirectMessage}\n    >\n      {matchedUserInfo ? (\n        <>\n          <Image\n            style={tw(\"rounded-full h-16 w-16 mr-4\")}\n            source={{\n              uri:\n                matchedUserInfo?.photoUrl ||\n                'https://i.pinimg.com/736x/ff/a0/9a/ffa09aec412db3f54deadf1b3781de2a.jpg',\n            }}\n          />\n          <View>\n            <Text style={tw(\"text-lg font-bold\")}>\n              {matchedUserInfo?.name}\n            </Text>\n            <Text style={tw(\"font-light\")}>\n              {lastMessage?.length > 34\n                ? lastMessage?.substring(0, 34) + '...'\n                : lastMessage || 'Say Hi!'}\n            </Text>\n          </View>\n        </>\n      ) : (\n        <View style={tw('justify-center items-center')}>\n          <Text style={tw('text-lg text-gray-500')}>\n            Yet to have a conversation\n          </Text>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  cardShadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.41,\n    elevation: 2,\n  },\n});\n\n\nexport default ChatRow;\n","import { collection, onSnapshot, query, where } from \"@firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  View,\n  Text,\n  FlatList,\n  StyleSheet,\n} from \"react-native\";\nimport tw from \"tailwind-rn\";\nimport { AuthOpen } from \"../hooks/useAuth\";\nimport ChatRow from \"./ChatRow\";\nimport { db } from \"../firebase/firebase\";\nimport { useUser } from \"../context/UserContext\";\n\nconst ChatList = () => {\n  const [matches, setMatches] = useState([]);\n  const { userInfo } = useUser();\n  const [loading, setLoading] = useState(true);\n  useEffect(\n    () =>\n      onSnapshot(\n        query(\n          collection(db, \"matches\"),\n          where(\"usersMatched\", \"array-contains\", userInfo.firebaseId)\n        ),\n        (snapshot) =>\n          setMatches(\n            snapshot.docs.map(\n              (doc) => ({\n                id: doc.id,\n                ...doc.data(),\n              }),\n              setLoading(false)\n            )\n          )\n      ),\n    [userInfo]\n  );\n\n  return loading ? (\n    <View style={[styles.container, styles.horizontal]}>\n      <ActivityIndicator size=\"large\" color=\"#29325C\" />\n    </View>\n  ) : matches.length > 0 ? (\n    <FlatList\n      style={tw(\"h-full\")}\n      data={matches}\n      keyExtractor={(item) => item.id}\n      renderItem={({ item }) => <ChatRow matchDetails={item} />}\n    />\n  ) : (\n    <View style={tw(\"p-5\")}>\n      <Text style={tw(\"text-center text-lg\")}>No Message at the moment 😢</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n  },\n});\n\nexport default ChatList;\n","import { useNavigation } from \"@react-navigation/core\";\nimport React, { useEffect } from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport ChatList from \"../components/ChatList\";\nimport Header from \"../components/Header\";\n\nconst Chat = () => {\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView>\n      <ChatList />\n    </SafeAreaView>\n  );\n};\n\nexport default Chat;\n","import React, { useState, useEffect } from 'react';\nimport { View, TouchableOpacity, StyleSheet, Modal, Text, TextInput, FlatList, ScrollView } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport axios from 'axios';\nimport API_BASE_URL from '../services/config';\nimport { useUser } from '../context/UserContext';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport { logEvent } from 'firebase/analytics';\nimport { analytics } from '../firebase/firebase';\nconst DEFAULT_LOCATION = {\n  label: 'Patia',\n  value: 'Patia',\n}\nconst CustomHeader = ({ navigation, onSettingPress, showBack = false, locationModal = false, setLocationModal }) => {\n  const { setUserInfoToStore, useToken } = useUser()\n  const [selectedLocation, setSelectedLocation] = useState(DEFAULT_LOCATION);\n  const [allLocations, setLocations] = useState([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [suggestedLocations, setSuggestedLocations] = useState([]);\n  const [topLocations, setTopLocations] = useState([]);\n\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/user/getAllLocations`); // Replace with your API endpoint\n        const { locations = [] } = response.data;\n        const fetchedLocations = locations.map(location => ({\n          label: location,\n          value: location\n        }));\n        setLocations(fetchedLocations);\n        setTopLocations(fetchedLocations.slice(0, 30));\n      } catch (error) {\n        console.error('Error fetching locations in component:', error);\n      }\n    };\n\n    fetchLocations();\n  }, []);\n\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n    const filteredLocations = allLocations.filter((location) =>\n      location.label.toLowerCase().includes(query.toLowerCase())\n    );\n    setSuggestedLocations(filteredLocations);\n  };\n\n  const clearSearch = () => {\n    setSearchQuery('');\n    setSuggestedLocations([]);\n  };\n\n  const selectLocation = (location) => {\n    logEvent(analytics, \"location changed\", location);\n    setSelectedLocation(location);\n    setModalVisible(false);\n    if (locationModal) {\n      setLocationModal(false);\n    }\n    setSearchQuery('');\n    setSuggestedLocations([]);\n    setUserInfoToStore(location)\n  };\n\n  const renderLocationItem = ({ item }) => (\n    <TouchableOpacity style={styles.locationItem} onPress={() => selectLocation(item)}>\n      <Text style={styles.locationText}>{item.label}</Text>\n    </TouchableOpacity>\n  );\n\n  const renderTag = (item) => (\n    <TouchableOpacity style={styles.tag} onPress={() => selectLocation(item)}>\n      <Text style={styles.tagText}>{item.label}</Text>\n    </TouchableOpacity>\n  );\n\n  return (\n    <SafeAreaView edges={['top']} style={{ flex: 0, backgroundColor: 'transparent' }}>\n      <LinearGradient colors={['#007DBC', '#005AAA']} style={styles.header}>\n        <View style={styles.leftContainer}>\n          {showBack && (\n            <TouchableOpacity onPress={() => navigation.goBack()} style={styles.iconButton}>\n              <Icon name=\"arrow-back\" size={24} color=\"#fff\" />\n            </TouchableOpacity>\n          )}\n          <TouchableOpacity style={styles.selectedLocationContainer} onPress={() => setModalVisible(true)}>\n            <Text style={styles.selectedLocationText}>\n              {selectedLocation ? selectedLocation.label : 'Select Location'}\n            </Text>\n            <Icon name=\"chevron-down\" size={20} color=\"#fff\" style={styles.downIcon} />\n          </TouchableOpacity>\n        </View>\n        <TouchableOpacity onPress={onSettingPress} style={styles.iconButton}>\n          <Icon name=\"settings\" size={24} color=\"#fff\" />\n        </TouchableOpacity>\n      </LinearGradient>\n\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={locationModal || modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalView}>\n          <LinearGradient colors={['#007DBC', '#dddddd']} style={styles.modalGradient}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalHeaderText}>Select Location</Text>\n              <TouchableOpacity onPress={() => setModalVisible(false)}>\n                <Icon name=\"close\" size={24} color=\"#fff\" />\n              </TouchableOpacity>\n            </View>\n            <View style={styles.searchContainer}>\n              <TextInput\n                style={styles.searchInput}\n                placeholder=\"Search Location\"\n                placeholderTextColor=\"#fff\"\n\n                value={searchQuery}\n                onChangeText={handleSearch}\n              />\n              {searchQuery.length > 0 && (\n                <TouchableOpacity style={styles.clearIcon} onPress={clearSearch}>\n                  <Icon name=\"close-circle\" size={20} color=\"#fff\" />\n                </TouchableOpacity>\n              )}\n            </View>\n            <ScrollView showsHorizontalScrollIndicator={false} contentContainerStyle={styles.tagsContainer}>\n              {searchQuery.length > 0\n                ? suggestedLocations.map((location, index) => (\n                  <React.Fragment key={index}>\n                    {renderTag(location)}\n                  </React.Fragment>\n                ))\n                : topLocations.map((location, index) => (\n                  <React.Fragment key={index}>\n                    {renderTag(location)}\n                  </React.Fragment>\n                ))}\n            </ScrollView>\n          </LinearGradient>\n        </View>\n      </Modal>\n    </SafeAreaView>\n  );\n};\n\nconst tagSize = 90;\n\nconst styles = StyleSheet.create({\n  header: {\n    height: 60,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 10,\n    justifyContent: 'space-between',\n  },\n  leftContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  selectedLocationContainer: {\n    flexDirection: 'row',\n    marginLeft: 10,\n    alignItems: 'center',\n  },\n  downIcon: {\n    marginLeft: 5,\n  },\n  rightContainer: {\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n  iconButton: {\n    padding: 10,\n  },\n  selectedLocationText: {\n    color: '#fff',\n    fontSize: 18,\n    fontFamily: 'open-sans-regular',\n  },\n  modalView: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  modalGradient: {\n    width: '100%',\n    height: '60%',\n    padding: 20,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  modalHeaderText: {\n    color: '#fff',\n    fontSize: 18,\n    fontFamily: 'open-sans-regular',\n  },\n  searchContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    borderRadius: 10,\n    padding: 10,\n    marginTop: 20,\n  },\n  searchInput: {\n    flex: 1,\n    color: '#fff',\n    fontSize: 16,\n    fontFamily: 'open-sans-light',\n  },\n  clearIcon: {\n    marginLeft: 10,\n  },\n  locationList: {\n    marginTop: 20,\n  },\n  locationItem: {\n    padding: 10,\n    borderRadius: 5,\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    marginTop: 10,\n  },\n  locationText: {\n    color: '#fff',\n  },\n  tagsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    marginTop: 10,\n  },\n  tag: {\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    width: 170,\n    height: tagSize,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n    marginBottom: 10,\n  },\n  tagText: {\n    color: '#fff',\n    fontSize: 14,\n    textAlign: 'center',\n    fontFamily: 'open-sans-regular',\n  },\n});\n\nexport default CustomHeader;\n","// src/api.js\nimport axios from 'axios';\nimport API_BASE_URL from './services/config';\n\nconst api = axios.create({\n    baseURL: API_BASE_URL,\n});\n\nexport default api;\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, FlatList, TouchableOpacity, Image, StyleSheet, ActivityIndicator, ScrollView, RefreshControl } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport api from '../../api';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useUser } from '../../context/UserContext';\n\nconst Cart = () => {\n    const navigation = useNavigation();\n    const { userId } = useUser();\n    const [cartItems, setCartItems] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [refreshing, setRefreshing] = useState(false);\n\n    useEffect(() => {\n        fetchCartItems();\n    }, []);\n\n    const calculateTotalPrice = () => {\n        return cartItems.reduce((total, item) => total + item.productId.price * item.quantity, 0);\n    };\n\n    const fetchCartItems = async () => {\n        try {\n            if (!userId) {\n                // Redirect to login screen if user is not logged in\n                navigation.navigate('Auth');\n                return;\n            }\n            const response = await api.get(`/cart?userId=${userId}`);\n            const result = response.data.filter(item => item.productId !== null)\n            setCartItems(result);\n            setLoading(false);\n        } catch (error) {\n            console.error('Error fetching cart items:', error);\n            setLoading(false);\n        }\n    };\n\n    const handleRemoveFromCart = async (itemId) => {\n        try {\n            // Set loading state for the specific item to true\n            setCartItems((prevCartItems) =>\n                prevCartItems.map((item) =>\n                    item._id === itemId ? { ...item, loading: true } : item\n                )\n            );\n\n            await api.delete(`/cart/remove/${itemId}`);\n            // Remove the item from cartItems state locally after successful removal\n            setCartItems((prevCartItems) =>\n                prevCartItems.filter((item) => item._id !== itemId)\n            );\n            alert('Product removed from cart successfully!');\n        } catch (error) {\n            console.error('Error removing from cart:', error);\n            alert('Failed to remove product from cart.');\n        } finally {\n            // Set loading state for the specific item back to false\n            setCartItems((prevCartItems) =>\n                prevCartItems.map((item) =>\n                    item._id === itemId ? { ...item, loading: false } : item\n                )\n            );\n        }\n    };\n\n    const onRefresh = () => {\n        setRefreshing(true);\n        fetchCartItems();\n        setRefreshing(false);\n    };\n\n    const renderItem = ({ item }) => (\n        <View style={styles.cartItemContainer}>\n            <Image source={{ uri: item.productId.imageUrl }} style={styles.cartItemImage} />\n            <View style={styles.cartItemInfo}>\n                <Text style={styles.cartItemName}>{item.productId.name}</Text>\n                <Text style={styles.cartItemPrice}>Price: ₹{item.productId.price}</Text>\n                <Text style={styles.cartItemPrice}>Quantity: {item.quantity}</Text>\n                <TouchableOpacity\n                    style={styles.removeFromCartButton}\n                    onPress={() => handleRemoveFromCart(item._id)}\n                    disabled={item.loading} // Use the specific loading state for the item\n                >\n                    {item.loading ? (\n                        <ActivityIndicator color=\"#fff\" size=\"small\" />\n                    ) : (\n                        <Text style={styles.removeFromCartButtonText}>Remove</Text>\n                    )}\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n\n    const handleContinueToCheckout = () => {\n        navigation.navigate('CheckoutProcess', { cartItems, totalPrice: calculateTotalPrice() });\n    };\n\n    if (loading) {\n        return (\n            <View style={styles.loadingContainer}>\n                <ActivityIndicator size=\"large\" color=\"#007DBC\" />\n            </View>\n        );\n    }\n\n    const navigateToOrderManagement = () => {\n        navigation.navigate('OrderManagement');\n    };\n\n    return (\n        <SafeAreaView style={styles.container}>\n            <View style={styles.topBar}>\n                <TouchableOpacity onPress={() => navigation.navigate('ProductCatalog')}>\n                    <MaterialCommunityIcons name=\"arrow-left\" size={24} color=\"#007DBC\" />\n                </TouchableOpacity>\n                <Text style={styles.title}>Shopping Cart</Text>\n                <TouchableOpacity onPress={navigateToOrderManagement}>\n                    <MaterialCommunityIcons name=\"history\" size={24} color=\"#007DBC\" />\n                </TouchableOpacity>\n            </View>\n            {cartItems.length === 0 ? (\n                <Text style={styles.emptyCartText}>Your cart is empty.</Text>\n            ) : (\n                <>\n                    <FlatList\n                        data={cartItems}\n                        renderItem={renderItem}\n                        keyExtractor={(item) => item._id}\n                        contentContainerStyle={styles.cartItemList}\n                        refreshControl={\n                            <RefreshControl\n                                refreshing={refreshing}\n                                onRefresh={onRefresh} />\n                        }\n                    />\n                </>\n            )}\n            <View style={styles.fixedCartSummaryContainer}>\n                <View style={styles.cartSummaryContainer}>\n                    <Text style={styles.cartSummaryText}>Total Price: ₹{calculateTotalPrice()}</Text>\n                    <TouchableOpacity\n                        style={styles.continueButton}\n                        onPress={handleContinueToCheckout}\n                    >\n                        <Text style={styles.continueButtonText}>Continue</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#f9f9f9',\n    },\n    topBar: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundColor: '#fff',\n        paddingVertical: 16,\n        paddingHorizontal: 24,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ddd',\n    },\n    title: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#333',\n    },\n    cartItemList: {\n        paddingVertical: 16,\n        paddingHorizontal: 24,\n    },\n    cartItemContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 20,\n        borderRadius: 10,\n        backgroundColor: '#fff',\n        padding: 16,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.2,\n        shadowRadius: 4,\n        elevation: 3,\n    },\n    cartItemImage: {\n        width: 80,\n        height: 80,\n        resizeMode: 'cover',\n        borderRadius: 8,\n        marginRight: 16,\n    },\n    cartItemInfo: {\n        flex: 1,\n    },\n    cartItemName: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#333',\n    },\n    cartItemPrice: {\n        fontSize: 16,\n        color: '#777',\n        marginBottom: 8,\n    },\n    removeFromCartButton: {\n        backgroundColor: '#ff0000',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 6,\n        alignSelf: 'flex-start',\n    },\n    removeFromCartButtonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 14,\n        textAlign: 'center',\n    },\n    loadingContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    emptyCartText: {\n        alignSelf: 'center',\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#777',\n        marginTop: 50,\n    },\n    cartSummaryContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        paddingVertical: 16,\n        paddingHorizontal: 24,\n        backgroundColor: '#fff',\n        borderTopWidth: 1,\n        borderTopColor: '#ddd',\n    },\n    cartSummaryText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#333',\n    },\n    continueButton: {\n        backgroundColor: '#007DBC',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 6,\n    },\n    continueButtonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 14,\n        textAlign: 'center',\n    },\n    fixedCartSummaryContainer: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        backgroundColor: '#fff',\n        borderTopWidth: 1,\n        borderTopColor: '#ddd',\n    },\n});\n\nexport default Cart;\n","import React, { useState } from 'react';\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity, KeyboardAvoidingView, ActivityIndicator, ScrollView, } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport api from '../../api';\nimport { useUser } from '../../context/UserContext';\n\nconst CheckoutProcess = ({ route }) => {\n    const { userId, userInfo } = useUser();\n    console.log(\"userInfouserInfo\", userInfo)\n    const { cartItems, totalPrice } = route.params;\n    const [name, setName] = useState(userInfo?.name || '');\n    const [email, setEmail] = useState(userInfo?.email || '');\n    const [address, setAddress] = useState('');\n    const [pincode, setPincode] = useState('');\n    const [phone, setPhone] = useState(userInfo?.phone || '');\n    const [loading, setLoading] = useState(false); // State to show loader while processing the order\n\n    const navigation = useNavigation();\n\n    const handleCancelOrder = () => {\n        // Implement any necessary actions for canceling the order (e.g., clearing the cart)\n        navigation.goBack();\n    };\n\n    const handleCompleteOrder = async () => {\n        try {\n            setLoading(true); // Show the loader while processing the order\n\n            // Create an object with the necessary order details\n            const orderData = {\n                cartItems,\n                totalPrice,\n                name,\n                email,\n                address,\n                pincode,\n                phone,\n                userId,\n            };\n            // Send a POST request to the backend to create the order\n            await api.post(`/checkout/order`, orderData).then(response => {\n                if (!response) {\n                    throw new Error;\n                } else {\n                    setLoading(false); // Hide the loader after order processing is complete\n                    alert('Order completed successfully!', 'Payment mode: Cash on Delivery', [\n                        { text: 'OK', onPress: () => navigation.goBack() },\n                    ]);\n                    navigation.goBack();\n                }\n            }).catch(err => {\n                console.error('Error during order processing:', err);\n                setLoading(false); // Hide the loader in case of an error\n                alert('Failed to complete the order. Please try again.');\n            });\n        } catch (error) {\n            setLoading(false);\n            console.error('Error during order processing:', error);\n            setLoading(false); // Hide the loader in case of an error\n            alert('Failed to complete the order. Please try again.');\n        }\n    };\n\n    return (\n        <KeyboardAvoidingView style={styles.container} behavior=\"padding\">\n            <KeyboardAwareScrollView contentContainerStyle={{ flexGrow: 1 }}>\n                <ScrollView style={styles.formContainer}>\n                    <TextInput\n                        style={[styles.input]} // Added extra height to address input field\n                        placeholder=\"Name\"\n                        value={name}\n                        onChangeText={setName}\n                    />\n                    <TextInput\n                        style={[styles.input]} // Added extra height to address input field\n                        placeholder=\"Email\"\n                        value={email}\n                        onChangeText={setEmail}\n                        keyboardType=\"email-address\"\n                        autoCapitalize=\"none\"\n                    />\n                    <TextInput\n                        style={[styles.input, styles.addressInput]} // Added extra height to address input field\n                        placeholder=\"Address\"\n                        value={address}\n                        onChangeText={setAddress}\n                        multiline // Enable multiline input for address\n                        numberOfLines={4} // Show four lines for address input\n                    />\n                    <TextInput\n                        style={[styles.input]} // Added extra height to address input field\n                        placeholder=\"Pincode\"\n                        value={pincode}\n                        onChangeText={setPincode}\n                        keyboardType=\"numeric\"\n                    />\n                    <TextInput\n                        style={[styles.input]} // Added extra height to address input field\n                        placeholder=\"Phone\"\n                        value={phone}\n                        onChangeText={setPhone}\n                        keyboardType=\"phone-pad\"\n                    />\n                </ScrollView>\n            </KeyboardAwareScrollView>\n            <View style={styles.fixedContentContainer}>\n                <View style={styles.summaryContainer}>\n                    <Text style={styles.summaryText}>Total Price: ₹{totalPrice}</Text>\n                    <Text style={styles.paymentText}>Payment Mode: Cash on Delivery</Text>\n                </View>\n\n                <View style={styles.buttonContainer}>\n                    <TouchableOpacity style={styles.cancelButton} onPress={handleCancelOrder}>\n                        <Text style={styles.buttonText}>Cancel Order</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={styles.completeButton} onPress={handleCompleteOrder}>\n                        <Text style={[styles.buttonText, styles.completeButtonText]}>Complete Order</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n\n            {loading && <ActivityIndicator size=\"large\" color=\"#007DBC\" />}\n\n        </KeyboardAvoidingView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#f9f9f9',\n        padding: 16,\n    },\n    title: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginBottom: 16,\n        textAlign: 'center',\n    },\n    formContainer: {\n        marginBottom: 12,\n    },\n    input: {\n        backgroundColor: '#fff',\n        padding: 12,\n        marginBottom: 16,\n        borderRadius: 6,\n        borderWidth: 1,\n        borderColor: '#ccc',\n    },\n    addressInput: {\n        height: 100, // Increased height for address input\n    },\n    summaryContainer: {\n        backgroundColor: '#fff',\n        padding: 16,\n        marginBottom: 16,\n        borderRadius: 6,\n        borderWidth: 1,\n        borderColor: '#ccc',\n    },\n    summaryText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#333',\n    },\n    paymentText: {\n        fontSize: 16,\n        color: '#777',\n        marginTop: 8,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n    },\n    cancelButton: {\n        backgroundColor: '#ff0000',\n        paddingVertical: 12,\n        paddingHorizontal: 24,\n        borderRadius: 6,\n        alignItems: 'center',\n        flex: 1,\n        marginRight: 8,\n    },\n    completeButton: {\n        backgroundColor: '#00cc00', // Changed to green color\n        paddingVertical: 12,\n        paddingHorizontal: 24,\n        borderRadius: 6,\n        alignItems: 'center',\n        flex: 1,\n        marginLeft: 8,\n    },\n    buttonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 16,\n    },\n    completeButtonText: {\n        color: '#fff', // Added white color to the complete order button text\n    }, fixedContentContainer: {\n        position: 'absolute',\n        bottom: 50,\n        left: 0,\n        right: 0,\n        backgroundColor: '#fff',\n        borderTopWidth: 1,\n        borderTopColor: '#ccc',\n    },\n    bottomInfoContainer: {\n        paddingHorizontal: 24,\n        paddingVertical: 16,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n});\n\nexport default CheckoutProcess;\n\n","// OrderManagement.js\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, FlatList, StyleSheet, TouchableOpacity, Modal, Image, ActivityIndicator, RefreshControl } from 'react-native';\nimport api from '../../api';\nimport { useUser } from '../../context/UserContext';\n\nconst OrderManagement = () => {\n    const { userId } = useUser();\n    const [orders, setOrders] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetchOrders();\n    }, []);\n\n    const fetchOrders = async () => {\n        try {\n            setLoading(true);\n            const response = await api.get(`/orders/${userId}`);\n            setOrders(response.data);\n        } catch (error) {\n            console.error('Error fetching orders:', error);\n            // Handle error\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const [selectedCartItem, setSelectedCartItem] = useState(null);\n    const [isCartItemModalVisible, setIsCartItemModalVisible] = useState(false);\n\n    const handleShowCartItemDetails = (cartItem) => {\n        setSelectedCartItem(cartItem);\n        setIsCartItemModalVisible(true);\n    };\n\n    const closeCartItemModal = () => {\n        setIsCartItemModalVisible(false);\n    };\n\n    const renderOrderItem = ({ item }) => (\n        <View style={styles.orderItemContainer}>\n            <Text style={styles.orderItemText}>Order ID: {item._id}</Text>\n            <Text style={styles.orderItemText}>Name: {item.name}</Text>\n            <Text style={styles.orderItemText}>Phone: {item.phone}</Text>\n            <Text style={styles.orderItemText}>Total Price: ₹{item.totalPrice}</Text>\n            <Text style={styles.orderItemText}>Status: {item.status}</Text>\n            {/* Additional order details can be displayed here */}\n            <FlatList\n                data={item.cartItems}\n                renderItem={renderCartItem}\n                keyExtractor={(cartItem) => cartItem._id}\n                contentContainerStyle={styles.cartItemList}\n            />\n        </View>\n    );\n\n    const renderCartItem = ({ item }) => (\n        <View style={styles.cartItemContainer}>\n            <Image source={{ uri: item.productId.imageUrl }} style={styles.cartItemImage} />\n            <View style={styles.cartItemInfo}>\n                <Text style={styles.cartItemName}>{item.productId.name}</Text>\n                <Text style={styles.cartItemPrice}>Price: ₹{item.productId.price}</Text>\n                <Text style={styles.cartItemPrice}>Quantity: {item.quantity}</Text>\n                {/* Additional cart item details can be displayed here */}\n                <TouchableOpacity\n                    style={styles.showDetailsButton}\n                    onPress={() => handleShowCartItemDetails(item)}\n                >\n                    <Text style={styles.showDetailsButtonText}>Show Details</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n\n    return (\n        <View style={styles.container}>\n            {loading ? (\n                <ActivityIndicator size=\"large\" color=\"#007DBC\" />\n            ) : orders.length === 0 ? (\n                <Text style={styles.emptyText}>No orders found.</Text>\n            ) : (\n                <FlatList\n                    data={orders}\n                    renderItem={renderOrderItem}\n                    keyExtractor={(item) => item._id}\n                    contentContainerStyle={styles.orderList}\n                    refreshControl={\n                        <RefreshControl\n                            refreshing={loading}\n                            onRefresh={fetchOrders} />\n                    }\n                />\n            )}\n\n            {/* Modal for displaying cart item details */}\n            <Modal visible={isCartItemModalVisible} transparent={true} onRequestClose={closeCartItemModal}>\n                <View style={styles.modalBackground}>\n                    <View style={styles.cartItemModalContent}>\n                        <Text style={styles.modalTitle}>Cart Item Details</Text>\n                        {selectedCartItem && (\n                            <View>\n                                <Image\n                                    source={{ uri: selectedCartItem.productId.imageUrl }}\n                                    style={styles.cartItemImage}\n                                />\n                                <Text style={styles.cartItemModalText}>\n                                    Product Name: {selectedCartItem.productId.name}\n                                </Text>\n                                <Text style={styles.cartItemModalText}>\n                                    Description: {selectedCartItem.productId.description}\n                                </Text>\n                                <Text style={styles.cartItemModalText}>\n                                    Price: ₹{selectedCartItem.productId.price}\n                                </Text>\n                                <Text style={styles.cartItemModalText}>\n                                    Quantity: {selectedCartItem.quantity}\n                                </Text>\n                                {/* Add more details as needed */}\n                            </View>\n                        )}\n                        <TouchableOpacity style={styles.closeButton} onPress={closeCartItemModal}>\n                            <Text style={styles.closeButtonText}>Close</Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n            </Modal>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#f9f9f9',\n        padding: 16,\n    },\n    title: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginBottom: 16,\n        textAlign: 'center',\n    },\n    orderList: {\n        flexGrow: 1,\n    },\n    orderItemContainer: {\n        backgroundColor: '#fff',\n        padding: 16,\n        marginBottom: 16,\n        borderRadius: 6,\n        borderWidth: 1,\n        borderColor: '#ccc',\n    },\n    orderItemText: {\n        fontSize: 16,\n        color: '#333',\n        marginBottom: 8,\n    },\n    emptyText: {\n        alignSelf: 'center',\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#777',\n        marginTop: 50,\n    },\n    cartItemContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n        borderRadius: 10,\n        backgroundColor: '#fff',\n        padding: 16,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.2,\n        shadowRadius: 4,\n        elevation: 3,\n    },\n    cartItemImage: {\n        width: 80,\n        height: 80,\n        resizeMode: 'cover',\n        borderRadius: 8,\n        marginRight: 16,\n    },\n    cartItemInfo: {\n        flex: 1,\n        alignItems: 'center', // Center the \"Show Details\" button\n    },\n    showDetailsButton: {\n        backgroundColor: '#007DBC',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 6,\n        marginTop: 8,\n    },\n    showDetailsButtonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 14,\n        textAlign: 'center',\n    },\n    modalBackground: {\n        flex: 1,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    cartItemModalContent: {\n        backgroundColor: '#fff',\n        padding: 16,\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        width: '80%',\n    },\n    modalTitle: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 16,\n        textAlign: 'center',\n    },\n    cartItemModalText: {\n        fontSize: 16,\n        color: '#333',\n        marginBottom: 8,\n    },\n    closeButton: {\n        backgroundColor: '#007DBC',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 6,\n        alignSelf: 'center',\n    },\n    closeButtonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 14,\n        textAlign: 'center',\n    },\n});\n\nexport default OrderManagement;\n","import React, { useState } from 'react';\nimport { View, Text, Image, StyleSheet, TouchableOpacity, ScrollView, ActivityIndicator } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport api from '../../api';\nimport { useUser } from '../../context/UserContext';\n\nconst SingleProductViewScreen = ({ route }) => {\n    const { product } = route.params;\n    const { userId } = useUser();\n    const [isItemAddedToCart, setIsItemAddedToCart] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [quantity, setQuantity] = useState(1);\n\n    const handleAddToCart = async () => {\n        try {\n            if (!userId) {\n                alert('Please log in to add items to your cart.');\n                return;\n            }\n            setIsLoading(true);\n            const requestBody = {\n                userId: userId,\n                productId: product._id,\n                quantity: quantity, // Use the selected quantity\n            };\n\n            await api.post('/cart/add', requestBody);\n            setIsItemAddedToCart(true);\n        } catch (error) {\n            console.error('Error adding to cart:', error);\n            alert('Failed to add product to cart.');\n        } finally {\n            setIsLoading(false); // Hide loader after adding the item to cart\n        }\n    };\n\n    const handleIncrement = () => {\n        setQuantity((prevQuantity) => prevQuantity + 1);\n    };\n\n    const handleDecrement = () => {\n        setQuantity((prevQuantity) => Math.max(prevQuantity - 1, 1));\n    };\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.productContainer}>\n                <ScrollView contentContainerStyle={styles.productContent}>\n                    <Image source={{ uri: product.imageUrl }} style={styles.productImage} />\n                    <View style={styles.productInfo}>\n                        <Text style={styles.productName}>{product.name}</Text>\n                        <Text style={styles.productDescription}>{product.description}</Text>\n                        <Text style={styles.productPrice}>Price: ₹{product.price}</Text>\n                    </View>\n                </ScrollView>\n                <View style={styles.quantityContainer}>\n                    <TouchableOpacity style={styles.quantityButton} onPress={handleDecrement}>\n                        <MaterialCommunityIcons name=\"minus\" size={20} color=\"#FFFFFF\" />\n                    </TouchableOpacity>\n                    <Text style={styles.quantityText}>{quantity}</Text>\n                    <TouchableOpacity style={styles.quantityButton} onPress={handleIncrement}>\n                        <MaterialCommunityIcons name=\"plus\" size={20} color=\"#FFFFFF\" />\n                    </TouchableOpacity>\n                </View>\n            </View>\n            <TouchableOpacity\n                style={[styles.addToCartButton, isItemAddedToCart ? styles.addedToCartButton : null]}\n                onPress={handleAddToCart}\n                disabled={isItemAddedToCart || isLoading}\n            >\n                {isLoading ? (\n                    <ActivityIndicator size=\"small\" color=\"#fff\" />\n                ) : (\n                    <Text style={styles.addToCartButtonText}>\n                        {isItemAddedToCart ? 'Item Added to Cart' : 'Add to Cart'}\n                    </Text>\n                )}\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#f9f9f9',\n    },\n    productContainer: {\n        flex: 1,\n    },\n    productContent: {\n        alignItems: 'center',\n        paddingHorizontal: 20,\n        paddingBottom: 80, // Adjust this value as needed for spacing\n    },\n    productImage: {\n        width: 500,\n        height: 500,\n        resizeMode: 'cover',\n        borderRadius: 10,\n        marginBottom: 20,\n    },\n    productInfo: {\n        alignItems: 'center',\n        marginBottom: 20,\n    },\n    productName: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        color: '#333',\n        marginBottom: 10,\n    },\n    productDescription: {\n        fontSize: 16,\n        color: '#777',\n        textAlign: 'center',\n        marginBottom: 20,\n    },\n    productPrice: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#007DBC',\n        marginBottom: 20,\n    },\n    quantityContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        backgroundColor: '#fff',\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n    },\n    quantityButton: {\n        backgroundColor: '#007DBC',\n        padding: 8,\n        borderRadius: 4,\n    },\n    quantityText: {\n        paddingHorizontal: 12,\n        fontSize: 18,\n    },\n    addToCartButton: {\n        backgroundColor: '#007DBC',\n        paddingVertical: 12,\n        paddingHorizontal: 24,\n        borderRadius: 8,\n        marginBottom: 20,\n        marginHorizontal: 20,\n    },\n    addToCartButtonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 18,\n        textAlign: 'center',\n    },\n    addedToCartButton: {\n        backgroundColor: 'green',\n    },\n});\n\nexport default SingleProductViewScreen;\n","import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, ActivityIndicator } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\n\nconst CartCountCard = ({ cartItemsCount = 0, loading }) => {\n    const navigation = useNavigation();\n\n    const handlePress = () => {\n        navigation.navigate('Cart'); // Navigate to the 'Cart' screen when the card is clicked\n    };\n\n    return (\n        <TouchableOpacity onPress={handlePress}>\n            <View style={styles.container}>\n                {loading ? (\n                    <ActivityIndicator size=\"small\" color=\"#fff\" />\n                ) : (\n                    <>\n                        <MaterialCommunityIcons name=\"cart\" size={24} color=\"#fff\" />\n                        <View style={styles.cartCountContainer}>\n                            <Text style={styles.cartCountText}>{cartItemsCount}</Text>\n                        </View>\n                    </>\n                )}\n                <Text style={styles.cartLabelText}>Cart</Text>\n            </View>\n        </TouchableOpacity>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#007DBC',\n        paddingHorizontal: 10,\n        paddingVertical: 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'row',\n    },\n    cartCountContainer: {\n        backgroundColor: '#fff',\n        borderRadius: 10,\n        marginLeft: 5,\n        paddingHorizontal: 5,\n        paddingVertical: 2,\n    },\n    cartCountText: {\n        color: '#007DBC',\n        fontSize: 12,\n        fontWeight: 'bold',\n    },\n    cartLabelText: {\n        color: '#fff',\n        fontSize: 12,\n        marginLeft: 5,\n    },\n});\n\nexport default CartCountCard;\n","import React, { useEffect, useState } from 'react';\nimport {\n    View,\n    Text,\n    FlatList,\n    TouchableOpacity,\n    Image,\n    StyleSheet,\n    ActivityIndicator,\n    RefreshControl,\n    TextInput,\n} from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport api from '../../api';\nimport CartCountCard from '../../components/CartCountCard';\nimport { useUser } from '../../context/UserContext';\n\n\nconst ProductCatalogScreen = (props) => {\n    const navigation = useNavigation();\n    const { userId, logout } = useUser();\n    const [products, setProducts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [productLoading, setProductLoading] = useState({});\n    const [searchQuery, setSearchQuery] = useState('');\n    const [quantities, setQuantities] = useState({});\n    const [cartItems, setCartItems] = useState([]);\n    const [cartItemsCount, setCartItemsCount] = useState(0);\n\n    useEffect(() => {\n        fetchProducts();\n        fetchCartDetails();\n    }, []);\n\n    const fetchProducts = async (clearSearchString) => {\n        try {\n            setLoading(true);\n            let queryParams = {};\n            if (searchQuery) {\n                queryParams.searchQuery = searchQuery;\n            }\n            if (clearSearchString) {\n                queryParams.searchQuery = '';\n            }\n            const response = await api.get('/products', { params: queryParams });\n            setProducts(response.data);\n            setLoading(false);\n        } catch (error) {\n            console.error('Error fetching products:', error);\n            setLoading(false);\n        }\n    };\n\n    const handleAddToCart = async (productId, product, quantity) => {\n        try {\n            if (!userId) {\n                alert('Please log in to add items to your cart.');\n                return;\n            }\n            setProductLoading((prevLoading) => ({ ...prevLoading, [productId]: true }));\n            const newItem = { productId, product, quantity };\n            setCartItems((prevCartItems) => [...prevCartItems, newItem]);\n            await api.post('/cart/add', { userId, productId, quantity }).then(response => {\n                if (response) {\n                    fetchCartDetails()\n                    alert('Product added to cart successfully!');\n                    setQuantities((prevQuantities) => (\n                        {\n                            ...prevQuantities,\n                            [productId]: 1,\n                        }));\n                }\n            })\n\n        } catch (error) {\n            console.error('Error adding to cart:', error);\n            alert('Failed to add product to cart.');\n        } finally {\n            setProductLoading((prevLoading) => ({ ...prevLoading, [productId]: false }));\n        }\n    };\n\n    const navigateToOrderManagement = () => {\n        navigation.navigate('OrderManagement');\n    };\n\n    const navigateToSingleProductView = (product) => {\n        navigation.navigate('SingleProductView', { product });\n    };\n\n    const renderItem = ({ item }) => {\n        const productId = item._id;\n        const quantity = quantities[productId] || 1;\n\n        const handleIncrement = (productId) => {\n            setQuantities((prevQuantities) => ({\n                ...prevQuantities,\n                [productId]: (prevQuantities[productId] || 1) + 1,\n            }));\n        };\n\n        const handleDecrement = (productId) => {\n            setQuantities((prevQuantities) => ({\n                ...prevQuantities,\n                [productId]: Math.max(prevQuantities[productId] - 1, 1),\n            }));\n        };\n\n        return (\n            <TouchableOpacity\n                style={styles.productContainer}\n                onPress={() => navigateToSingleProductView(item)} // Navigate to SingleProductViewScreen with product details\n            >\n                <Image source={{ uri: item.imageUrl }} style={styles.productImage} />\n                <View style={styles.productInfo}>\n                    <Text style={styles.productName}>{item.name}</Text>\n                    <Text style={styles.productPrice}>Price: ₹{item.price}</Text>\n                    {/* <View style={styles.quantityContainer}>\n                        <TouchableOpacity\n                            style={styles.quantityButton}\n                            onPress={() => handleDecrement(productId)}\n                        >\n                            <MaterialCommunityIcons name=\"minus\" size={20} color=\"#FFFFFF\" />\n                        </TouchableOpacity>\n                        <TextInput\n                            style={styles.quantityInput}\n                            value={quantity.toString()}\n                            onChangeText={(text) => {\n                                const parsedValue = parseInt(text);\n                                setQuantities((prevQuantities) => ({\n                                    ...prevQuantities,\n                                    [productId]: isNaN(parsedValue) ? 1 : Math.max(parsedValue, 1),\n                                }));\n                            }}\n                            keyboardType=\"numeric\"\n                        />\n                        <TouchableOpacity\n                            style={styles.quantityButton}\n                            onPress={() => handleIncrement(productId)}\n                        >\n                            <MaterialCommunityIcons name=\"plus\" size={20} color=\"#FFFFFF\" />\n                        </TouchableOpacity>\n                    </View> */}\n                    <TouchableOpacity\n                        style={styles.addToCartButton}\n                        onPress={() => handleAddToCart(item._id, item, quantity)}\n                        disabled={productLoading[item._id]}\n                    >\n                        {productLoading[item._id] ? (\n                            <ActivityIndicator size=\"small\" color=\"#fff\" />\n                        ) : (\n                            <Text style={styles.addToCartButtonText}>Add to Cart</Text>\n                        )}\n                    </TouchableOpacity>\n                </View>\n            </TouchableOpacity>\n        );\n    };\n\n    const handleSearch = () => {\n        fetchProducts(); // Fetch products based on the updated search query\n    };\n\n    const handleClearSearch = () => {\n        setSearchQuery('');\n        fetchProducts(true); // Fetch all products again when the search is cleared\n    };\n\n    const calculateTotalCartCount = (cartItems) => {\n        return cartItems.reduce((total, item) => total + item.quantity, 0);\n    };\n\n    const fetchCartDetails = async () => {\n        try {\n            const response = await api.get(`/cart/?userId=${userId}`);\n            const cartItems = response.data;\n            const cartCount = calculateTotalCartCount(cartItems)\n            setCartItemsCount(cartCount);\n        } catch (error) {\n            console.error('Error fetching cart details:', error);\n        }\n    };\n\n    if (loading) {\n        return (\n            <View style={styles.loaderContainer}>\n                <ActivityIndicator size=\"large\" color=\"#FFFFFF\" />\n            </View>\n        );\n    }\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.topBar}>\n                <View style={styles.searchContainer}>\n                    <TextInput\n                        style={styles.searchInput}\n                        placeholder=\"Search...\"\n                        value={searchQuery}\n                        onChangeText={setSearchQuery}\n                        onSubmitEditing={handleSearch} // Handle search when the user presses Enter on the keyboard\n                    />\n                    {searchQuery !== '' && (\n                        <TouchableOpacity\n                            style={styles.clearSearchButton}\n                            onPress={handleClearSearch}\n                        >\n                            <MaterialCommunityIcons name=\"close\" size={20} color=\"#999\" />\n                        </TouchableOpacity>\n                    )}\n                </View>\n                <View style={styles.topRightBar}>\n                    <TouchableOpacity onPress={navigateToOrderManagement}>\n                        <MaterialCommunityIcons name=\"history\" size={24} color=\"#007DBC\" />\n                    </TouchableOpacity>\n                </View>\n            </View>\n            {(products.length === 0 && !loading) ? ( // Check if the products array is empty\n                <View style={styles.noDataContainer}>\n                    <Text style={styles.noDataText}>No data available.</Text>\n                </View>\n            ) : (\n                <FlatList\n                    data={products}\n                    renderItem={renderItem}\n                    keyExtractor={(item) => item._id}\n                    contentContainerStyle={styles.productList}\n                    showsVerticalScrollIndicator={false}\n                    refreshControl={\n                        <RefreshControl\n                            refreshing={loading}\n                            onRefresh={() => {\n                                fetchProducts();\n                                fetchCartDetails();\n                            }}\n                        />\n                    }\n                />\n            )}\n            {cartItemsCount > 0 && <CartCountCard cartItemsCount={cartItemsCount} />}\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#f9f9f9',\n    },\n    topBar: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundColor: '#fff',\n        paddingVertical: 16,\n        paddingHorizontal: 24,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ddd',\n    },\n    searchInput: {\n        flex: 1,\n        borderRadius: 8,\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        fontSize: 16,\n    },\n    searchContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 6,\n        width: '90%',\n    },\n    clearSearchButton: {\n        padding: 8,\n        marginLeft: 8,\n    },\n    topRightBar: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundColor: '#fff',\n        marginEnd: -8, // To align with the right side of the screen in RTL mode\n    },\n    topRightBarCart: {\n        right: 10,\n    },\n    title: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#333',\n    },\n    productList: {\n        paddingVertical: 16,\n        paddingHorizontal: 24,\n    },\n    productContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 20,\n        borderRadius: 10,\n        backgroundColor: '#fff',\n        padding: 16,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.2,\n        shadowRadius: 4,\n        elevation: 3,\n    },\n    productImage: {\n        width: 100,\n        height: 100,\n        resizeMode: 'cover',\n        borderRadius: 10,\n        marginRight: 16,\n    },\n    productInfo: {\n        flex: 1,\n    },\n    productName: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#333',\n        marginBottom: 8,\n    },\n    productPrice: {\n        fontSize: 16,\n        color: '#777',\n        marginBottom: 8,\n    },\n    quantityContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 8,\n    },\n    quantityButton: {\n        backgroundColor: '#007DBC',\n        padding: 8,\n        borderRadius: 4,\n    },\n    quantityInput: {\n        flex: 1,\n        marginHorizontal: 8,\n        paddingHorizontal: 8,\n        paddingVertical: 4,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 4,\n        fontSize: 16,\n        width: 30,\n    },\n    addToCartButton: {\n        backgroundColor: '#007DBC',\n        paddingVertical: 8,\n        paddingHorizontal: 12,\n        borderRadius: 6,\n    },\n    addToCartButtonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 14,\n        textAlign: 'center',\n    },\n    loadingContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    popoverBackground: {\n        flex: 1,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    popoverContent: {\n        backgroundColor: '#fff',\n        padding: 16,\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: '#ccc',\n    },\n    popoverOption: {\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n    },\n    popoverOptionText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#007DBC',\n    },\n    cartCountCard: {\n        position: 'absolute',\n        bottom: 20,\n        right: 20,\n        backgroundColor: '#007DBC',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 50,\n        justifyContent: 'center',\n        alignItems: 'center',\n        elevation: 4,\n    },\n    cartCountText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 16,\n    },\n    cartCountLabel: {\n        color: '#fff',\n        fontSize: 12,\n    },\n    noDataContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    noDataText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#777',\n    },\n    loaderContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#005AAA',\n    },\n});\n\nexport default ProductCatalogScreen;\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Cart from '../screens/store/Cart';\nimport CheckoutProcess from '../screens/store/CheckoutProcess';\nimport OrderManagement from '../screens/store/OrderManagement';\nimport SingleProductViewScreen from '../screens/store/SingleProductViewScreen';\nimport ProductCatalogScreen from '../screens/store/ProductCatalogScreen';\n\nconst Stack = createStackNavigator();\n\nconst StoreStackNavigator = () => {\n    return (\n        <Stack.Navigator initialRouteName=\"ProductCatalog\">\n            <Stack.Screen name=\"ProductCatalog\" options={{ headerShown: false, }} component={ProductCatalogScreen} />\n            <Stack.Screen name=\"Cart\"\n                options={{ title: '', headerShown: false, }}\n                component={Cart} />\n            <Stack.Screen\n                name=\"CheckoutProcess\"\n                component={CheckoutProcess}\n                options={{ title: 'Checkout Process' }}\n            />\n            <Stack.Screen\n                name=\"OrderManagement\"\n                component={OrderManagement}\n                options={{ title: 'Order History' }}\n            />\n            <Stack.Screen\n                options={{ title: '', }}\n                name=\"SingleProductView\"\n                component={SingleProductViewScreen}\n            />\n        </Stack.Navigator>\n    );\n};\n\nexport default StoreStackNavigator;\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Modal, Pressable, TextInput } from 'react-native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useUser } from '../context/UserContext';\nimport Home from './Home';\nimport UpdateProfileModal from '../components/UpdateProfileModal';\nimport API_BASE_URL from '../services/config';\nimport { AuthOpen } from '../hooks/useAuth';\nimport Chat from './Chat';\nimport CustomHeader from '../components/CustomHeader';\nimport StoreStackNavigator from '../navigation/StoreStackNavigator';\nconst Tab = createBottomTabNavigator();\n\nconst HomeTabNavigator = ({ route }) => {\n    const navigation = useNavigation();\n    const adIds = route.params?.adIdm\n    const { logout, userToken, fetchUserDetails } = useUser();\n    const { logOut } = AuthOpen();\n    const [isModalVisible, setModalVisible] = React.useState(false);\n    const [isUpdateModalVisible, setUpdateModalVisible] = React.useState(false);\n    const [locationModal, setLocationModal] = React.useState(false);\n\n\n    const [isUserExists, setIsUserExists] = useState(false);\n    const [userProfileData, setUserProfileData] = React.useState({\n        name: '',\n        email: '',\n        gender: '',\n        phone: '',\n    });\n    const handleMyAds = () => {\n        navigation.navigate('UserAds')\n        setModalVisible(false)\n    }\n    const renderPopover = () => (\n        <Modal\n            visible={isModalVisible}\n            transparent={true}\n            onRequestClose={() => {\n                setModalVisible(false);\n                setUpdateModalVisible(false);\n            }}\n        >\n            <Pressable\n                style={styles.popoverBackground}\n                onPress={() => {\n                    setModalVisible(false);\n                    setUpdateModalVisible(false);\n                }}\n            >\n                <View style={styles.popoverContent}>\n\n                    <TouchableOpacity\n                        style={styles.popoverOption}\n                        onPress={handleUpdateProfile}\n                    >\n                        <Text style={styles.popoverOptionText}>Update Profile</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={styles.popoverOption}\n                        onPress={handleMyAds}\n                    >\n                        <Text style={styles.popoverOptionText}>My Ads</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={styles.popoverOption} onPress={handleLogout}>\n                        <Text style={styles.popoverOptionText}>Logout</Text>\n                    </TouchableOpacity>\n                </View>\n            </Pressable>\n        </Modal>\n    );\n\n    useEffect(() => {\n        if (adIds) {\n            setTimeout(() => {\n                navigation.navigate('SingleScreenAd', { adIds });\n            }, 100);\n        }\n    }, [adIds]);\n\n    useEffect(() => {\n        fetchUserExistsStatus()\n    }, []);\n\n    const fetchUserExistsStatus = async () => {\n        const checkPhoneResponse = await fetch(`${API_BASE_URL}/user/check-phone/${userToken.toString()}`);\n        const checkPhoneData = await checkPhoneResponse.json();\n        if (checkPhoneData.exists) {\n            fetchUserDetails()\n        }\n        setUpdateModalVisible(!checkPhoneData.exists)\n        setIsUserExists(checkPhoneData.exists)\n    }\n\n    const toggleModal = () => {\n        setModalVisible(!isModalVisible);\n        if (isUpdateModalVisible) {\n            setUpdateModalVisible(false);\n        }\n    };\n\n\n    const handleUpdateProfile = () => {\n        setModalVisible(false);\n        const fetchedProfileData = {\n            name: 'John Doe',\n            email: 'johndoe@example.com',\n            gender: 'Male',\n        };\n\n        setUserProfileData(fetchedProfileData);\n        setUpdateModalVisible(true);\n    };\n\n    const handleLogout = () => {\n        logout();\n        logOut()\n    };\n\n    const handleDismissUpdateModal = () => {\n        setUpdateModalVisible(false)\n        fetchUserExistsStatus()\n    }\n\n    const renderCustomHeader = () => {\n        return (\n            <CustomHeader\n                onBackPress={() => navigation.goBack()}\n                onSettingPress={toggleModal}\n                locationModal={locationModal}\n                setLocationModal={setLocationModal}\n            />\n        );\n    };\n    return (\n        <>\n            <Tab.Navigator\n                tabBarOptions={{\n                    activeTintColor: '#007DBC',\n                    inactiveTintColor: 'gray',\n                    showLabel: true,\n                    style: styles.tabBar,\n                    headerShown: false\n                }}\n                screenOptions={({ route }) => ({\n                    // headerRight: () => (\n                    //     <TouchableOpacity onPress={toggleModal}>\n                    //         <MaterialCommunityIcons\n                    //             name=\"cog\"\n                    //             size={24}\n                    //             color=\"#000\"\n                    //             style={{ marginRight: 16 }}\n                    //         />\n                    //     </TouchableOpacity>\n                    // ),\n                    header: renderCustomHeader\n\n                })}\n            >\n                <Tab.Screen\n                    name=\"HomeTabNavigator\"\n                    component={Home}\n                    options={{\n                        title: 'Home',\n                        tabBarIcon: ({ color, focused }) => (\n                            <MaterialCommunityIcons\n                                name={focused ? 'home' : 'home-outline'}\n                                size={24}\n                                color={color}\n                            />\n                        ),\n                    }}\n                />\n                <Tab.Screen\n                    name=\"Store\"\n                    component={StoreStackNavigator}\n                    options={{\n                        tabBarIcon: ({ color, focused }) => (\n                            <MaterialCommunityIcons\n                                name={focused ? 'shopping' : 'shopping'}\n                                size={24}\n                                color={color}\n                            />\n                        ),\n                    }}\n                />\n                <Tab.Screen\n                    name=\"Message\"\n                    component={Chat}\n                    options={{\n                        tabBarIcon: ({ color, focused }) => (\n                            <MaterialCommunityIcons\n                                name={focused ? 'message' : 'message'}\n                                size={24}\n                                color={color}\n                            />\n                        ),\n                    }}\n                />\n            </Tab.Navigator>\n            {renderPopover()}\n            {isUpdateModalVisible && (<UpdateProfileModal\n                isVisible={isUpdateModalVisible}\n                onDismiss={handleDismissUpdateModal}\n                userProfileData={userProfileData}\n                isUserExists={isUserExists}\n                setLocationModal={setLocationModal}\n                onUpdateProfile={(updatedData) => {\n                    // Handle updating the user profile here\n                    setUserProfileData(updatedData);\n                }}\n            />)}\n\n        </>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        padding: 16,\n    },\n    tabBar: {\n        backgroundColor: 'white',\n        borderTopWidth: 0,\n        elevation: 2,\n    },\n    addButton: {\n        backgroundColor: '#007DBC',\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        alignItems: 'center',\n        justifyContent: 'center',\n        bottom: 16,\n        elevation: 4,\n    },\n    addButtonText: {\n        color: 'white',\n        fontSize: 32,\n        fontWeight: 'bold',\n    },\n    popoverBackground: {\n        flex: 1,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    popoverContent: {\n        backgroundColor: '#fff',\n        padding: 16,\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: '#ccc',\n    },\n    popoverOption: {\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n    },\n    popoverOptionText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#007DBC',\n    },\n});\n\nexport default HomeTabNavigator;\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    Image,\n    ScrollView,\n    Switch,\n    StyleSheet,\n    Button,\n} from 'react-native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport RNPickerSelect from 'react-native-picker-select';\nimport * as ImagePicker from 'expo-image-picker'; // For image upload\nimport { RNS3 } from 'react-native-aws3'; // For S3 upload\nimport { useUser } from '../context/UserContext';\nimport axios from 'axios';\nimport Toast from 'react-native-toast-message'; // Import the toast library\nimport API_BASE_URL from '../services/config';\nimport { useNavigation, } from '@react-navigation/native';\nimport { AuthOpen } from '../hooks/useAuth';\n\nexport default function PostAdScreen({ route }) {\n    const navigation = useNavigation();\n    const { userToken, userDetails, userInfo } = useUser();\n    const [images, setImages] = useState([]); // Store image URIs\n    const [location, setLocation] = useState(route.params?.ad?.location || null);\n    const [adTitle, setAdTitle] = useState(route.params?.ad?.adTitle || '');\n    const [adDescription, setAdDescription] = useState(route.params?.ad?.adDescription || '');\n    const [phone, setPhone] = useState(route.params?.ad?.phone || '');\n    const [email, setEmail] = useState(route.params?.ad?.email || '');\n    const [price, setPrice] = useState(route.params?.ad?.price || 0);\n    const [maxResidents, setMaxResidents] = useState(route.params?.ad?.maxResidents || 1);\n    const [preference, setPreference] = useState(route.params?.ad?.preference || null);\n    const [isMaleOnly, setIsMaleOnly] = useState(route.params?.ad?.isMaleOnly || false);\n    const [isFurnished, setIsFurnished] = useState(route.params?.ad?.isFurnished || false);\n    const [hasAttachedBathroom, setHasAttachedBathroom] = useState(\n        route.params?.ad?.hasAttachedBathroom || false\n    );\n    const [isBachelorsAllowed, setIsBachelorsAllowed] = useState(\n        route.params?.ad?.isBachelorsAllowed || false\n    );\n    const [loading, setLoading] = useState(false); // Loading state\n    const handleImageUpload = async () => {\n        const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n        if (permissionResult.granted === false) {\n            alert('Permission to access camera roll is required!');\n            return;\n        }\n\n        const pickerResult = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n            multiple: true, // Allow selecting multiple images\n        });\n        if (!pickerResult.cancelled) {\n            // Create a new array with the selected image URIs\n            const newImages = [...images, pickerResult.assets[0].uri];\n            setImages(newImages);\n        }\n    };\n\n    const uploadImagesToS3 = async () => {\n\n        Toast.show({\n            type: 'error',\n            text1: 'Error Uploading Image',\n            text2: 'Please try again later.',\n        });\n        let s3Images = [];\n\n        for (const imageUri of images) {\n            const options = {\n                keyPrefix: 'uploads/',\n                bucket: 'primecaves',\n                region: 'ap-south-1',\n                accessKey: 'AKIARM6FSFR7MWP7YQUY',\n                secretKey: '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',\n                successActionStatus: 201,\n            };\n            const file = {\n                uri: imageUri,\n                name: `${userToken.toString()}-${Date.now()}.jpeg`,\n                type: 'image/jpeg',\n            };\n\n            try {\n                const response = await RNS3.put(file, options);\n                if (response.status !== 201) {\n                    throw new Error('Failed to upload image to S3');\n                }\n\n                const s3ImageUrl = response.body.postResponse.location;\n                s3Images.push(s3ImageUrl);\n            } catch (error) {\n                console.error('Error uploading image:', error);\n                // Show a toast message for the error\n                Toast.show({\n                    type: 'error',\n                    text1: 'Error Uploading Image',\n                    text2: 'Please try again later.',\n                });\n\n            }\n        }\n\n        return s3Images;\n    };\n\n\n    const handleSubmit = async () => {\n        try {\n            let s3Images = [];\n            // Upload images to S3 and wait for the operation to complete\n            if (images) {\n                s3Images = await uploadImagesToS3();\n            }\n            const postData = {\n                images: s3Images,\n                location,\n                adTitle,\n                adDescription,\n                phone,\n                email,\n                maxResidents,\n                preference,\n                isMaleOnly,\n                isFurnished,\n                hasAttachedBathroom,\n                isBachelorsAllowed,\n                price,\n                userId: userDetails._id,\n                user: {\n                    firebaseId: userInfo.firebaseId,\n                    gender: userDetails.gender,\n                    image: userDetails.image,\n                    name: userDetails.name,\n                    phone: userDetails.phoneNumber\n                }\n            };\n            setLoading(true);\n            if (route.params?.ad) {\n                // If route.params.ad exists, it means we're updating an existing ad\n                const response = await axios.put(\n                    `${API_BASE_URL}/rentpost/update/${route.params.ad._id}`,\n                    postData\n                );\n\n                // Check the response status and show a success or error toast\n                if (response.status === 200) {\n                    // Ad updated successfully\n                    console.log('Rental post updated successfully.');\n                    Toast.show({\n                        type: 'success',\n                        text1: 'Rental Post Updated',\n                        text2: 'Your rental post has been successfully updated.',\n                    });\n                    navigation.navigate('HomeTabNavigator');\n                } else {\n                    console.error('Failed to update rental post.');\n                    Toast.show({\n                        type: 'error',\n                        text1: 'Error Updating Rental Post',\n                        text2: 'Please try again later.',\n                    });\n                }\n            } else {\n                // If route.params.ad does not exist, it means we're creating a new ad\n                const response = await axios.post(`${API_BASE_URL}/rentpost/create`, postData);\n\n                // Check the response status and show a success or error toast\n                if (response.status === 201) {\n                    // Ad created successfully\n                    console.log('Rental post created successfully.');\n                    Toast.show({\n                        type: 'success',\n                        text1: 'Rental Post Created',\n                        text2: 'Your rental post has been successfully created.',\n                    });\n                    // navigation.navigate('HomeTabNavigator')\n                    navigation.goBack()\n                } else {\n                    console.error('Failed to create rental post.');\n                    Toast.show({\n                        type: 'error',\n                        text1: 'Error Creating Rental Post',\n                        text2: 'Please try again later.',\n                    });\n                }\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            // Handle error appropriately (e.g., show an error message to the user)\n            Toast.show({\n                type: 'error',\n                text1: 'Error',\n                text2: 'Please try again later.',\n            });\n        } finally {\n            // Set loading state back to false when done\n            setLoading(false);\n        }\n    };\n\n    return (\n        <ScrollView style={styles.container}>\n            <View style={styles.imageContainer}>\n                {/* Custom back button with Ionicons */}\n                <TouchableOpacity\n                    style={styles.backButton}\n                    onPress={() => navigation.goBack()}\n                >\n                    <Ionicons name=\"arrow-back\" size={24} color=\"#007DBC\" />\n                </TouchableOpacity>\n                {/* ... Your existing JSX ... */}\n            </View>\n            <View style={styles.imageContainer}>\n                <Text style={styles.heading}>Upload Photos</Text>\n                <TouchableOpacity style={styles.imageUploadButton} onPress={handleImageUpload}>\n                    <Text style={styles.uploadButtonText}>Select Images</Text>\n                </TouchableOpacity>\n                <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n                    {images.map((imageUri, index) => (\n                        <Image key={index} source={{ uri: imageUri }} style={styles.image} />\n                    ))}\n                </ScrollView>\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Location</Text>\n                <RNPickerSelect\n                    placeholder={{ label: 'Select Location', value: null }}\n                    onValueChange={(value) => setLocation(value)}\n                    items={[\n                        { label: 'Patia', value: 'Patia' },\n                        { label: 'Nayapali', value: 'Nayapali' },\n                        { label: 'CSpur', value: 'CSpur' },\n                        { label: 'Master Canteen', value: 'Master Canteen' },\n                    ]}\n                    style={pickerSelectStyles}\n                    value={location}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Ad Title</Text>\n                <TextInput\n                    style={styles.input}\n                    value={adTitle}\n                    onChangeText={setAdTitle}\n                    placeholder=\"Enter Ad Title\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Ad Description</Text>\n                <TextInput\n                    style={[styles.input, styles.multilineInput]}\n                    value={adDescription}\n                    onChangeText={setAdDescription}\n                    multiline\n                    placeholder=\"Enter Ad Description\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Phone Number</Text>\n                <TextInput\n                    style={styles.input}\n                    value={phone}\n                    onChangeText={setPhone}\n                    keyboardType=\"numeric\"\n                    placeholder=\"Enter Phone Number\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Email</Text>\n                <TextInput\n                    style={styles.input}\n                    value={email}\n                    onChangeText={setEmail}\n                    keyboardType=\"email-address\"\n                    placeholder=\"Enter Email\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Price</Text>\n                <TextInput\n                    style={styles.input}\n                    value={price}\n                    onChangeText={setPrice}\n                    keyboardType=\"numeric\"\n                    placeholder=\"Enter Price\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Maximum Residents</Text>\n                <View style={styles.stepperContainer}>\n                    <TouchableOpacity\n                        style={styles.stepperButton}\n                        onPress={() => maxResidents > 1 && setMaxResidents(maxResidents - 1)}\n                    >\n                        <Text style={styles.stepperButtonText}>-</Text>\n                    </TouchableOpacity>\n                    <Text style={styles.stepperValue}>{maxResidents}</Text>\n\n                    <TouchableOpacity\n                        style={styles.stepperButton}\n                        onPress={() => setMaxResidents(maxResidents + 1)}\n                    >\n                        <Text style={styles.stepperButtonText}>+</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Preference</Text>\n                <RNPickerSelect\n                    value={preference}\n                    placeholder={{ label: 'Select Preference', value: null }}\n                    onValueChange={(value) => setPreference(value)}\n                    items={[\n                        { label: 'Family', value: 'Family' },\n                        { label: 'Student', value: 'Student' },\n                        { label: 'Working Professional', value: 'Working Professional' },\n                    ]}\n                    style={pickerSelectStyles}\n\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Room for Male Only</Text>\n                <Switch\n                    value={isMaleOnly}\n                    onValueChange={setIsMaleOnly}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Furnishing</Text>\n                <Switch\n                    value={isFurnished}\n                    onValueChange={setIsFurnished}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Attached Bathroom</Text>\n                <Switch\n                    value={hasAttachedBathroom}\n                    onValueChange={setHasAttachedBathroom}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Bachelors Allowed</Text>\n                <Switch\n                    value={isBachelorsAllowed}\n                    onValueChange={setIsBachelorsAllowed}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <TouchableOpacity\n                style={styles.submitButton}\n                onPress={handleSubmit}\n                disabled={loading} // Disable the button while loading\n            >\n                <Text style={styles.submitButtonText}>{loading ? 'Loading...' : 'Submit'}</Text>\n            </TouchableOpacity>\n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16,\n        backgroundColor: '#fff',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        color: '#007DBC',\n    },\n    imageContainer: {\n        marginBottom: 20,\n    },\n    imageUploadButton: {\n        backgroundColor: '#007DBC',\n        padding: 10,\n        borderRadius: 5,\n        alignItems: 'center',\n        bottom: 8,\n    },\n    uploadButtonText: {\n        color: 'white',\n        fontWeight: 'bold',\n    },\n    image: {\n        width: 100,\n        height: 100,\n        marginRight: 10,\n        borderRadius: 5,\n    },\n    fieldContainer: {\n        marginBottom: 20,\n    },\n    label: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginBottom: 5,\n        color: '#007DBC',\n    },\n    input: {\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n        padding: 10,\n    },\n    multilineInput: {\n        minHeight: 100,\n        textAlignVertical: 'top',\n    },\n    stepperContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    stepperButton: {\n        backgroundColor: '#007DBC',\n        padding: 8,\n        borderRadius: 20,\n        marginHorizontal: 5,\n    },\n    stepperButtonText: {\n        color: 'white',\n        fontSize: 18,\n    },\n    stepperValue: {\n        fontSize: 16,\n    },\n    submitButton: {\n        backgroundColor: '#007DBC',\n        padding: 16,\n        borderRadius: 5,\n        alignItems: 'center',\n    },\n    submitButtonText: {\n        color: 'white',\n        fontWeight: 'bold',\n        fontSize: 18,\n    },\n});\n\n\nconst pickerSelectStyles = StyleSheet.create({\n    inputIOS: {\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n        paddingVertical: 12,\n        paddingHorizontal: 10,\n        paddingRight: 30, // to ensure the text is never behind the icon\n        marginBottom: 20,\n    },\n    inputAndroid: {\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n        paddingVertical: 10,\n        paddingHorizontal: 10,\n        paddingRight: 30, // to ensure the text is never behind the icon\n        marginBottom: 20,\n    },\n});\n","import { Text, View } from 'react-native'\nimport React, { Component } from 'react'\n\nexport default class Default extends Component {\n    render() {\n        return (\n            <View>\n                <Text>Default</Text>\n            </View>\n        )\n    }\n}","// AdCard.js\nimport React from 'react';\nimport { View, Text, Image, TouchableOpacity, StyleSheet } from 'react-native';\n\nconst AdCard = ({ ad, onEdit, onDelete, onClaim }) => {\n    return (\n        <View style={styles.container}>\n            <Image source={{ uri: ad.images[0] }} style={styles.image} />\n            <Text style={styles.title}>{ad.adTitle}</Text>\n            <Text style={styles.location}>{ad.location}</Text>\n            <View style={styles.buttonContainer}>\n                <TouchableOpacity style={styles.button} onPress={() => onEdit(ad)}>\n                    <Text style={styles.buttonText}>Edit</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.button} onPress={() => onDelete(ad._id)}>\n                    <Text style={styles.buttonText}>Delete</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.button} onPress={() => onClaim(ad)}>\n                    <Text style={styles.buttonText}>Claim </Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'white',\n        borderRadius: 10,\n        padding: 10,\n        marginBottom: 20,\n        elevation: 2,\n    },\n    image: {\n        width: '100%',\n        height: 200,\n        borderRadius: 10,\n        marginBottom: 10,\n    },\n    title: {\n        fontSize: 16,\n        fontWeight: 'bold',\n    },\n    location: {\n        fontSize: 14,\n        color: 'gray',\n        marginBottom: 10,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    button: {\n        flex: 1,\n        backgroundColor: '#3182CE',\n        borderRadius: 5,\n        padding: 10,\n        alignItems: 'center',\n        marginHorizontal: 5,\n    },\n    buttonText: {\n        color: 'white',\n        fontWeight: 'bold',\n    },\n});\n\nexport default AdCard;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { View, FlatList, Text, TouchableOpacity, StyleSheet, Image, ActivityIndicator, RefreshControl } from 'react-native';\nimport Modal from 'react-native-modal';\nimport AdCard from '../components/AdCard'; // Import the AdCard component\nimport API_BASE_URL from '../services/config'; // Your API base URL\nimport { FontAwesome } from '@expo/vector-icons'; // Import FontAwesome icons\nimport { useNavigation } from '@react-navigation/native'; // Import the useNavigation hook\nimport { useUser } from '../context/UserContext';\n\nconst UserAds = () => {\n    const { userDetails } = useUser();\n    const [userAds, setUserAds] = useState([]);\n    const [selectedAd, setSelectedAd] = useState(null); // To store the selected ad for the modal\n    const [isModalVisible, setModalVisible] = useState(false);\n    const [isLoading, setIsLoading] = useState(false); // To track delete operation loading state\n    const [isDeleteConfirmationVisible, setDeleteConfirmationVisible] = useState(false); // To show delete confirmation modal\n    const navigation = useNavigation(); // Get the navigation object\n    const [refreshing, setRefreshing] = useState(false);\n\n    useEffect(() => {\n        // Fetch user's posted ads from the backend\n        const fetchUserAds = async () => {\n            try {\n                const response = await fetch(`${API_BASE_URL}/rentpost/user/${userDetails._id}`);\n                if (response.ok) {\n                    const data = await response.json();\n                    setUserAds(data);\n                } else {\n                    console.error('Failed to fetch user ads');\n                }\n            } catch (error) {\n                console.error('Error fetching user ads:', error);\n            }\n        };\n\n        fetchUserAds();\n    }, []);\n\n    const handleEdit = (ad) => {\n        navigation.navigate('PostAd', { ad });\n    };\n\n    const renderEmptyListComponent = () => (\n        <View style={styles.emptyListContainer}>\n            <Text style={styles.emptyListText}>You have no ads posted yet.</Text>\n        </View>\n    );\n\n\n    const handleDelete = async (adId) => {\n        setIsLoading(true);\n\n        try {\n            // Send a request to delete the ad by its ID\n            const response = await fetch(`${API_BASE_URL}/rentpost/delete/${adId}`, {\n                method: 'DELETE',\n            });\n\n            if (response.ok) {\n                // Remove the deleted ad from the userAds state\n                setUserAds((prevAds) => prevAds.filter((ad) => ad._id !== adId));\n            } else {\n                console.error('Failed to delete ad');\n            }\n        } catch (error) {\n            console.error('Error deleting ad:', error);\n        } finally {\n            // Reset loading state\n            setIsLoading(false);\n            // Close the modal\n            setDeleteConfirmationVisible(false);\n        }\n    };\n\n    const handleClaim = (ad) => {\n        // Implement your claim logic here\n    };\n\n    const toggleModal = (ad) => {\n\n        setModalVisible(!isModalVisible);\n    };\n\n\n    const handleDeleteAd = (ad) => {\n        setSelectedAd(ad);\n        setDeleteConfirmationVisible(true)\n    }\n\n    const onRefresh = useCallback(async () => {\n        setRefreshing(true);\n\n        try {\n            // Fetch user's posted ads from the backend\n            const response = await fetch(`${API_BASE_URL}/rentpost/user/${userDetails._id}`);\n            if (response.ok) {\n                const data = await response.json();\n                setUserAds(data);\n            } else {\n                console.error('Failed to fetch user ads');\n            }\n        } catch (error) {\n            console.error('Error fetching user ads:', error);\n        } finally {\n            setRefreshing(false);\n        }\n    }, []);\n\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                {/* Back button */}\n                <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>\n                    <FontAwesome name=\"arrow-left\" size={24} color=\"black\" />\n                </TouchableOpacity>\n                <Text style={styles.headerText}>Your Ads</Text>\n            </View>\n            <FlatList\n                data={userAds}\n                keyExtractor={(item) => item._id}\n                renderItem={({ item }) => (\n                    <TouchableOpacity onPress={() => toggleModal(item)}>\n                        <AdCard ad={item} onEdit={handleEdit} onDelete={() => handleDeleteAd(item)} onClaim={handleClaim} />\n                    </TouchableOpacity>\n                )}\n                ListEmptyComponent={renderEmptyListComponent}\n                refreshControl={\n                    <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n                }\n            />\n            <Modal isVisible={isModalVisible}>\n                <View style={styles.modalContainer}>\n                    <TouchableOpacity onPress={() => setModalVisible(false)} style={styles.closeButton}>\n                        <Text style={styles.closeButtonText}>Close</Text>\n                    </TouchableOpacity>\n                    {/* Display ad details here */}\n                    {selectedAd && (\n                        <View>\n                            <Text>{selectedAd.adTitle}</Text>\n                            <Text>{selectedAd.location}</Text>\n                            <Image source={{ uri: selectedAd.images[0] }} style={styles.image} />\n                            {/* Add other ad details */}\n                        </View>\n                    )}\n                </View>\n            </Modal>\n            {/* Delete confirmation modal */}\n            <Modal isVisible={isDeleteConfirmationVisible}>\n                <View style={styles.deleteConfirmationContainer}>\n                    <Text style={styles.deleteConfirmationText}>Are you sure you want to delete this ad?</Text>\n                    <View style={styles.deleteConfirmationButtons}>\n                        <TouchableOpacity onPress={() => setDeleteConfirmationVisible(false)} style={styles.cancelButton}>\n                            <Text style={styles.cancelButtonText}>Cancel</Text>\n                        </TouchableOpacity>\n                        {isLoading ? (\n                            <ActivityIndicator size=\"small\" color=\"blue\" />\n                        ) : (\n                            <TouchableOpacity onPress={() => handleDelete(selectedAd._id)} style={styles.confirmButton}>\n                                <Text style={styles.confirmButtonText}>Delete</Text>\n                            </TouchableOpacity>\n                        )}\n                    </View>\n                </View>\n            </Modal>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16, // Add padding for the ads\n    },\n    header: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 16, // Add margin at the bottom of the header\n    },\n    backButton: {\n        marginRight: 8,\n    },\n    headerText: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    modalContainer: {\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 10,\n    },\n    image: {\n        width: '100%',\n        height: 200,\n        borderRadius: 10,\n        marginBottom: 10,\n    },\n    deleteConfirmationContainer: {\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 10,\n    },\n    deleteConfirmationText: {\n        fontSize: 18,\n        marginBottom: 20,\n    },\n    deleteConfirmationButtons: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n    },\n    confirmButton: {\n        backgroundColor: 'red',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 5,\n    },\n    emptyListContainer: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 20,\n    },\n    emptyListText: {\n        fontSize: 16,\n        color: '#999',\n    },\n    confirmButtonText: {\n        color: 'white',\n    },\n    cancelButton: {\n        backgroundColor: '#3182CE',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 5,\n        marginRight: 10,\n    },\n    cancelButtonText: {\n        color: 'white',\n    },\n    closeButton: {\n        backgroundColor: '#3182CE',\n        padding: 8,\n        borderRadius: 5,\n    },\n    closeButtonText: {\n        color: 'white',\n    },\n});\n\nexport default UserAds;\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, Image, TouchableOpacity, ScrollView, SafeAreaView, Share, Platform, Clipboard, Alert, ActivityIndicator, } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { db } from '../firebase/firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useUser } from '../context/UserContext';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport API_BASE_URL, { DOMAIN_URL } from '../services/config';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons'; // Import for larger icon\n\nconst amenitiesMapping = [\n    { key: 'isFurnished', label: 'Furnished', icon: 'bed-outline' },\n    { key: 'hasAttachedBathroom', label: 'Attached Bathroom', icon: 'water-outline' },\n    { key: 'isMaleOnly', label: 'Male Only', icon: 'male-outline' },\n    { key: 'isBachelorsAllowed', label: 'Bachelors Allowed', icon: 'people-outline' },\n];\n\nconst AdDetailsScreen = ({ route }) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const { userInfo } = useUser();\n    const adId = route.params?.adIds;\n    const navigation = useNavigation();\n    const [ad, setAd] = useState();\n    const [firebaseId, setFirebaseId] = useState(ad?.firebaseId);\n    const [flatmatesData, setFlatmatesData] = useState(ad?.flatmates);\n    const [userDetails, setUserDetails] = useState(null);\n    const [showDirectMessageButton, setShowDirectMessageButton] = useState(false);\n    const isPostedByCurrentUser = firebaseId === userInfo?.firebaseId;\n    const [isAdAvailable, setIsAdAvailable] = useState(true);\n    useEffect(() => {\n        const fetchPostDetails = async () => {\n            setIsLoading(true);\n\n            try {\n                const response = await fetch(`${API_BASE_URL}/rentpost/getPostsById/${adId}`);\n                if (response.ok) {\n                    const data = await response.json();\n                    setAd(data)\n                    setFirebaseId(data?.firebaseId)\n                    setFlatmatesData(data?.flatmates || [])\n                    setIsAdAvailable(true);\n                } else {\n                    setIsAdAvailable(false);\n                    console.error('Failed to fetch user ads');\n                }\n            } catch (error) {\n                console.error('Error fetching user ads:', error);\n            } finally {\n                setIsLoading(false); // Stop loading\n            }\n        };\n\n        if (adId) {\n            fetchPostDetails();\n        }\n    }, [adId]);\n\n\n    const onShare = async () => {\n        const shareMessage = `${ad?.adTitle} At Price ₹${ad?.price}\\n\\n Check this out!! ✨🏠🌟\\n\\n` + `${DOMAIN_URL}/ads/${ad?._id}`;\n\n        if (Platform.OS === 'web') {\n            // Attempt to use the Web Share API if available\n            if (navigator.share) {\n                navigator.share({\n                    title: ad?.adTitle,\n                    text: shareMessage,\n                    // url: ad?.images[0],\n                }).catch(error => console.log('Error sharing', error));\n            } else {\n                Clipboard.setString(shareMessage);\n                Alert.alert('Link copied to clipboard');\n            }\n        } else {\n            // Mobile sharing\n            try {\n                await Share.share({\n                    message: shareMessage,\n                    //url: ad?.images[0], // Include this only if it's a local file\n                });\n            } catch (error) {\n                console.error(error.message);\n            }\n        }\n    };\n\n    useEffect(() => {\n        const fetchUserDetails = async () => {\n            try {\n                const userDoc = await getDoc(doc(db, 'user_profiles', firebaseId));\n\n                if (userDoc.exists()) {\n                    setUserDetails(userDoc.data());\n                    setShowDirectMessageButton(true);\n                }\n            } catch (error) {\n                console.error('Error fetching user details:', error);\n            }\n        };\n\n        if (firebaseId) {\n            fetchUserDetails();\n        }\n    }, [firebaseId]);\n\n\n    const handleDirectMessage = () => {\n        navigation.navigate('Message', {\n            userDetails\n        });\n    };\n\n    const handleBackButton = () => {\n        navigation.goBack();\n    };\n\n    if (isLoading) {\n        return (\n            <View style={styles.loaderContainer}>\n                <ActivityIndicator size=\"large\" color=\"#FFFFFF\" />\n            </View>\n        )\n    }\n    if (!isAdAvailable) {\n        return (\n            <LinearGradient colors={['#007DBC', '#005AAA']} style={styles.soldContainer}>\n                <MaterialIcons name=\"error-outline\" size={60} color=\"white\" />\n                <Text style={styles.soldMessage}>This ad has been sold</Text>\n                <TouchableOpacity onPress={handleBackButton} style={styles.seeMoreButtonContainer}>\n\n                    <Text style={styles.seeMoreButtonText}> See More</Text>\n                    <Ionicons name=\"arrow-forward\" size={24} color=\"white\" />\n                </TouchableOpacity>\n            </LinearGradient>\n        );\n    }\n    return (\n        <SafeAreaView style={styles.flexContainer}>\n            <View style={{ height: \"90%\", backgroundColor: '#f8f9fa', }}>\n                <LinearGradient colors={['#007DBC', '#005AAA']} >\n                    <TouchableOpacity onPress={handleBackButton} style={styles.seeMoreButtonContainer}>\n                        <Ionicons name=\"arrow-back\" size={24} color=\"white\" />\n                    </TouchableOpacity>\n                </LinearGradient>\n                <ScrollView contentContainerStyle={styles.scrollViewContent}>\n                    <Image source={{ uri: ad?.images[0] }} style={styles.villaImage} />\n                    <TouchableOpacity style={styles.shareIcon} onPress={onShare}>\n                        <Ionicons name=\"share-social\" size={24} color=\"white\" />\n                    </TouchableOpacity>\n                    <Text style={styles.villaName}>{ad?.adTitle}</Text>\n                    <Text style={styles.location}>{ad?.location}</Text>\n                    <View style={styles.offerContainer}>\n                        <FontAwesome name=\"check\" size={24} color=\"white\" style={styles.trustIcon} />\n\n                        <Text style={styles.offerText}>Verified User</Text>\n                    </View>\n                    <Text style={styles.description}>{ad?.adDescription}</Text>\n                    {ad &&\n                        (<View style={styles.amenitiesContainer}>\n                            <View style={styles.amenitiesList}>\n                                {amenitiesMapping.map(amenity => {\n                                    if (ad[amenity.key]) {\n                                        return (\n                                            <View style={styles.amenityItem} key={amenity.key}>\n                                                <Ionicons name={amenity.icon} size={24} color=\"white\" />\n                                                <Text style={styles.amenityLabel}>{amenity.label}</Text>\n                                            </View>\n                                        );\n                                    }\n                                    return null;\n                                })}\n                            </View>\n                        </View>)}\n                    {\n                        (ad && flatmatesData.length > 0) &&\n                        (<View style={styles.flatmatesSection}>\n                            <Text style={styles.title}>Flatmates</Text>\n                            <View style={styles.flatmatesGrid}>\n                                {flatmatesData.map((flatmate, index) => (\n                                    <View key={index} style={styles.flatmateCard}>\n                                        <Image source={{ uri: flatmate.image }} style={styles.flatmateImage} />\n                                        <Text style={styles.flatmateName}>{flatmate.name}</Text>\n                                        <Text style={styles.flatmateOccupation}>{flatmate.occupation}</Text>\n                                    </View>\n                                ))}\n                            </View>\n                        </View>)\n                    }\n                </ScrollView>\n            </View>\n            {isPostedByCurrentUser ? (\n                // Display a message indicating that the advertisement is posted by the current user\n                <Text style={styles.postedByCurrentUserMessage}>\n                    This advertisement is posted by you.\n                </Text>\n            ) : showDirectMessageButton && (\n                <View style={styles.footer}>\n                    <View style={styles.priceContainer}>\n                        <Text style={styles.discountedPrice}>₹{ad?.price}/month</Text>\n                    </View>\n                    <TouchableOpacity onPress={handleDirectMessage} style={styles.bookNowButton}>\n                        <Text style={styles.bookNowButtonText}>\n                            Direct Message\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n\n            )}\n\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    flexContainer: {\n        flex: 1,\n        backgroundColor: '#f8f9fa',\n        fontFamily: 'open-sans-regular'\n    },\n    container: {\n        flex: 1,\n    },\n    loaderContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#005AAA', // Adjust the color and opacity to match your gradient\n    },\n    footer: {\n        borderTopWidth: 1,\n        borderColor: '#eaecef',\n        backgroundColor: '#fff',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        zIndex: 10,\n        padding: 16,\n        flexDirection: 'row',\n        ...(Platform.OS === 'web' ? {\n            position: 'fixed',\n            bottom: 0,\n            left: 0,\n            right: 0,\n        } : {\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            right: 0,\n        }),\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        padding: 16,\n        alignItems: 'center',\n        borderBottomWidth: 1,\n        borderBottomColor: '#eaecef',\n    },\n    icon: {\n        width: 24,\n        height: 24,\n    },\n    backButton: {\n        fontSize: 18,\n        color: '#007bff',\n    },\n    villaImage: {\n        width: '100%',\n        height: 300,\n        resizeMode: 'cover',\n    },\n    villaName: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginVertical: 8,\n        marginHorizontal: 16,\n        color: '#212529',\n        fontFamily: 'open-sans-bold'\n    },\n    location: {\n        fontSize: 16,\n        color: '#6c757d',\n        marginBottom: 8,\n        marginLeft: 16,\n        fontFamily: 'open-sans-regular'\n    },\n    offerContainer: {\n        flexDirection: 'row',\n        backgroundColor: '#007DBC',\n        padding: 12,\n        marginHorizontal: 16,\n        marginVertical: 8,\n        borderRadius: 4,\n    },\n    offerText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontFamily: 'open-sans-regular'\n    },\n    description: {\n        marginHorizontal: 16,\n        marginVertical: 8,\n        fontSize: 16,\n        color: '#212529',\n        fontFamily: 'open-sans-regular'\n    },\n    hostImage: {\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        margin: 16,\n        borderWidth: 2,\n        borderColor: '#eaecef',\n    },\n    hostName: {\n        fontSize: 18,\n        fontWeight: '500',\n        marginLeft: 16,\n        color: '#212529',\n    },\n    price: {\n        fontSize: 28,\n        fontWeight: 'bold',\n        marginHorizontal: 16,\n        marginVertical: 8,\n        color: '#28a745',\n    },\n    directMessageButton: {\n        backgroundColor: '#28a745',\n        padding: 12,\n        marginHorizontal: 16,\n        marginVertical: 8,\n        borderRadius: 4,\n        alignItems: 'center',\n    },\n    directMessageButtonText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontSize: 18,\n    },\n    postedByCurrentUserMessage: {\n        color: '#dc3545',\n        textAlign: 'center',\n        marginBottom: 10,\n        fontSize: 16,\n    },\n    amenitiesContainer: {\n        padding: 16,\n        borderBottomWidth: 1,\n        borderBottomColor: '#eaecef',\n        backgroundColor: '#fff',\n    },\n    amenitiesTitle: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#212529',\n        marginBottom: 8,\n        fontFamily: 'open-sans-bold'\n    },\n    amenitiesList: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'flex-start',\n    },\n    amenityItem: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        backgroundColor: '#007DBC', // This sets the background color to a blue shade\n        borderRadius: 16,\n        padding: 8,\n        marginRight: 8,\n        marginBottom: 8,\n    },\n    amenityLabel: {\n        marginLeft: 8,\n        fontSize: 14,\n        color: '#FFFFFF', // This sets the text color to white\n        fontFamily: 'open-sans-regular'\n    },\n    priceContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    originalPrice: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        textDecorationLine: 'line-through',\n        marginRight: 8,\n    },\n    discountedPrice: {\n        fontSize: 22,\n        fontWeight: 'bold',\n    },\n    bookNowButton: {\n        backgroundColor: '#28a745',\n        padding: 12,\n        borderRadius: 4,\n        alignItems: 'center',\n    },\n    bookNowButtonText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontSize: 18,\n    },\n    flatmateRow: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    flatmatesSection: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#e9ecef', // Changed background color for better visibility\n    },\n    title: {\n        fontSize: 24,\n        marginBottom: 20,\n        fontFamily: 'open-sans-bold'\n    },\n    flatmatesGrid: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between', // To maintain equal spacing between two cards in a row\n    },\n    flatmateCard: {\n        width: '48%', // Slightly less than half to account for any potential margins or paddings\n        marginBottom: 15,\n        padding: 10, // Added some padding\n        backgroundColor: '#fff', // White background for the card\n        borderRadius: 8, // Rounded corners\n        alignItems: 'center', // Center items horizontally\n    },\n    flatmateImage: {\n        width: 50,\n        height: 50,\n        borderRadius: 25,\n        marginBottom: 10, // Margin below the image\n    },\n    flatmateName: {\n        fontSize: 18,\n        fontWeight: '600',\n        fontFamily: 'open-sans-regular',\n        textAlign: 'center', // Center the text\n    },\n    flatmateOccupation: {\n        fontSize: 14,\n        color: 'gray',\n        fontFamily: 'open-sans-light',\n        textAlign: 'center', // Center the text\n    },\n    trustIcon: {\n        marginRight: 5,  // Some space between the icon and text\n        bottom: 2,\n    },\n    scrollViewContent: {\n        paddingBottom: 20, // Add some bottom padding to accommodate for any absolutely positioned elements\n    },\n    seeMoreButtonContainer: {\n        flexDirection: 'row', // Align items in a row\n        alignItems: 'center', // Center items vertically\n        padding: 10,\n        borderRadius: 5,\n        // Add any additional styling as needed\n    },\n    shareIcon: {\n        position: 'absolute',\n        right: 10,\n        top: 10,\n        backgroundColor: 'rgba(0, 0, 0, 0.6)',\n        padding: 8,\n        borderRadius: 25,\n        width: 40,\n        zIndex: 1, // Add this line\n    },\n    soldContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    soldMessage: {\n        fontSize: 24,\n        color: 'white',\n        marginTop: 20,\n        textAlign: 'center',\n        fontFamily: 'open-sans-bold'\n    },\n\n});\n\n\n\nexport default AdDetailsScreen;\n","import React from \"react\";\nimport { View, Text, Image, StyleSheet } from \"react-native\";\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\n\nTimeAgo.addLocale(en)\nconst timeAgo = new TimeAgo('en-US')\n\nconst ReceiverMessage = ({ message }) => {\n\n  const date2 = new Date(message.timestamp.toDate());\n  const numericTimestamp = date2.getTime();\n  const x = timeAgo.format(numericTimestamp, 'mini')\n\n  return (\n    <View style={styles.container}>\n      <Image\n        style={styles.image}\n        source={{\n          uri: message.photoURL ||\n            'https://i.pinimg.com/736x/ff/a0/9a/ffa09aec412db3f54deadf1b3781de2a.jpg',\n        }}\n      />\n      <View style={styles.messageBubble}>\n        <Text style={styles.messageText}>{message.message}</Text>\n        <Text style={styles.timestamp}>{x} ago</Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    margin: 5,\n    alignItems: 'flex-end',\n  },\n  image: {\n    height: 40,\n    width: 40,\n    borderRadius: 20,\n    marginRight: 5,\n    borderColor: 'white',\n    borderWidth: 1,\n  },\n  messageBubble: {\n    backgroundColor: '#f0f0f0', // A soft color\n    borderRadius: 20,\n    padding: 10,\n    maxWidth: '80%',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  messageText: {\n    color: '#333', // Darker text color for contrast\n    fontSize: 16,\n  },\n  timestamp: {\n    color: '#888', // Soft color for the timestamp\n    fontSize: 12,\n    marginTop: 5,\n    alignSelf: 'flex-end',\n  }\n});\n\nexport default ReceiverMessage;\n","import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\n\nTimeAgo.addLocale(en)\nconst timeAgo = new TimeAgo('en-US')\n\nconst SenderMessage = ({ message }) => {\n\n  const date2 = new Date(message?.timestamp?.toDate());\n  const numericTimestamp = date2?.getTime();\n  const x = numericTimestamp ? timeAgo.format(numericTimestamp, 'mini') : ''\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.messageText}>{message.message}</Text>\n      <Text style={styles.timestamp}>{x ? x + ' ago' : 'sending...'}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#4D7EA8', // A calm blue tone\n    borderRadius: 15,\n    padding: 10,\n    marginVertical: 5,\n    marginRight: 10,\n    marginLeft: 'auto',\n    maxWidth: '80%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3,\n  },\n  messageText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    marginBottom: 2,\n  },\n  timestamp: {\n    color: '#D3E3F2', // A lighter shade for timestamp\n    fontSize: 12,\n    alignSelf: 'flex-end',\n  }\n});\n\nexport default SenderMessage;\n","import { Image, StyleSheet, Text, View, TouchableOpacity, Platform } from \"react-native\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Ionicons } from '@expo/vector-icons'; // Make sure to install this library\nimport AnimatedNumbers from 'react-native-animated-numbers';\nimport WebAnimatedNumbers from 'react-animated-numbers';\nconst ChatHeader = ({ userDetails, navigation, coins }) => {\n    const handleBackPress = () => {\n        navigation.goBack();\n    };\n    const AnimatedNumberComponent = Platform.select({\n        web: WebAnimatedNumbers,\n        default: AnimatedNumbers,\n    });\n    return (\n        <SafeAreaView>\n            <View style={styles.chatHeaderContainer} >\n\n                <TouchableOpacity onPress={handleBackPress} style={styles.backButton}>\n                    <Ionicons name=\"arrow-back\" size={24} color=\"#FFFFFF\" />\n                </TouchableOpacity>\n                {userDetails?.image && (<Image source={{ uri: userDetails.image }} style={styles.chatHeaderImage} />)}\n                <Text style={styles.chatHeaderText}>{userDetails.name}</Text>\n                <View style={styles.coinsContainer}>\n                    <Text style={styles.coinsTitle}>Message Left</Text>\n                    <AnimatedNumberComponent\n                        animateToNumber={coins}\n                        fontStyle={styles.coinsValue}\n                        includeComma\n                        frameStyle={{ flexDirection: 'row', alignItems: 'flex-end' }}\n                    />\n                </View>\n            </View>\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    chatHeaderContainer: {\n\n        flexDirection: 'row',\n        alignItems: 'center',\n        padding: 10,\n        backgroundColor: '#006699', // A nice shade of blue\n        borderBottomWidth: 1,\n        borderColor: '#006699', // A slightly darker blue for the border\n    },\n    chatHeaderImage: {\n        width: 40,\n        height: 40,\n        borderRadius: 20,\n        marginRight: 10,\n    },\n    chatHeaderText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#FFFFFF', // White text for better contrast and readability\n    },\n    backButton: {\n        marginRight: 10,\n    },\n    coinsTitle: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        color: '#FFFFFF', // Assuming the title is also white\n        marginRight: 8, // Add some space between the title and the number\n    },\n    coinsValue: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#FFD700', // A gold-like color for the coins value\n    },\n    coinsContainer: {\n        marginLeft: 'auto', // This pushes the coins container to the extreme right\n        flexDirection: 'row',\n        alignItems: 'center',\n        right: 15\n    },\n});\n\nexport default ChatHeader;","import React from 'react'; // Basic React import\nimport { View, Text, TouchableOpacity, StyleSheet, ScrollView } from 'react-native'; // React Native components\n\n\nconst MessageSuggestion = ({ onSelectSuggestion }) => {\n    const suggestions = [\n        \"Hi, How are you ?\",\n        \"Hi, I am looking for this house, is it available?\",\n    ];\n\n    return (\n        <ScrollView\n\n            horizontal={true}\n            contentContainerStyle={styles.messageSuggestionContainer}>\n            {suggestions.map((text, index) => (\n                <TouchableOpacity\n                    key={index}\n                    style={styles.messageSuggestion}\n                    onPress={() => onSelectSuggestion(text)}\n                >\n                    <Text style={styles.messageSuggestionText}>{text}</Text>\n                </TouchableOpacity>\n            ))}\n        </ScrollView>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    // ... other styles\n    messageSuggestionContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        paddingVertical: 10,\n    },\n    messageSuggestion: {\n        backgroundColor: '#FFFFFF', // Blue background\n        borderRadius: 20,\n        paddingVertical: 10,\n        paddingHorizontal: 15,\n        marginHorizontal: 5,\n    },\n    messageSuggestionText: {\n        // color: '#FFFFFF', // White text\n        fontSize: 16,\n    },\n});\n\nexport default MessageSuggestion;","import React from 'react';\nimport { Modal, View, Text, TouchableOpacity, StyleSheet, Platform } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport AnimatedNumbers from 'react-native-animated-numbers';\nimport WebAnimatedNumbers from 'react-animated-numbers';\nimport { Ionicons } from '@expo/vector-icons';\n\nconst CoinModal = ({ isVisible, onTakePremium, coins, onClose }) => {\n    const AnimatedNumberComponent = Platform.select({\n        web: WebAnimatedNumbers,\n        default: AnimatedNumbers,\n    });\n    return (\n        <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={isVisible}\n            onRequestClose={onClose}\n        >\n            <View style={styles.centeredView}>\n                <LinearGradient\n                    colors={['#005AAA', '#dddddd',]}\n                    style={styles.gradient}\n                >\n                    <TouchableOpacity style={styles.closeButton} onPress={onClose}>\n                        <Ionicons name=\"close-circle\" size={30} color=\"white\" />\n                    </TouchableOpacity>\n                    <View style={styles.modalView}>\n\n                        <Text style={styles.modalText}>You have only one coin left!</Text>\n                        <AnimatedNumberComponent\n                            animateToNumber={coins}\n                            fontStyle={styles.animatedNumbers}\n                        />\n                        <TouchableOpacity style={styles.premiumButton} onPress={onTakePremium}>\n                            <Text style={styles.premiumButtonText}>Buy Premium</Text>\n                        </TouchableOpacity>\n                    </View>\n                </LinearGradient>\n            </View>\n        </Modal>\n    );\n};\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    gradient: {\n        width: '80%',\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 5\n    },\n    modalView: {\n        width: '100%',\n        alignItems: \"center\",\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: \"center\",\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: 'white',\n    },\n    animatedNumbers: {\n        fontSize: 50,\n        fontWeight: 'bold',\n        color: '#FFD700',\n    },\n    premiumButton: {\n        marginTop: 15,\n        backgroundColor: '#005AAA',\n        borderRadius: 5,\n        padding: 10,\n        elevation: 2\n    },\n    premiumButtonText: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n    },\n    closeButton: {\n        position: 'absolute',\n        top: 10,\n        right: 10,\n    },\n});\n\nexport default CoinModal;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  KeyboardAvoidingView,\n  Platform,\n  FlatList,\n  Button,\n  Keyboard,\n  TouchableOpacity,\n  Pressable,\n  Modal,\n  StyleSheet,\n  ActivityIndicator,\n  Alert,\n  RefreshControl,\n} from \"react-native\";\nimport { WebView } from 'react-native-webview';\nimport axios from \"axios\"; // Import Axios for making API requests\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\nimport tw from \"tailwind-rn\";\nimport ReceiverMessage from \"../components/ReceiverMessage\";\nimport SenderMessage from \"../components/SenderMessage\";\nimport {\n  addDoc,\n  collection,\n  onSnapshot,\n  orderBy,\n  query,\n  serverTimestamp,\n} from \"@firebase/firestore\";\nimport { analytics, db } from \"../firebase/firebase\";\nimport { useUser } from \"../context/UserContext\";\nimport generateId from \"../utils/generateIds\";\nimport API_BASE_URL from \"../services/config\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport ChatHeader from \"../components/ChatHeader\";\nimport MessageSuggestion from \"../components/MessageSuggestion\";\nimport { logEvent } from \"firebase/analytics\";\nimport CoinModal from \"../components/CoinModal\";\nconst MessageScreen = ({ route, navigation }) => {\n  const flatListRef = useRef();\n  const [userInfo, setUserInfo] = useState({ coins: 2 });\n  const { userInfo: userInfoFromAsync, setUserInfoToStore, fetchUserDetails } = useUser();\n  const { params: { userDetails } } = route;\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [isConversationStarter, setConversationStarter] = useState(undefined);\n  const [combinedUid, setCombinedUid] = useState([]);\n  const [scrollToEnd, setScrollToEnd] = useState(false); // To scroll to the end of the chat\n  const [showModal, setShowModal] = useState(false); // State for the modal\n  const [showOneCointModal, setOneCointModal] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const [webviewUrl, setWebviewUrl] = useState(\n    \"https://subham-routray.mojo.page/odicult-subscription\"\n  );\n  const [isLoading, setIsLoading] = useState(true);\n  const isWeb = Platform.OS === 'web';\n\n  useEffect(() => {\n    fetchUserInitialDetails();\n  }, [db, combinedUid]);\n\n  useEffect(() => {\n    if (userInfo?.coins === 1) {\n      setOneCointModal(true)\n    }\n    if (userInfo?.coins === 0) {\n      setShowModal(true)\n    }\n  }, [userInfo?.coins]);\n\n  useEffect(() => {\n    if (messages && messages.length > 0) {\n      const firstMessage = messages[messages.length - 1]; // Since it's an inverted list, the first message will be the last element in the array.\n      setConversationStarter(firstMessage.userId === userInfo.firebaseId);\n    }\n  }, [messages]);\n\n\n  const fetchUserInitialDetails = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/user/getUserByFirebaseId/${userInfoFromAsync.firebaseId}`);\n      if (response.ok) {\n        const userInfo = await response.json();\n        const combinedUid = generateId(userInfo.firebaseId, userDetails.id);\n        setCombinedUid(combinedUid)\n        setUserInfo(userInfo)\n        setMatchUsers(combinedUid)\n      } else {\n        console.error('Failed to fetch user details');\n        setIsLoading(false); // Set loading to false even if there is an error\n      }\n    } catch (error) {\n      console.error('Error fetching user details:', error);\n      setIsLoading(false); // Set loading to false even if there is an error\n    }\n  };\n\n  const setMatchUsers = (combinedUid) => {\n    const matchDocRef = doc(db, \"matches\", combinedUid);\n    getDoc(matchDocRef)\n      .then((docSnapshot) => {\n        if (!docSnapshot.exists()) {\n          const sanitizedUserInto = {\n            image: userInfo.image || null,\n            email: userInfo.email,\n            phone: userInfo.phoneNumber,\n            id: userInfo.firebaseId,\n            name: userInfo.name,\n          };\n          setDoc(doc(db, \"matches\", combinedUid), {\n            users: {\n              [userInfo.firebaseId]: sanitizedUserInto,\n              [userDetails.id]: userDetails,\n            },\n            usersMatched: [userInfo.firebaseId, userDetails.id],\n            timestamp: serverTimestamp(),\n          });\n\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error checking document existence:\", error);\n      });\n    fetchMessages()\n  }\n\n  const fetchMessages = () => {\n    onSnapshot(\n      query(\n        collection(db, \"matches\", combinedUid, \"messages\"),\n        orderBy(\"timestamp\", \"desc\")\n      ),\n      (snapshot) => {\n        const fetchedMessages = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setMessages(fetchedMessages);\n        setIsLoading(false);\n        // if (scrollToEnd) {\n        //   scrollFlatListToEnd();\n        // }\n      }\n    );\n  }\n\n  const scrollFlatListToEnd = () => {\n    // setScrollToEnd(true);\n    // setTimeout(() => setScrollToEnd(false), 200); // Delay to ensure scrolling to end works\n    flatListRef.current?.scrollToEnd({ animated: true });\n  };\n\n  const handleSendMessage = async () => {\n    if (input === \"\") {\n      return; // Do nothing if the input is empty\n    }\n\n    // If user is the conversation starter and doesn't have coins or subscription, show the modal\n    if (isConversationStarter && userInfo.coins === 0 && userInfo.subscriptionStartDate === \"NA\") {\n      setShowModal(true);\n      return;\n    }\n\n    // Process to send message\n    try {\n      await addDoc(collection(db, \"matches\", combinedUid, \"messages\"), {\n        timestamp: serverTimestamp(),\n        userId: userInfo.firebaseId,\n        name: userInfo.name,\n        photoURL: userInfo.pic || null,\n        message: input,\n      });\n      setInput('')\n      // If the user is the conversation starter, deduct a coin after sending a message\n      if (isConversationStarter) {\n        // Check if the user has enough coins to send the message\n        if (userInfo.coins > 0) {\n          const updatedCoins = Math.max(userInfo.coins - 1, 0);  // Deduct one coin\n          await axios.put(`${API_BASE_URL}/user/updateUserCoins/${userInfo.phoneNumber}`, {\n            coins: userInfo.coins,\n          });\n\n          // Update the local state with the new coins value\n          setUserInfo((prevUserInfo) => ({\n            ...prevUserInfo,\n            coins: updatedCoins,\n          }));\n\n          // Assuming setUserInfoToStore is to update the AsyncStorage or similar storage,\n          // it's important to ensure that it is successful and handle the case where it's not.\n          // For brevity, I'm not including error handling here.\n          setUserInfoToStore({\n            ...userInfo,\n            coins: updatedCoins,\n          });\n        } else {\n          // Handle the case when the user does not have enough coins.\n          Alert.alert(\"You do not have enough coins to send a message.\");\n          return;\n        }\n      }\n\n      fetchMessages();\n      setInput(\"\");\n      scrollFlatListToEnd(); // Scroll to the end after sending a message\n\n    } catch (error) {\n      console.error(\"Error sending message or updating coins:\", error);\n      Alert.alert(\"Message sending failed\");\n    }\n  };\n\n  const handleModalClose = () => {\n    logEvent(analytics, \"purchase banner changed\");\n    fetchUserDetails()\n    setShowModal(false)\n  }\n\n  const handleSelectSuggestion = (text) => {\n    setInput(text);\n  };\n\n  if (isLoading) {\n    return (\n      <LinearGradient colors={['#dddddd', '#005AAA']} style={styles.loaderContainer}>\n        <ActivityIndicator size=\"large\" color=\"white\" />\n      </LinearGradient>\n    );\n  }\n\n\n  // const onRefresh = useCallback(() => {\n  //   setRefreshing(true);\n  //   // fetchUserInitialDetails();\n  //   //fetchMessages();\n  // }, []);\n\n  const handleTakePremium = () => {\n    setOneCointModal(false)\n    setShowModal(true)\n\n  }\n  return (\n    <>\n      <ChatHeader coins={userInfo?.coins} userDetails={userDetails} navigation={navigation} />\n      <LinearGradient colors={['#dddddd', '#005AAA']} style={styles.container}>\n        <Pressable onPress={Keyboard.dismiss}>\n          <FlatList\n            ref={flatListRef}\n            data={messages}\n            inverted={true}\n            style={styles.flatList}\n            keyExtractor={(item) => item.id}\n            renderItem={({ item: message }) =>\n              message.userId === userInfo.firebaseId ? (\n                <SenderMessage key={message.id} message={message} />\n              ) : (\n                <ReceiverMessage key={message.id} message={message} />\n              )\n            }\n            onContentSizeChange={scrollFlatListToEnd}\n          // refreshControl={\n          //   <RefreshControl\n          //     refreshing={refreshing}\n          //     onRefresh={onRefresh}\n          //     tintColor=\"white\"\n          //   />\n          // }\n          />\n        </Pressable>\n      </LinearGradient>\n      <LinearGradient colors={['#005AAA', '#dddddd',]} style={styles.inputSection}>\n        <KeyboardAvoidingView\n          behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n          style={styles.keyboardAvoidingView}\n          keyboardVerticalOffset={10}\n        >\n          {\n            messages.length === 0 && (\n              <View style={styles.suggestionsContainer}>\n                <MessageSuggestion onSelectSuggestion={handleSelectSuggestion} />\n              </View>\n            )\n          }\n          <View style={[styles.messageInputContainer, isWeb && styles.messageInputContainerWeb]}>\n            <TextInput\n              multiline={true}\n              style={styles.textInput}\n              placeholder=\"Send a message\"\n              onChangeText={(value) => {\n                setInput(value)\n                logEvent(analytics, \"message changed\", value);\n              }}\n              value={input}\n            />\n            <TouchableOpacity onPress={handleSendMessage} style={styles.sendButton}>\n              <Text style={styles.sendButtonText}>Send</Text>\n            </TouchableOpacity>\n          </View>\n        </KeyboardAvoidingView>\n      </LinearGradient>\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={showModal}\n        onRequestClose={handleModalClose}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>Subscribe Now</Text>\n              <TouchableOpacity onPress={handleModalClose}>\n                <Text style={styles.modalCloseText}>Close</Text>\n              </TouchableOpacity>\n            </View>\n            {Platform.OS !== 'web' ?\n              <WebView source={{ uri: webviewUrl }} style={styles.webView} /> :\n              <iframe src={webviewUrl} height={'100%'} width={'100%'} />}\n          </View>\n        </View>\n      </Modal>\n      <CoinModal\n        coins={userInfo?.coins}\n        onTakePremium={handleTakePremium}\n        isVisible={showOneCointModal}\n        onClose={() => setOneCointModal(false)}\n\n      />\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  keyboardAvoidingView: {\n    flex: 1,\n  },\n  messageInputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderTopWidth: 1,\n    borderColor: '#E2E8F0',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n  },\n  textInput: {\n    flex: 1,\n    minHeight: 40,\n    padding: 10,\n    borderRadius: 20,\n    backgroundColor: '#FFFFFF',\n    fontSize: 16,\n  },\n  sendButton: {\n    marginLeft: 10,\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    backgroundColor: '#63B3ED',\n    borderRadius: 20,\n  },\n  sendButtonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    width: '80%',\n    height: '80%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    overflow: 'hidden',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderColor: '#E2E8F0',\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  modalCloseText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#3182CE',\n  },\n  webView: {\n    flex: 1,\n  },\n  messageInputContainerWeb: {\n    position: 'fixed', // Fix position to bottom on web\n    bottom: 0,\n    left: 0,\n    right: 0,\n    borderTopWidth: 1,\n    borderColor: '#E2E8F0',\n    backgroundColor: 'white', // or any desired color\n  },\n  suggestionsContainer: {\n    position: 'fixed',\n    bottom: 80, // You should adjust this value based on the height of messageInputContainer + some offset\n    width: '100%',\n    zIndex: 2,  // Ensure the suggestions are above the FlatList\n  },\n  loaderContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  inputSection: {\n    position: 'absolute', // Input section will be positioned absolutely\n    bottom: 0, // Sticks to the bottom\n    width: '100%', // Full width of the screen\n    padding: 10, // Optional padding\n  },\n\n  flatList: {\n    // Removed paddingLeft and added flex: 1\n    flex: 1, // Takes all available space except for the input section\n  },\n});\n\nexport default MessageScreen;","// src/navigation/AuthStack.js\n\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeTabNavigator from '../screens/HomeTabNavigator';\nimport PostAdScreen from '../screens/PostAd';\nimport Default from '../screens/Default';\nimport UserAds from '../screens/UserAds';\nimport AdDetailsScreen from '../screens/AdDetails';\nimport Message from '../screens/Message';\nimport Chat from '../screens/Chat';\nimport ChatRow from '../components/ChatRow';\nimport CustomHeader from '../components/CustomHeader';\n\nconst Stack = createStackNavigator();\n\nconst AppStack = () => {\n    return (\n        <Stack.Navigator\n            screenOptions={{\n                headerShown: false\n            }}\n            initialRouteName='HomeTabNavigator'\n        >\n            <Stack.Screen name=\"HomeTabNavigator\" component={HomeTabNavigator} />\n            <Stack.Screen name=\"PostAd\" component={PostAdScreen} />\n            <Stack.Screen name=\"UserAds\" component={UserAds} />\n            <Stack.Screen name=\"SingleScreenAd\" component={AdDetailsScreen} />\n            <Stack.Screen name=\"Chat\" component={Chat} />\n            <Stack.Screen name=\"Location\" component={CustomHeader} />\n            <Stack.Screen name=\"Message\" component={Message} />\n            <Stack.Screen name=\"MessagWithData\" component={Message} />\n        </Stack.Navigator>\n    );\n};\n\nexport default AppStack;\n","import React from 'react';\nimport { View, Text, TouchableOpacity } from 'react-native';\nimport Modal from 'react-native-modal';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nconst UpdateAppModal = ({ isVisible, onAppUpdate }) => {\n    return (\n        <Modal isVisible={isVisible} backdropColor=\"rgba(0, 0, 0, 0.5)\" backdropOpacity={1}>\n            <LinearGradient\n                colors={['#007DBC', '#005AAA']}\n                style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}\n            >\n                <View style={{ backgroundColor: 'white', borderRadius: 10, padding: 20 }}>\n                    <Text style={{ color: '#007DBC', fontSize: 18, marginBottom: 20 }}>Please update the app now.</Text>\n                    <TouchableOpacity\n                        style={{ backgroundColor: '#007DBC', padding: 10, borderRadius: 5 }}\n                        onPress={onAppUpdate}\n                    >\n                        <Text style={{ color: 'white', textAlign: 'center', fontSize: 16 }}>Click Here to Update</Text>\n                    </TouchableOpacity>\n                </View>\n            </LinearGradient>\n        </Modal>\n    );\n};\n\nexport default UpdateAppModal;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AuthStack from './navigation/AuthStack';\nimport AppStack from './navigation/AppStack';\nimport { UserProvider, useUser } from './context/UserContext';\nimport Toast from 'react-native-toast-message';\nimport { AuthProvider } from './hooks/useAuth';\nimport UpdateAppModal from './components/UpdateAppModal'; // Import the modal component\nimport API_BASE_URL, { DOMAIN_URL } from './services/config';\nimport { Linking, Platform } from 'react-native';\n\nimport * as Font from 'expo-font';\n\nconst App = () => {\n  const { userToken } = useUser();\n  const [showUpdateModal, setShowUpdateModal] = useState(false); // State for modal visibility\n  const [action, setAction] = useState('');\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  useEffect(() => {\n    Font.loadAsync({\n      'open-sans-regular': require('./assets/fonts/OpenSans-Regular.ttf'),\n      'open-sans-light': require('./assets/fonts/OpenSans-Light.ttf'),\n      'open-sans-bold': require('./assets/fonts/OpenSans-Bold.ttf'),\n      'argon': require('./assets/fonts/argon.ttf'),\n    });\n    setFontsLoaded(true)\n  }, []);\n\n  useEffect(() => {\n    const fetchAppUpdateStatus = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/user/getAppUpdateStatus`); // Replace with your API endpoint\n        const { blockApp, action } = response.data;\n        if (blockApp) {\n          setShowUpdateModal(true);\n          setAction(action)\n        }\n      } catch (error) {\n        console.error('Error fetching app update status:', error);\n      }\n    };\n    if (Platform.OS !== 'web') {\n      fetchAppUpdateStatus();\n    }\n  }, []);\n\n  const linking = {\n    prefixes: [DOMAIN_URL, 'yourapp://'],\n    config: {\n      screens: {\n        HomeTabNavigator: 'ads/:adIdm',\n      },\n    },\n  };\n\n  const handleAppUpdate = () => {\n    Linking.canOpenURL(action)\n      .then((supported) => {\n        if (supported) {\n          Linking.openURL(action);\n        } else {\n          console.error('Cannot open Play Store link');\n        }\n      })\n      .catch((error) => {\n        console.error('Error opening Play Store link:', error);\n      });\n  };\n\n  return (\n    <>\n\n      <AuthProvider>\n\n        <NavigationContainer linking={linking}>\n          <Toast />\n          {userToken ? <AppStack /> : <AuthStack />}\n        </NavigationContainer>\n      </AuthProvider>\n      <UpdateAppModal\n        isVisible={showUpdateModal}\n        onClose={() => setShowUpdateModal(false)}\n        onAppUpdate={handleAppUpdate}\n      />\n    </>\n  );\n};\n\nexport default () => {\n  return (\n    <UserProvider>\n      <App />\n    </UserProvider>\n  );\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [959], () => (__webpack_require__(5530)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","analytics","getStorage","getAnalytics","AuthContext","createContext","AuthProvider","_ref","children","setUserInfoToStore","useUser","_useState","useState","_useState2","_slicedToArray","user","_useState3","_useState4","loadingLogin","setLoadingLogin","useEffect","unsubscribe","onAuthStateChanged","_ref2","_asyncToGenerator","authUser","_x","apply","arguments","signUpWithEmailPassword","_ref3","email","password","createUserWithEmailAndPassword","then","userCredential","uid","firebaseId","catch","error","console","log","_x2","_x3","logOut","_ref4","signOut","_jsx","Provider","value","signInWithEmailPassword","signInWithEmailAndPassword","LinearGradient","colors","style","flex","justifyContent","alignItems","height","width","ActivityIndicator","size","color","AuthOpen","useContext","DOMAIN_URL","UserContext","UserProvider","userToken","setUserToken","userDetails","setUserDetails","_useState5","_useState6","userInfo","setUserInfo","loadUserToken","storedToken","AsyncStorage","getItem","fetchUserDetails","response","fetch","API_BASE_URL","toString","ok","userData","json","gender","image","name","phoneNumber","_id","tenantType","rentPosts","coins","subscriptionStartDate","location","phone","id","statusText","login","token","setItem","logout","_ref5","removeUserInfoFromStore","removeItem","_ref6","_ref8","_ref7","rentPost","_ref7$subscriptionSta","_ref7$location","locationMarked","existingUserInfo","JSON","parse","length","_objectSpread","stringify","userId","TextAnimator","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","animate","toValue","undefined","animations","state","textArr","map","_","i","Animated","timing","animatedValues","duration","useNativeDriver","stagger","reverse","start","setTimeout","onFinish","content","trim","split","forEach","Value","_createClass","key","this","prevProps","_this2","setState","_this3","View","styles","textWrapper","word","index","_jsxs","Text","textStyle","opacity","transform","translateY","multiply","React","StyleSheet","create","flexDirection","flexWrap","_Dimensions$get","Dimensions","get","Authentication","_route$params","route","navigation","adId","params","adIdm","_AuthOpen","formattedValue","setFormattedValue","isUserExists","setIsUserExists","screen","setScreen","_useState7","_useState8","setPhoneNumber","_useState9","_useState10","otp","setOtp","_useState11","_useState12","assignedOtp","setAssignedOtp","_useState13","_useState14","isLoading","setIsLoading","_useState15","_useState16","isTextInputFocused","setIsTextInputFocused","_useState17","_useState18","currentTextIndex","setCurrentTextIndex","animatedTexts","_useClearByFocusCell","useClearByFocusCell","setValue","_useClearByFocusCell2","getCellOnLayoutHandler","navigate","handleAnimationComplete","generateOtp","Math","floor","random","fetchUserExistsStatus","checkPhoneResponse","checkPhoneData","exists","sendOTP","postData","axios","post","headers","data","status","alert","_error$response","message","verifyOTP","handleTextInputFocus","handleTextInputBlur","gradient","x","y","end","lottie","Platform","OS","LottieView","source","require","autoPlay","loop","KeyboardAvoidingView","behavior","keyboardVerticalOffset","ScrollView","contentContainerStyle","container","keyboardShouldPersistTaps","header","subheader","PhoneNumberInput","defaultCode","onChangeText","text","logEvent","onChangeFormattedText","placeholder","withDarkTheme","withShadow","onFocus","onBlur","TouchableOpacity","button","onPress","buttonText","iconContainer","Ionicons","CodeField","caretHidden","cellCount","rootStyle","codeFieldRoot","keyboardType","textContentType","renderCell","symbol","isFocused","onLayout","cell","focusCell","cellText","Cursor","buttonContainer","_Fragment","resendText","renderScreen","fontSize","fontWeight","marginBottom","fontFamily","top","backgroundColor","paddingVertical","paddingHorizontal","borderRadius","resendButton","marginTop","backButton","countryPickerContainer","borderColor","borderWidth","countryPicker","resizeMode","marginLeft","marginRight","lineHeight","textAlign","position","left","zIndex","OnboardingScreen","useNavigation","handleDone","Onboarding","onDone","onSkip","DoneButtonComponent","Object","assign","_objectDestructuringEmpty","doneButton","containerStyles","pages","Lottie","title","subtitle","padding","amenitiesMapping","label","icon","flexContainer","loaderContainer","footer","borderTopWidth","bottom","right","borderBottomWidth","borderBottomColor","villaImage","villaName","marginVertical","marginHorizontal","offerContainer","offerText","description","hostImage","margin","hostName","price","directMessageButton","directMessageButtonText","postedByCurrentUserMessage","amenitiesContainer","amenitiesTitle","amenitiesList","amenityItem","amenityLabel","priceContainer","originalPrice","textDecorationLine","discountedPrice","bookNowButton","bookNowButtonText","flatmateRow","flatmatesSection","flatmatesGrid","flatmateCard","flatmateImage","flatmateName","flatmateOccupation","trustIcon","scrollViewContent","paddingBottom","seeMoreButtonContainer","seeMoreButtonText","shareIcon","soldContainer","soldMessage","ad","setAd","setFirebaseId","flatmates","flatmatesData","setFlatmatesData","showDirectMessageButton","setShowDirectMessageButton","isPostedByCurrentUser","isAdAvailable","setIsAdAvailable","fetchPostDetails","onShare","shareMessage","adTitle","navigator","share","Clipboard","setString","Alert","Share","userDoc","getDoc","doc","handleBackButton","SafeAreaView","Image","uri","images","FontAwesome","adDescription","amenity","flatmate","occupation","MaterialIcons","BannerWidth","bannerImage","Carousel","autoplay","autoplayTimeout","pageSize","renderPage","_worklet_4122753321172_init_data","code","_worklet_10469424627174_init_data","AnimatedCard","item","scale","useSharedValue","lastPress","useRef","Date","now","animatedStyles","useAnimatedStyle","_f","_closure","__initData","__workletHash","animatedImageStyles","perspective","rotateY","card","activeOpacity","current","onPressIn","withSpring","onPressOut","delayPressIn","touchable","adImage","adDetails","numberOfLines","ellipsizeMode","adInfo","adPrice","adBedrooms","bedrooms","adList","overflow","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","backfaceVisibility","borderTopLeftRadius","borderTopRightRadius","adLocation","filterButtonsContainer","filterButton","filterButtonActive","filterText","filterTextActive","_useUser","ads","setAds","banners","setBanners","refreshing","setRefreshing","bannersLoading","setBannersLoading","genderFilter","setGenderFilter","filteredAds","setFilteredAds","fetchAds","fetchBanners","handleGenderFilterChange","newFilter","bannersQuery","query","collection","fetchedBanners","getDocs","docs","link","handleAdPress","onRefresh","useCallback","filtered","filter","isMaleOnly","filterAds","SkeletonLoader","boneColor","highlightColor","BannerCarousel","FlatList","keyExtractor","renderItem","numColumns","refreshControl","RefreshControl","tintColor","Stack","createStackNavigator","showOnboarding","setShowOnboarding","checkIfAlreadyOnboarded","onboarded","Navigator","initialRouteName","Screen","options","headerShown","component","AdDetailsWithoutAuthentication","HomeWithoutAuthentication","screenOptions","fab","adIds","domains","tenantTypeContainer","actionButton","loader","profileImage","flexGrow","modalContainer","linearGradient","modalContent","modalTitle","input","closeButton","chooseImageButton","chooseImageText","genderContainer","radioButtons","radioButton","radioButtonSelected","radioButtonText","radioButtonTextSelected","radioButtonsTenantType","radioButtonTenantType","isVisible","onDismiss","setLocationModal","_useUser2","setName","setEmail","setUserId","setGender","setTenantType","setImage","setLoading","setSuggestions","setFieldsDisabled","_useState19","_useState20","userLocation","setUserLocation","handleGenderSelect","selectedGender","requestLocationPermission","Location","requestForegroundPermissionsAsync","getCurrentPositionAsync","updateProfileToFirebase","pic","isEdit","newDocRef","handler","updateDoc","setDoc","timestamp","serverTimestamp","updateAuthProfile","currentUser","displayName","photoURL","handleTenantTypeSelect","selectedType","handleUpdate","ImagePicker","requestMediaLibraryPermissionsAsync","granted","pickerResult","launchImageLibraryAsync","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","selectedImageUri","assets","file","blob","res","type","RNS3","put","keyPrefix","bucket","region","accessKey","secretKey","successActionStatus","Error","body","postResponse","apiEndpoint","method","Toast","show","text1","text2","updateButtonStyle","Modal","visible","transparent","animationType","MaterialCommunityIcons","TextInput","placeholderTextColor","filteredDomains","domain","includes","maleIcon","femaleIcon","student","professionals","family","users","userLoggedIn","newUsers","_Object$entries$flat","entries","flat","_Object$entries$flat2","id1","id2","cardShadow","matchDetails","lastMessage","setLastmessage","matchedUserInfo","setMatchedUserInfo","getMatchedUserInfo","onSnapshot","generateId","orderBy","snapshot","_snapshot$docs$","_snapshot$docs$$data","tw","photoUrl","substring","horizontal","matches","setMatches","loading","where","ChatRow","ChatList","DEFAULT_LOCATION","leftContainer","selectedLocationContainer","downIcon","rightContainer","iconButton","selectedLocationText","modalView","modalGradient","modalHeader","modalHeaderText","searchContainer","searchInput","clearIcon","locationList","locationItem","locationText","tagsContainer","tag","tagText","onSettingPress","_ref$showBack","showBack","_ref$locationModal","locationModal","useToken","selectedLocation","setSelectedLocation","allLocations","setLocations","modalVisible","setModalVisible","searchQuery","setSearchQuery","suggestedLocations","setSuggestedLocations","topLocations","setTopLocations","fetchLocations","_response$data$locati","locations","fetchedLocations","slice","selectLocation","renderTag","edges","goBack","Icon","onRequestClose","filteredLocations","toLowerCase","showsHorizontalScrollIndicator","baseURL","topBar","cartItemList","cartItemContainer","cartItemImage","cartItemInfo","cartItemName","cartItemPrice","removeFromCartButton","alignSelf","removeFromCartButtonText","loadingContainer","emptyCartText","cartSummaryContainer","borderTopColor","cartSummaryText","continueButton","continueButtonText","fixedCartSummaryContainer","cartItems","setCartItems","fetchCartItems","calculateTotalPrice","reduce","total","productId","quantity","result","api","handleRemoveFromCart","itemId","prevCartItems","delete","imageUrl","disabled","totalPrice","formContainer","addressInput","summaryContainer","summaryText","paymentText","cancelButton","completeButton","completeButtonText","fixedContentContainer","bottomInfoContainer","address","setAddress","pincode","setPincode","setPhone","handleCompleteOrder","orderData","err","KeyboardAwareScrollView","autoCapitalize","multiline","orderList","orderItemContainer","orderItemText","emptyText","showDetailsButton","showDetailsButtonText","modalBackground","cartItemModalContent","cartItemModalText","closeButtonText","orders","setOrders","fetchOrders","selectedCartItem","setSelectedCartItem","isCartItemModalVisible","setIsCartItemModalVisible","closeCartItemModal","renderCartItem","cartItem","productContainer","productContent","productImage","productInfo","productName","productDescription","productPrice","quantityContainer","quantityButton","quantityText","addToCartButton","addToCartButtonText","addedToCartButton","product","isItemAddedToCart","setIsItemAddedToCart","setQuantity","handleAddToCart","requestBody","prevQuantity","max","cartCountContainer","cartCountText","cartLabelText","_ref$cartItemsCount","cartItemsCount","clearSearchButton","topRightBar","marginEnd","topRightBarCart","productList","quantityInput","popoverBackground","popoverContent","popoverOption","popoverOptionText","cartCountCard","cartCountLabel","noDataContainer","noDataText","products","setProducts","productLoading","setProductLoading","quantities","setQuantities","setCartItemsCount","fetchProducts","fetchCartDetails","clearSearchString","queryParams","prevLoading","_defineProperty","newItem","concat","_toConsumableArray","prevQuantities","_x4","cartCount","calculateTotalCartCount","onSubmitEditing","showsVerticalScrollIndicator","CartCountCard","ProductCatalogScreen","Cart","CheckoutProcess","OrderManagement","SingleProductViewScreen","Tab","createBottomTabNavigator","tabBar","addButton","addButtonText","_React$useState","_React$useState2","isModalVisible","_React$useState3","_React$useState4","isUpdateModalVisible","setUpdateModalVisible","_React$useState5","_React$useState6","_React$useState7","_React$useState8","userProfileData","setUserProfileData","handleMyAds","toggleModal","handleUpdateProfile","handleLogout","renderCustomHeader","CustomHeader","onBackPress","tabBarOptions","activeTintColor","inactiveTintColor","showLabel","Home","tabBarIcon","focused","StoreStackNavigator","Chat","Pressable","UpdateProfileModal","onUpdateProfile","updatedData","PostAdScreen","_route$params$ad","_route$params2","_route$params2$ad","_route$params3","_route$params3$ad","_route$params4","_route$params4$ad","_route$params5","_route$params5$ad","_route$params6","_route$params6$ad","_route$params7","_route$params7$ad","_route$params8","_route$params8$ad","_route$params9","_route$params9$ad","_route$params10","_route$params10$ad","_route$params11","_route$params11$ad","_route$params12","_route$params12$ad","setImages","setLocation","setAdTitle","setAdDescription","setPrice","maxResidents","setMaxResidents","preference","setPreference","setIsMaleOnly","_useState21","isFurnished","_useState22","setIsFurnished","_useState23","hasAttachedBathroom","_useState24","setHasAttachedBathroom","_useState25","isBachelorsAllowed","_useState26","setIsBachelorsAllowed","_useState27","_useState28","handleImageUpload","multiple","newImages","uploadImagesToS3","s3Images","imageUri","s3ImageUrl","push","handleSubmit","_route$params13","imageContainer","heading","imageUploadButton","uploadButtonText","fieldContainer","RNPickerSelect","onValueChange","items","pickerSelectStyles","multilineInput","stepperContainer","stepperButton","stepperButtonText","stepperValue","Switch","trackColor","false","true","submitButton","submitButtonText","minHeight","textAlignVertical","inputIOS","paddingRight","inputAndroid","_Component","Default","Component","onEdit","onDelete","onClaim","headerText","deleteConfirmationContainer","deleteConfirmationText","deleteConfirmationButtons","confirmButton","emptyListContainer","emptyListText","confirmButtonText","cancelButtonText","userAds","setUserAds","selectedAd","setSelectedAd","isDeleteConfirmationVisible","setDeleteConfirmationVisible","fetchUserAds","handleEdit","handleDelete","prevAds","handleClaim","AdCard","ListEmptyComponent","TimeAgo","addLocale","en","timeAgo","messageBubble","maxWidth","messageText","numericTimestamp","toDate","getTime","format","_message$timestamp","date2","chatHeaderContainer","chatHeaderImage","chatHeaderText","coinsTitle","coinsValue","coinsContainer","AnimatedNumberComponent","select","web","WebAnimatedNumbers","default","AnimatedNumbers","animateToNumber","fontStyle","includeComma","frameStyle","messageSuggestionContainer","messageSuggestion","messageSuggestionText","onSelectSuggestion","centeredView","modalText","animatedNumbers","premiumButton","premiumButtonText","onTakePremium","onClose","keyboardAvoidingView","messageInputContainer","textInput","sendButton","sendButtonText","modalCloseText","webView","messageInputContainerWeb","suggestionsContainer","inputSection","flatList","flatListRef","userInfoFromAsync","setInput","messages","setMessages","isConversationStarter","setConversationStarter","combinedUid","setCombinedUid","showModal","setShowModal","showOneCointModal","setOneCointModal","webviewUrl","isWeb","fetchUserInitialDetails","firstMessage","setMatchUsers","matchDocRef","docSnapshot","_users","sanitizedUserInto","usersMatched","fetchMessages","fetchedMessages","scrollFlatListToEnd","_flatListRef$current","scrollToEnd","animated","handleSendMessage","addDoc","updatedCoins","prevUserInfo","handleModalClose","ChatHeader","Keyboard","dismiss","ref","inverted","SenderMessage","ReceiverMessage","onContentSizeChange","MessageSuggestion","WebView","src","CoinModal","HomeTabNavigator","UserAds","AdDetailsScreen","Message","onAppUpdate","backdropColor","backdropOpacity","App","showUpdateModal","setShowUpdateModal","action","setAction","setFontsLoaded","Font","loadAsync","fetchAppUpdateStatus","_response$data","blockApp","linking","prefixes","config","screens","NavigationContainer","AppStack","AuthStack","UpdateAppModal","Linking","canOpenURL","supported","openURL","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","ns","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}