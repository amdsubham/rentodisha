{"version":3,"file":"static/js/main.679a60fa.js","mappings":"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","sources":["firebase/firebase.js","hooks/useAuth.js","services/config.js","context/UserContext.js","components/TextAnimator.js","screens/Authentication.js","utils/asyncStorage.js","screens/OnboardingScreen.js","screens/AdDetailsWithoutAuthentication.js","components/BannerCarousel.js","screens/HomeWithoutAuthentication.js","navigation/AuthStack.js","screens/Home.js","screens/PostAd.js","components/UpdateProfileModal.js","utils/getMatchedUserInfo.js","utils/generateIds.js","components/ChatRow.js","components/ChatList.js","screens/Chat.js","components/CustomHeader.js","screens/HomeTabNavigator.js","screens/Default.js","components/AdCard.js","screens/UserAds.js","screens/AdDetails.js","components/ReceiverMessage.js","components/SenderMessage.js","components/ChatHeader.js","components/MessageSuggestion.js","components/CoinModal.js","screens/Message.js","navigation/AppStack.js","components/UpdateAppModal.js","App.js","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from 'firebase/auth'\nimport { getFirestore } from 'firebase/firestore'\nimport { getStorage } from \"firebase/storage\";\nimport { initializeAuth, getReactNativePersistence } from 'firebase/auth';\nimport ReactNativeAsyncStorage from '@react-native-async-storage/async-storage';\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyApunLilBsWG8YvyLL6hNdpWW0oB_JGNl8\",\n    authDomain: \"odicult-c051c.firebaseapp.com\",\n    databaseURL: \"https://odicult-c051c-default-rtdb.firebaseio.com\",\n    projectId: \"odicult-c051c\",\n    storageBucket: \"odicult-c051c.appspot.com\",\n    messagingSenderId: \"264373040060\",\n    appId: \"1:264373040060:web:8d9c8e752ae975257331b9\",\n    measurementId: \"G-YJTXX7D32M\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app)\n\n// initializeAuth(app, {\n//     persistence: getReactNativePersistence(ReactNativeAsyncStorage)\n// });\nconst db = getFirestore()\nconst storage = getStorage();\nconst analytics = getAnalytics(app);\nexport { analytics, app, auth, db, storage }\n","\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from 'firebase/auth';\nimport { ActivityIndicator } from 'react-native';\nimport { auth, db } from '../firebase/firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useUser } from '../context/UserContext';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nconst AuthContext = createContext({\n})\n\nconst AuthProvider = ({ children }) => {\n  const { setUserInfoToStore } = useUser();\n  const [user, setUser] = useState(null);\n  const [loadingLogin, setLoadingLogin] = useState(true);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (authUser) => {\n      if (authUser) {\n        try {\n        } catch (error) {\n          console.error('Error fetching user details:', error);\n        }\n        setLoadingLogin(false);\n      } else {\n        // setUser(null);\n        setLoadingLogin(false);\n      }\n    });\n\n    return () => {\n      // Unsubscribe from the auth state listener when the component unmounts\n      unsubscribe();\n    };\n  }, []);\n\n  const signInWithEmailPassword = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        const uid = userCredential.user.uid;\n        setUserInfoToStore({ firebaseId: uid })\n\n      })\n      .catch((error) => {\n        console.log(\"Firebase SignIn Error\", error)\n      });\n  };\n\n  const signUpWithEmailPassword = async (email, password) => {\n    await createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        const uid = userCredential.user.uid;\n        setUserInfoToStore({ firebaseId: uid })\n      })\n      .catch((error) => {\n        console.log(\"Firebase SignUp Error\", error)\n      });\n  };\n\n  const logOut = async () => {\n    setLoadingLogin(true);\n    await signOut(auth);\n    setLoadingLogin(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        signInWithEmailPassword,\n        signUpWithEmailPassword,\n        loadingLogin,\n        logOut,\n      }}\n    >\n      {loadingLogin ?\n        <LinearGradient colors={['#007DBC', '#005AAA']}\n          style={{\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: \"100%\",\n            width: \"100%\"\n          }}>\n          <ActivityIndicator size=\"large\" color=\"white\" />\n        </LinearGradient>\n        : children}\n    </AuthContext.Provider>\n  );\n};\nconst AuthOpen = () => {\n  return useContext(AuthContext);\n};\n\nexport { AuthOpen, AuthProvider };","const API_BASE_URL = \"https://odicult.fruitnasta.com/api\";\nexport const BASE_URL = \"https://odicult.fruitnasta.com\";\nexport const DOMAIN_URL = \"https://rentodisha.com\";\nexport default API_BASE_URL;\n","// UserContext.js\n\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthOpen } from '../hooks/useAuth';\nimport API_BASE_URL from '../services/config';\n\nconst UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n    const [userToken, setUserToken] = useState(null);\n    const [userDetails, setUserDetails] = useState(null);\n    const [userInfo, setUserInfo] = useState(null);\n    useEffect(() => {\n        const loadUserToken = async () => {\n            try {\n                const storedToken = await AsyncStorage.getItem('userToken');\n                if (storedToken) {\n                    setUserToken(storedToken);\n\n                }\n            } catch (error) {\n                console.error('Error loading user token:', error);\n            }\n        };\n        loadUserToken();\n    }, []);\n\n    const fetchUserDetails = async () => {\n        const response = await fetch(`${API_BASE_URL}/user/getUserByPhoneNumber/${userToken.toString()}`);\n        if (response.ok) {\n            const userData = await response.json();\n            const { email, gender, image, name, phoneNumber, _id, tenantType, rentPosts, coins, subscriptionStartDate, location } = userData\n            setUserDetails(userData);\n            setUserInfoToStore({ email, gender, image, name, phone: phoneNumber, id: _id, tenantType, rentPosts, coins, subscriptionStartDate, location })\n        } else {\n            console.error('Error fetching user details:', response.statusText);\n        }\n    }\n    const login = async (token) => {\n        setUserToken(token);\n        try {\n            // Store the user token in async storage\n            await AsyncStorage.setItem('userToken', token);\n        } catch (error) {\n            console.error('Error storing user token:', error);\n        }\n    };\n\n    const logout = async () => {\n        setUserToken(null);\n        removeUserInfoFromStore()\n        try {\n            // Remove the user token from async storage\n            await AsyncStorage.removeItem('userToken');\n        } catch (error) {\n            console.error('Error removing user token:', error);\n        }\n    };\n\n\n    const removeUserInfoFromStore = async () => {\n        try {\n            // Remove the user info from async storage\n            await AsyncStorage.removeItem('userInfo');\n            // You can also reset the user info state if needed\n            setUserInfo({});\n        } catch (error) {\n            console.error('Error removing user info:', error);\n        }\n    };\n\n    const setUserInfoToStore = async ({\n        name,\n        id,\n        firebaseId,\n        phone,\n        gender,\n        rentPost,\n        email,\n        image,\n        tenantType,\n        coins,\n        subscriptionStartDate = 'NA',\n        location = {},\n        locationMarked,\n    }) => {\n        try {\n            // Get the existing user info from async storage\n            const existingUserInfo = await AsyncStorage.getItem('userInfo');\n            let userInfo = existingUserInfo ? JSON.parse(existingUserInfo) : {};\n\n            // Check if firebaseId exists in userInfo\n            if (!userInfo.firebaseId || !userInfo.firebaseId.length) {\n                userInfo = {\n                    ...userInfo,\n                    firebaseId,\n                };\n            }\n\n            // Update the other user info fields\n            userInfo = {\n                ...userInfo,\n                name,\n                id,\n                phone,\n                gender,\n                rentPost,\n                email,\n                image,\n                tenantType,\n                coins,\n                subscriptionStartDate,\n                location,\n                locationMarked\n            };\n\n            await AsyncStorage.setItem('userInfo', JSON.stringify(userInfo));\n            setUserInfo(userInfo);\n        } catch (error) {\n            console.error('Error storing/updating user info:', error);\n        }\n    };\n\n    return (\n        <UserContext.Provider value={{\n            userToken,\n            login,\n            logout,\n            userDetails,\n            fetchUserDetails,\n            setUserInfoToStore,\n            userInfo,\n        }}>\n            {children}\n        </UserContext.Provider>\n    );\n};\n\nexport const useUser = () => {\n    return useContext(UserContext);\n};\n","import * as React from 'react';\nimport { View, StyleSheet, Animated } from 'react-native';\n\nexport default class TextAnimator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textArr: props.content.trim().split(' '),\n            animatedValues: [],\n        };\n        this.state.textArr.forEach((_, i) => {\n            this.state.animatedValues[i] = new Animated.Value(0);\n        });\n    }\n\n    componentDidMount() {\n        this.animate();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.content !== this.props.content) {\n            this.setState({\n                textArr: this.props.content.trim().split(' '),\n                animatedValues: this.props.content.trim().split(' ').map(() => new Animated.Value(0)),\n            }, () => {\n                this.animate();\n            });\n        }\n    }\n\n    animate = (toValue = 1) => {\n        const animations = this.state.textArr.map((_, i) => {\n            return Animated.timing(this.state.animatedValues[i], {\n                toValue,\n                duration: this.props.duration,\n                useNativeDriver: true\n            });\n        });\n\n        Animated.stagger(\n            this.props.duration / 5,\n            toValue === 0 ? animations.reverse() : animations\n        ).start(() => {\n            setTimeout(() => this.animate(toValue === 0 ? 1 : 0), 1000);\n            if (this.props.onFinish) {\n                this.props.onFinish();\n            }\n        });\n    };\n\n    render() {\n        return (\n            <View style={[this.props.style, styles.textWrapper]}>\n                {this.state.textArr.map((word, index) => {\n                    return (\n                        <Animated.Text\n                            key={`${word}-${index}`}\n                            style={[\n                                this.props.textStyle,\n                                {\n                                    opacity: this.state.animatedValues[index],\n                                    transform: [\n                                        {\n                                            translateY: Animated.multiply(\n                                                this.state.animatedValues[index],\n                                                new Animated.Value(-5)\n                                            )\n                                        }\n                                    ],\n                                },\n                            ]}\n                        >\n                            {word}\n                            {`${index < this.state.textArr.length - 1 ? ' ' : ''}`}\n                        </Animated.Text>\n                    );\n                })}\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    textWrapper: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    }\n});\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {\n    StyleSheet,\n    View,\n    Text,\n    TouchableOpacity,\n    ActivityIndicator,\n    ScrollView,\n    Dimensions,\n    KeyboardAvoidingView,\n    Platform\n} from 'react-native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { Image } from 'react-native';\n\nimport PhoneNumberInput from 'react-native-phone-number-input';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport { AuthOpen } from '../hooks/useAuth';\nimport Lottie from 'lottie-react-native';\nimport LottieView from 'react-native-web-lottie';\n\nimport { CodeField, Cursor, useClearByFocusCell } from 'react-native-confirmation-code-field';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport TextAnimator from '../components/TextAnimator';\nimport { logEvent } from 'firebase/analytics';\nimport { analytics } from '../firebase/firebase';\n\nconst { width, height } = Dimensions.get('window');\nconst CELL_COUNT = 6;\nexport default function Authentication({ route, navigation }) {\n    const adId = route.params?.adIdm\n    const { signInWithEmailPassword, signUpWithEmailPassword } = AuthOpen();\n    const [formattedValue, setFormattedValue] = useState('');\n    const { login } = useUser();\n    const [isUserExists, setIsUserExists] = useState(false);\n    const [screen, setScreen] = useState(1);\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [otp, setOtp] = useState('');\n    const [assignedOtp, setAssignedOtp] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [isTextInputFocused, setIsTextInputFocused] = useState(false);\n    const [currentTextIndex, setCurrentTextIndex] = useState(0);\n    const animatedTexts = [\n        'No Broker in Between 🏠',\n        'Fast and Reliable 🔥',\n        'Your Dream House Awaits! 🏠'\n    ];\n    const [props, getCellOnLayoutHandler] = useClearByFocusCell({\n        value: otp,\n        setValue: setOtp,\n    });\n\n    useEffect(() => {\n        setIsLoading(true)\n        if (adId) {\n            setTimeout(() => {\n                navigation.navigate('AdDetailsWithoutAuthentication', { adId });\n            }, 100);\n        }\n        setIsLoading(false)\n    }, [adId]);\n\n\n    const handleAnimationComplete = () => {\n        if (currentTextIndex < animatedTexts.length - 1) {\n            setCurrentTextIndex(currentTextIndex + 1);\n        }\n    };\n\n    const renderMedia = () => {\n        if (Platform.OS === 'web') {\n            return (\n                <LottieView\n                    source={require('../assets/animations/dreamHouse.json')}\n                    autoPlay\n                    loop\n                />\n            );\n        } else {\n            return (\n                <Lottie\n                    source={require('../assets/animations/dreamHouse.json')}\n                    autoPlay\n                    loop\n                />\n            );\n        }\n    };\n\n    const generateOtp = () => {\n        const otp =\n            (phoneNumber === '7008105210' || phoneNumber === '7777711111'\n                || phoneNumber === '7777722222' || phoneNumber === '7777733333'\n                || phoneNumber === '7777744444' || phoneNumber === '7777755555' || phoneNumber === '7777766666'\n            )\n                ? 121212\n                : Math.floor(100000 + Math.random() * 900000);\n        setAssignedOtp(otp);\n        return otp;\n    };\n\n    const fetchUserExistsStatus = async () => {\n        const checkPhoneResponse = await fetch(\n            `${API_BASE_URL}/user/check-phone/${phoneNumber}`\n        );\n        const checkPhoneData = await checkPhoneResponse.json();\n        setIsUserExists(checkPhoneData.exists);\n    };\n\n    const sendOTP = async () => {\n        try {\n            setIsLoading(true);\n\n            const postData = {\n                phoneNumber: formattedValue,\n                assignedOtp: generateOtp(),\n            };\n            const response = await axios.post(`${API_BASE_URL}/user/sendotp`, postData, {\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            });\n\n            const { data } = response;\n            // Check the response from your own server's endpoint\n            if (data.status === 'OK') {\n                fetchUserExistsStatus();\n                setScreen(2);\n            } else {\n                alert('Failed to send OTP. Please try again.');\n            }\n        } catch (error) {\n            // Handle errors\n            console.error('Error sending OTP:', error.response?.data || error.message);\n            alert('Error sending OTP. Please check your network connection.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const verifyOTP = () => {\n        try {\n            setIsLoading(true);\n            if (otp === assignedOtp.toString()) {\n                login(phoneNumber);\n                if (isUserExists) {\n                    signInWithEmailPassword(`${phoneNumber}@gmail.com`, phoneNumber);\n                } else {\n                    signUpWithEmailPassword(`${phoneNumber}@gmail.com`, phoneNumber);\n                }\n            } else {\n                // OTPs do not match, show an error alert\n                alert('Invalid OTP. Please try again.');\n            }\n        } catch (error) {\n            alert('Error verifying OTP. Please try again.');\n            console.log('error', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleTextInputFocus = () => {\n        setIsTextInputFocused(true);\n    };\n\n    const handleTextInputBlur = () => {\n        setIsTextInputFocused(false);\n    };\n\n    const renderScreen = () => {\n        switch (screen) {\n            case 1:\n                return (\n                    <LinearGradient\n                        colors={['#003366', '#006699', '#0099CC']}\n                        style={styles.gradient}\n                        start={{ x: 0, y: 0 }}\n                        end={{ x: 1, y: 1 }}\n                    >\n                        {(!isTextInputFocused) && (<View style={styles.lottie}>\n                            {renderMedia()}\n                            <TextAnimator\n                                content={animatedTexts[currentTextIndex]}\n                                textStyle={styles.textStyle}\n                                duration={1500}\n                                onFinish={handleAnimationComplete}\n                            />\n                        </View>)}\n                        <KeyboardAvoidingView\n                            behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n                            style={{ flex: 1 }}\n                            keyboardVerticalOffset={Platform.OS === 'ios' ? -100 : 0}\n                        >\n                            <ScrollView\n                                contentContainerStyle={styles.container}\n                                keyboardShouldPersistTaps=\"handled\"\n                            >\n                                <Text style={styles.header}>Enter Your Mobile Number</Text>\n                                <Text style={styles.subheader}>\n                                    We will send you a Confirmation Code\n                                </Text>\n\n                                <PhoneNumberInput\n                                    defaultCode=\"IN\"\n                                    value={phoneNumber}\n                                    onChangeText={(text) => {\n                                        logEvent(analytics, \"phone number changed\", text);\n                                        setPhoneNumber(text);\n                                    }}\n                                    onChangeFormattedText={(text) => {\n                                        setFormattedValue(text);\n                                    }}\n                                    placeholder=\"Enter Phone Number\"\n                                    withDarkTheme\n                                    withShadow\n                                    onFocus={handleTextInputFocus}\n                                    onBlur={handleTextInputBlur}\n                                />\n\n                                {isLoading ? (\n                                    <ActivityIndicator size=\"small\" color=\"#E5E5E5\" />\n                                ) : (\n                                    <TouchableOpacity\n                                        style={styles.button}\n                                        onPress={sendOTP}\n                                    >\n                                        <Text style={styles.buttonText}>VERIFY</Text>\n                                    </TouchableOpacity>\n                                )}\n                            </ScrollView>\n                        </KeyboardAvoidingView>\n                    </LinearGradient>\n                );\n            case 2:\n\n                return (\n                    <LinearGradient\n                        colors={['#003366', '#006699', '#0099CC']}\n                        style={styles.gradient}\n                        start={{ x: 0, y: 0 }}\n                        end={{ x: 1, y: 1 }}\n                    >\n                        <View style={styles.iconContainer}>\n                            <TouchableOpacity onPress={() => setScreen(1)}>\n                                <Ionicons name=\"arrow-back\" size={30} color=\"#FFFFFF\" />\n                            </TouchableOpacity>\n                        </View>\n                        <ScrollView\n                            contentContainerStyle={styles.container}\n                            keyboardShouldPersistTaps=\"handled\"\n                        >\n                            <Text style={styles.header}>Enter Verification Code</Text>\n                            <CodeField\n                                {...props}\n                                caretHidden={false}\n                                value={otp}\n                                onChangeText={setOtp}\n                                cellCount={CELL_COUNT}\n                                rootStyle={styles.codeFieldRoot}\n                                keyboardType=\"number-pad\"\n                                textContentType=\"oneTimeCode\"\n                                renderCell={({ index, symbol, isFocused }) => (\n                                    <View\n                                        onLayout={getCellOnLayoutHandler(index)}\n                                        key={index}\n                                        style={[styles.cell, isFocused && styles.focusCell]}\n                                    >\n                                        <Text style={styles.cellText}>\n                                            {symbol || (isFocused ? <Cursor /> : null)}\n                                        </Text>\n                                    </View>\n                                )}\n                            />\n                            <View style={styles.buttonContainer}>\n                                {isLoading ? (\n                                    <ActivityIndicator size=\"small\" color=\"#FFFFFF\" />\n                                ) : (\n                                    <>\n                                        <TouchableOpacity\n                                            style={styles.button}\n                                            onPress={verifyOTP}\n                                        >\n                                            <Text style={styles.buttonText}>VERIFY OTP</Text>\n                                        </TouchableOpacity>\n                                        <TouchableOpacity\n                                            onPress={sendOTP}\n                                        >\n                                            <Text style={styles.resendText}>RESEND OTP</Text>\n                                        </TouchableOpacity>\n                                    </>\n                                )}\n                            </View>\n                        </ScrollView>\n                    </LinearGradient>\n                );\n\n\n\n            default:\n                return <View />;\n        }\n    };\n\n    return renderScreen();\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        // backgroundColor: '#E5E5E5',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    header: {\n        fontSize: 24,\n        color: '#E5E5E5',\n        fontWeight: 'bold',\n        marginBottom: 10,\n        fontFamily: 'open-sans-regular'\n    },\n    subheader: {\n        fontSize: 16,\n        color: '#E5E5E5',\n        marginBottom: 30,\n        fontFamily: 'open-sans-regular'\n    },\n    button: {\n        top: 15,\n        backgroundColor: '#FFFFFF',\n        paddingVertical: 15,\n        paddingHorizontal: 30,\n        borderRadius: 5,\n\n    },\n    resendButton: {\n        backgroundColor: '#E5E5E5',\n        paddingVertical: 15,\n        paddingHorizontal: 30,\n        borderRadius: 5,\n        marginTop: 10,\n    },\n    backButton: {\n        backgroundColor: '#E5E5E5',\n        paddingVertical: 15,\n        paddingHorizontal: 30,\n        borderRadius: 5,\n        marginBottom: 10,\n    },\n    buttonText: {\n        color: '#007DBC',\n        fontFamily: 'open-sans-bold'\n    },\n    buttonContainer: {\n        marginTop: 20,\n        alignItems: 'center',\n    },\n    countryPickerContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n        width: 110,\n        borderColor: '#007DBC',\n        borderWidth: 1,\n        borderRadius: 5,\n    },\n    countryPicker: {\n        flex: 1,\n        height: 40,\n        color: '#007DBC',\n    },\n    lottie: {\n        width: width,\n        height: width,\n        alignItems: 'center',\n        justifyContent: 'center',\n        top: 50,\n    },\n    image: {\n        width: 250,\n        height: 250,\n        resizeMode: 'contain', // or 'cover' depending on your requirement\n    },\n    codeFieldRoot: {\n        marginTop: 20,\n        width: 280,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n    cell: {\n        width: 30,\n        height: 45,\n        lineHeight: 38,\n        fontSize: 24,\n        borderWidth: 2,\n        borderColor: '#FFFFFF',\n        textAlign: 'center',\n        marginRight: 8,\n    },\n    focusCell: {\n        borderColor: '#000',\n    },\n    cellText: {\n        color: '#FFFFFF',\n        fontSize: 36,\n        textAlign: 'center',\n    },\n    gradient: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    iconContainer: {\n        position: 'absolute',\n        top: 50,  // Adjust according to your need\n        left: 20,  // Adjust according to your need\n        zIndex: 10,\n    },\n    resendText: {\n        color: '#FFFFFF',\n        textAlign: 'center',\n        marginTop: 15,  // Or any other value that suits your design\n        fontSize: 16,   // Or any other value that suits your design\n        top: 20\n    },\n    textStyle: {\n        fontSize: 20,\n        fontFamily: 'open-sans-regular',\n        marginBottom: 14,\n        color: '#FFFFFF',\n        marginTop: 20, // Added this line to create a gap of 50\n    },\n});\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport const setItem = async (key, value) => {\n  try {\n    await AsyncStorage.setItem(key, value);\n  } catch (error) {\n    console.log('Error storing value: ', error);\n  }\n};\n\n\nexport const getItem = async (key) => {\n  try {\n    const value = await AsyncStorage.getItem(key);\n    return value;\n  } catch (error) {\n    console.log('Error retrieving value: ', error);\n  }\n};\n\nexport const removeItem = async (key) => {\n  try {\n    await AsyncStorage.removeItem(key);\n  } catch (error) {\n    console.log('Error deleting value: ', error);\n  }\n}","import { View, Text, StyleSheet, Dimensions, TouchableOpacity } from 'react-native'\nimport React from 'react'\nimport Onboarding from 'react-native-onboarding-swiper';\nimport Lottie from 'lottie-react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { setItem } from '../utils/asyncStorage';\n\nconst { width, height } = Dimensions.get('window');\n\nexport default function OnboardingScreen() {\n    const navigation = useNavigation();\n\n    const handleDone = () => {\n        navigation.navigate('HomeTabNavigator');\n        setItem('onboarded', '1');\n    }\n\n    const doneButton = ({ ...props }) => {\n        return (\n            <TouchableOpacity style={styles.doneButton} {...props}>\n                <Text>Done</Text>\n            </TouchableOpacity>\n        )\n\n    }\n    return (\n        <View style={styles.container}>\n            <Onboarding\n                onDone={handleDone}\n                onSkip={handleDone}\n                // bottomBarHighlight={false}\n                DoneButtonComponent={doneButton}\n                containerStyles={{ paddingHorizontal: 15 }}\n                pages={[\n                    {\n                        backgroundColor: '#003366',\n\n                        image: (\n                            <View style={styles.lottie}>\n                                <Lottie source={require('../assets/animations/nearbyRooms.json')} autoPlay loop />\n                            </View>\n                        ),\n                        title: 'Nearby Rooms',\n                        subtitle: 'Discover rooms close to your current location easily.',\n                    },\n                    {\n                        backgroundColor: '#006699',\n                        image: (\n                            <View style={styles.lottie}>\n                                <Lottie source={require('../assets/animations/directMessageFlatmates.json')} autoPlay loop />\n                            </View>\n                        ),\n                        title: 'Direct Message Flatmate',\n                        subtitle: 'Contact flatmates directly, no broker in between.',\n                    },\n                    {\n                        backgroundColor: '#0099CC',\n                        image: (\n                            <View style={styles.lottie}>\n                                <Lottie source={require('../assets/animations/verifiedListings.json')} autoPlay loop />\n                            </View>\n                        ),\n                        title: 'Verified Listings',\n                        subtitle: '100% verified rooms with 1000+ users trusted.',\n                    },\n                ]}\n            />\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: 'white'\n    },\n    lottie: {\n        width: width * 0.9,\n        height: width\n    },\n    doneButton: {\n        padding: 20,\n        // backgroundColor: 'white',\n        // borderTopLeftRadius: '100%',\n        // borderBottomLeftRadius: '100%'\n    }\n})","import React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, Image, TouchableOpacity, ScrollView, SafeAreaView, Share, Platform, Clipboard, Alert, ActivityIndicator, } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { db } from '../firebase/firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useUser } from '../context/UserContext';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport API_BASE_URL, { DOMAIN_URL } from '../services/config';\nimport * as FileSystem from 'expo-file-system';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons'; // Import for larger icon\n\nconst amenitiesMapping = [\n    { key: 'isFurnished', label: 'Furnished', icon: 'bed-outline' },\n    { key: 'hasAttachedBathroom', label: 'Attached Bathroom', icon: 'water-outline' },\n    { key: 'isMaleOnly', label: 'Male Only', icon: 'male-outline' },\n    { key: 'isBachelorsAllowed', label: 'Bachelors Allowed', icon: 'people-outline' },\n    // Add other attributes and their corresponding labels and icons here...\n];\n\nconst AdDetailsWithoutAuthentication = ({ route }) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const { userInfo } = useUser();\n    const { adId } = route.params;\n    const navigation = useNavigation();\n    const [ad, setAd] = useState();\n    const [firebaseId, setFirebaseId] = useState(ad?.firebaseId);\n    const [flatmatesData, setFlatmatesData] = useState(ad?.flatmates);\n    const [userDetails, setUserDetails] = useState(null);\n    const [showDirectMessageButton, setShowDirectMessageButton] = useState(false);\n    const isPostedByCurrentUser = firebaseId === userInfo?.firebaseId;\n    const [isAdAvailable, setIsAdAvailable] = useState(true);\n    useEffect(() => {\n        const fetchPostDetails = async () => {\n            setIsLoading(true);\n\n            try {\n                const response = await fetch(`${API_BASE_URL}/rentpost/getPostsById/${adId}`);\n                if (response.ok) {\n                    const data = await response.json();\n                    setAd(data)\n                    setFirebaseId(data?.firebaseId)\n                    setFlatmatesData(data?.flatmates || [])\n                    setIsAdAvailable(true);\n                } else {\n                    setIsAdAvailable(false);\n                    console.error('Failed to fetch user ads');\n                }\n            } catch (error) {\n                console.error('Error fetching user ads:', error);\n            } finally {\n                setIsLoading(false); // Stop loading\n            }\n        };\n\n        if (adId) {\n            fetchPostDetails();\n        }\n    }, [adId]);\n\n\n    const onShare = async () => {\n        const shareMessage = `${ad?.adTitle} At Price ₹${ad?.price}\\n\\n Check this out!! ✨🏠🌟\\n\\n` + `${DOMAIN_URL}/ads/${ad?._id}`;\n\n        if (Platform.OS === 'web') {\n            // Attempt to use the Web Share API if available\n            if (navigator.share) {\n                navigator.share({\n                    title: ad?.adTitle,\n                    text: shareMessage,\n                    // url: ad?.images[0],\n                }).catch(error => console.log('Error sharing', error));\n            } else {\n                Clipboard.setString(shareMessage);\n                Alert.alert('Link copied to clipboard');\n            }\n        } else {\n            // Mobile sharing\n            try {\n                await Share.share({\n                    message: shareMessage,\n                    //url: ad?.images[0], // Include this only if it's a local file\n                });\n            } catch (error) {\n                console.error(error.message);\n            }\n        }\n    };\n\n    useEffect(() => {\n        const fetchUserDetails = async () => {\n            try {\n                const userDoc = await getDoc(doc(db, 'user_profiles', firebaseId));\n\n                if (userDoc.exists()) {\n                    setUserDetails(userDoc.data());\n                    setShowDirectMessageButton(true);\n                }\n            } catch (error) {\n                console.error('Error fetching user details:', error);\n            }\n        };\n\n        if (firebaseId) {\n            fetchUserDetails();\n        }\n    }, [firebaseId]);\n\n\n    const handleDirectMessage = () => {\n        navigation.navigate('HomeTabNavigator');\n    };\n\n    const handleBackButton = () => {\n        navigation.navigate('HomeWithoutAuthentication');\n    };\n\n    if (isLoading) {\n        return (\n            <View style={styles.loaderContainer}>\n                <ActivityIndicator size=\"large\" color=\"#FFFFFF\" />\n            </View>\n        )\n    }\n    if (!isAdAvailable) {\n        return (\n            <LinearGradient colors={['#007DBC', '#005AAA']} style={styles.soldContainer}>\n                <MaterialIcons name=\"error-outline\" size={60} color=\"white\" />\n                <Text style={styles.soldMessage}>This ad has been sold</Text>\n                <TouchableOpacity onPress={handleBackButton} style={styles.seeMoreButtonContainer}>\n\n                    <Text style={styles.seeMoreButtonText}> See More</Text>\n                    <Ionicons name=\"arrow-forward\" size={24} color=\"white\" />\n                </TouchableOpacity>\n            </LinearGradient>\n        );\n    }\n    return (\n        <SafeAreaView style={styles.flexContainer}>\n            <View style={{ height: \"90%\", backgroundColor: '#f8f9fa', }}>\n                <LinearGradient colors={['#007DBC', '#005AAA']} style={styles.header}>\n                    <TouchableOpacity onPress={handleBackButton} style={styles.seeMoreButtonContainer}>\n                        <Ionicons name=\"arrow-back\" size={24} color=\"white\" />\n                        <Text style={styles.seeMoreButtonText}> See More</Text>\n                    </TouchableOpacity>\n                </LinearGradient>\n                <ScrollView contentContainerStyle={styles.scrollViewContent}>\n                    <Image source={{ uri: ad?.images[0] }} style={styles.villaImage} />\n                    <TouchableOpacity style={styles.shareIcon} onPress={onShare}>\n                        <Ionicons name=\"share-social\" size={24} color=\"white\" />\n                    </TouchableOpacity>\n                    <Text style={styles.villaName}>{ad?.adTitle}</Text>\n                    <Text style={styles.location}>{ad?.location}</Text>\n                    <View style={styles.offerContainer}>\n                        <FontAwesome name=\"check\" size={24} color=\"white\" style={styles.trustIcon} />\n\n                        <Text style={styles.offerText}>Verified User</Text>\n                    </View>\n                    <Text style={styles.description}>{ad?.adDescription}</Text>\n                    {ad &&\n                        (<View style={styles.amenitiesContainer}>\n                            <View style={styles.amenitiesList}>\n                                {amenitiesMapping.map(amenity => {\n                                    if (ad[amenity.key]) {\n                                        return (\n                                            <View style={styles.amenityItem} key={amenity.key}>\n                                                <Ionicons name={amenity.icon} size={24} color=\"white\" />\n                                                <Text style={styles.amenityLabel}>{amenity.label}</Text>\n                                            </View>\n                                        );\n                                    }\n                                    return null;\n                                })}\n                            </View>\n                        </View>)}\n                    {\n                        (ad && flatmatesData.length > 0) &&\n                        (<View style={styles.flatmatesSection}>\n                            <Text style={styles.title}>Flatmates</Text>\n                            <View style={styles.flatmatesGrid}>\n                                {flatmatesData.map((flatmate, index) => (\n                                    <View key={index} style={styles.flatmateCard}>\n                                        <Image source={{ uri: flatmate.image }} style={styles.flatmateImage} />\n                                        <Text style={styles.flatmateName}>{flatmate.name}</Text>\n                                        <Text style={styles.flatmateOccupation}>{flatmate.occupation}</Text>\n                                    </View>\n                                ))}\n                            </View>\n                        </View>)\n                    }\n                </ScrollView>\n            </View>\n            {isPostedByCurrentUser ? (\n                // Display a message indicating that the advertisement is posted by the current user\n                <Text style={styles.postedByCurrentUserMessage}>\n                    This advertisement is posted by you.\n                </Text>\n            ) : showDirectMessageButton && (\n                <View style={styles.footer}>\n                    <View style={styles.priceContainer}>\n                        <Text style={styles.discountedPrice}>₹{ad?.price}/month</Text>\n                    </View>\n                    <TouchableOpacity onPress={handleDirectMessage} style={styles.bookNowButton}>\n                        <Text style={styles.bookNowButtonText}>\n                            Direct Message\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n\n            )}\n\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    flexContainer: {\n        flex: 1,\n        backgroundColor: '#f8f9fa',\n        fontFamily: 'open-sans-regular'\n    },\n    container: {\n        flex: 1,\n    },\n    loaderContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#005AAA', // Adjust the color and opacity to match your gradient\n    },\n    footer: {\n        borderTopWidth: 1,\n        borderColor: '#eaecef',\n        backgroundColor: '#fff',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        zIndex: 10,\n        padding: 16,\n        flexDirection: 'row',\n        ...(Platform.OS === 'web' ? {\n            position: 'fixed',\n            bottom: 0,\n            left: 0,\n            right: 0,\n        } : {\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            right: 0,\n        }),\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        padding: 16,\n        alignItems: 'center',\n        borderBottomWidth: 1,\n        borderBottomColor: '#eaecef',\n    },\n    icon: {\n        width: 24,\n        height: 24,\n    },\n    backButton: {\n        fontSize: 18,\n        color: '#007bff',\n    },\n    villaImage: {\n        width: '100%',\n        height: 300,\n        resizeMode: 'cover',\n    },\n    villaName: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginVertical: 8,\n        marginHorizontal: 16,\n        color: '#212529',\n        fontFamily: 'open-sans-bold'\n    },\n    location: {\n        fontSize: 16,\n        color: '#6c757d',\n        marginBottom: 8,\n        marginLeft: 16,\n        fontFamily: 'open-sans-regular'\n    },\n    offerContainer: {\n        flexDirection: 'row',\n        backgroundColor: '#007DBC',\n        padding: 12,\n        marginHorizontal: 16,\n        marginVertical: 8,\n        borderRadius: 4,\n    },\n    offerText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontFamily: 'open-sans-regular'\n    },\n    description: {\n        marginHorizontal: 16,\n        marginVertical: 8,\n        fontSize: 16,\n        color: '#212529',\n        fontFamily: 'open-sans-regular'\n    },\n    hostImage: {\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        margin: 16,\n        borderWidth: 2,\n        borderColor: '#eaecef',\n    },\n    hostName: {\n        fontSize: 18,\n        fontWeight: '500',\n        marginLeft: 16,\n        color: '#212529',\n    },\n    price: {\n        fontSize: 28,\n        fontWeight: 'bold',\n        marginHorizontal: 16,\n        marginVertical: 8,\n        color: '#28a745',\n    },\n    directMessageButton: {\n        backgroundColor: '#28a745',\n        padding: 12,\n        marginHorizontal: 16,\n        marginVertical: 8,\n        borderRadius: 4,\n        alignItems: 'center',\n    },\n    directMessageButtonText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontSize: 18,\n    },\n    postedByCurrentUserMessage: {\n        color: '#dc3545',\n        textAlign: 'center',\n        marginBottom: 10,\n        fontSize: 16,\n    },\n    amenitiesContainer: {\n        padding: 16,\n        borderBottomWidth: 1,\n        borderBottomColor: '#eaecef',\n        backgroundColor: '#fff',\n    },\n    amenitiesTitle: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#212529',\n        marginBottom: 8,\n        fontFamily: 'open-sans-bold'\n    },\n    amenitiesList: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'flex-start',\n    },\n    amenityItem: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        backgroundColor: '#007DBC', // This sets the background color to a blue shade\n        borderRadius: 16,\n        padding: 8,\n        marginRight: 8,\n        marginBottom: 8,\n    },\n    amenityLabel: {\n        marginLeft: 8,\n        fontSize: 14,\n        color: '#FFFFFF', // This sets the text color to white\n        fontFamily: 'open-sans-regular'\n    },\n    priceContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    originalPrice: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        textDecorationLine: 'line-through',\n        marginRight: 8,\n    },\n    discountedPrice: {\n        fontSize: 22,\n        fontWeight: 'bold',\n    },\n    bookNowButton: {\n        backgroundColor: '#28a745',\n        padding: 12,\n        borderRadius: 4,\n        alignItems: 'center',\n    },\n    bookNowButtonText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontSize: 18,\n    },\n    flatmateRow: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    flatmatesSection: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#e9ecef', // Changed background color for better visibility\n    },\n    title: {\n        fontSize: 24,\n        marginBottom: 20,\n        fontFamily: 'open-sans-bold'\n    },\n    flatmatesGrid: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between', // To maintain equal spacing between two cards in a row\n    },\n    flatmateCard: {\n        width: '48%', // Slightly less than half to account for any potential margins or paddings\n        marginBottom: 15,\n        padding: 10, // Added some padding\n        backgroundColor: '#fff', // White background for the card\n        borderRadius: 8, // Rounded corners\n        alignItems: 'center', // Center items horizontally\n    },\n    flatmateImage: {\n        width: 50,\n        height: 50,\n        borderRadius: 25,\n        marginBottom: 10, // Margin below the image\n    },\n    flatmateName: {\n        fontSize: 18,\n        fontWeight: '600',\n        fontFamily: 'open-sans-regular',\n        textAlign: 'center', // Center the text\n    },\n    flatmateOccupation: {\n        fontSize: 14,\n        color: 'gray',\n        fontFamily: 'open-sans-light',\n        textAlign: 'center', // Center the text\n    },\n    trustIcon: {\n        marginRight: 5,  // Some space between the icon and text\n        bottom: 2,\n    },\n    scrollViewContent: {\n        paddingBottom: 20, // Add some bottom padding to accommodate for any absolutely positioned elements\n    },\n    seeMoreButtonContainer: {\n        flexDirection: 'row', // Align items in a row\n        alignItems: 'center', // Center items vertically\n        padding: 10,\n        borderRadius: 5,\n        // Add any additional styling as needed\n    },\n    seeMoreButtonText: {\n        color: '#FFFFFF', // White text color\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginLeft: 5, // Space between icon and text\n        // Add more text styling as needed\n    },\n    shareIcon: {\n        position: 'absolute',\n        right: 10,\n        top: 10,\n        backgroundColor: 'rgba(0, 0, 0, 0.6)',\n        padding: 8,\n        borderRadius: 25,\n        width: 40,\n        zIndex: 1, // Add this line\n    },\n    soldContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    soldMessage: {\n        fontSize: 24,\n        color: 'white',\n        marginTop: 20,\n        textAlign: 'center',\n        fontFamily: 'open-sans-bold'\n    },\n\n});\n\n\n\nexport default AdDetailsWithoutAuthentication;\n","import { logEvent } from 'firebase/analytics';\nimport React from 'react';\nimport { Image, Dimensions, StyleSheet } from 'react-native';\nimport Carousel from 'react-native-banner-carousel';\nimport { analytics } from '../firebase/firebase';\n\nconst BannerWidth = Dimensions.get('window').width;\nconst BannerHeight = 200; // Adjust the height as needed\n\nconst BannerCarousel = ({ data }) => {\n    const renderPage = (image, index) => (\n        <Image key={index} source={{ uri: image }} style={styles.bannerImage} />\n    );\n\n    return (\n        <Carousel\n            autoplay\n            autoplayTimeout={5000}\n            loop\n            index={0}\n            pageSize={BannerWidth}\n        >\n            {data.map((image, index) => renderPage(image, index))}\n        </Carousel>\n    );\n};\n\nconst styles = StyleSheet.create({\n    bannerImage: {\n        width: BannerWidth,\n        height: BannerHeight,\n        // Add any additional styling for your images here\n    },\n    // You can add additional styles if needed\n});\n\nexport default BannerCarousel;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { View, Text, FlatList, TouchableOpacity, StyleSheet, Image, RefreshControl, Dimensions } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { collection, getDocs, getFirestore, query } from 'firebase/firestore'\nimport Animated, { useSharedValue, useAnimatedStyle, withSpring } from 'react-native-reanimated';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { analytics, db } from '../firebase/firebase';\nimport BannerCarousel from '../components/BannerCarousel';\nimport { logEvent } from 'firebase/analytics';\nimport SkeletonLoader from \"expo-skeleton-loader\";\nconst { height, width } = Dimensions.get('window');\n\nconst HomeWithoutAuthentication = () => {\n    const { userToken, userInfo } = useUser();\n    const [ads, setAds] = useState([]);\n    const [banners, setBanners] = useState([]);\n    const [refreshing, setRefreshing] = useState(false);\n    const navigation = useNavigation();\n    const [bannersLoading, setBannersLoading] = useState(true);\n    const [genderFilter, setGenderFilter] = useState('all'); // 'all', 'male', 'female'\n    const [filteredAds, setFilteredAds] = useState([]);\n    useEffect(() => {\n        fetchAds();\n        fetchBanners()\n\n    }, []);\n\n    const fetchAds = async () => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/rentpost/getAllPosts`);\n            if (response.ok) {\n                const data = await response.json();\n                setAds(data);\n            } else {\n                console.error('Failed to fetch ad posts');\n            }\n        } catch (error) {\n            console.error('Error fetching ad posts:', error);\n        } finally {\n            setRefreshing(false);\n        }\n    };\n\n    const handleGenderFilterChange = (newFilter) => {\n        setGenderFilter(newFilter);\n    };\n\n    const skeletonBanner = () => (\n        <SkeletonLoader\n            boneColor=\"#B0B3B8\"\n            highlightColor=\"#E0E0E0\"\n        >\n            <SkeletonLoader.Item\n                style={{ width, height: height / 4, marginVertical: 10 }}\n            />\n        </SkeletonLoader>\n    );\n    const filterAds = () => {\n        let filtered;\n        switch (genderFilter) {\n            case 'male':\n                filtered = ads.filter(ad => ad.isMaleOnly === true);\n                break;\n            case 'female':\n                filtered = ads.filter(ad => ad.isMaleOnly === false);\n                break;\n            default:\n                filtered = ads;\n        }\n        setFilteredAds(filtered);\n    };\n    const fetchBanners = async () => {\n        try {\n            setBannersLoading(true);\n            const bannersQuery = query(collection(db, 'banners'));\n            const bannersSnapshot = await getDocs(bannersQuery);\n            const fetchedBanners = bannersSnapshot.docs.map(doc => doc.data().link);\n            setBanners(fetchedBanners);\n        } catch (error) {\n            console.error('Error fetching banners:', error);\n        } finally {\n            setBannersLoading(false);\n        }\n    };\n\n    const renderAdCard = ({ item }) => (\n        <AnimatedCard item={item} onPress={handleAdPress} />\n    );\n\n    const handleAdPress = (ad) => {\n        logEvent(analytics, \"Post OnClick\", (ad));\n        navigation.navigate('AdDetailsWithoutAuthentication', { adId: ad._id });\n    };\n\n    const onRefresh = useCallback(() => {\n        setRefreshing(true);\n        fetchAds();\n    }, []);\n    useEffect(() => {\n        filterAds();\n    }, [ads, genderFilter]);\n    return (\n        <>\n            <View style={styles.container}>\n                {bannersLoading && skeletonBanner()}\n                {!bannersLoading && banners.length > 0 && <BannerCarousel data={banners} />}\n                <View style={styles.filterButtonsContainer}>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'all' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('all')}\n                    >\n                        <Text style={genderFilter === 'all' ? styles.filterTextActive : styles.filterText}>All</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'male' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('male')}\n                    >\n                        <Text style={genderFilter === 'male' ? styles.filterTextActive : styles.filterText}>Male Only</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'female' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('female')}\n                    >\n                        <Text style={genderFilter === 'female' ? styles.filterTextActive : styles.filterText}>Female Only</Text>\n                    </TouchableOpacity>\n                </View>\n                <FlatList\n                    data={filteredAds.length ? filteredAds : ads}\n                    keyExtractor={(item) => item._id}\n                    renderItem={renderAdCard}\n                    contentContainerStyle={styles.adList}\n                    numColumns={2}\n                    refreshControl={\n                        <RefreshControl\n                            refreshing={refreshing}\n                            onRefresh={onRefresh}\n                            tintColor=\"#007DBC\"\n                        />\n                    }\n                />\n            </View>\n        </>\n    );\n};\n\nconst AnimatedCard = ({ item, onPress }) => {\n    const scale = useSharedValue(1);\n    const lastPress = useRef(Date.now());\n\n    const animatedStyles = useAnimatedStyle(() => {\n        return {\n            transform: [{ scale: scale.value }],\n        };\n    });\n\n    const animatedImageStyles = useAnimatedStyle(() => {\n        return {\n            transform: [\n                { perspective: 1000 },\n                { rotateY: `${scale.value * 0}deg` },\n            ],\n        };\n    });\n\n    const handlePress = () => {\n        const now = Date.now();\n        if (now - lastPress.current > 300) { // Prevent multiple rapid presses\n            lastPress.current = now;\n            onPress(item);\n        }\n    };\n\n    const handlePressIn = () => {\n        scale.value = withSpring(1.05);\n    };\n\n    const handlePressOut = () => {\n        scale.value = withSpring(1);\n    };\n\n    return (\n        <Animated.View style={[styles.card, animatedStyles]}>\n            <TouchableOpacity\n                activeOpacity={1}\n                onPress={handlePress}\n                onPressIn={handlePressIn}\n                onPressOut={handlePressOut}\n                delayPressIn={100} // Add delay here\n                style={styles.touchable}\n            >\n                <LinearGradient colors={['#005AAA', '#007DBC']} style={styles.gradient}>\n                    <Animated.Image source={{ uri: item.images[0] }} style={[styles.adImage, animatedImageStyles]} />\n                    <View style={styles.adDetails}>\n                        <Text\n                            style={styles.adTitle}\n                            numberOfLines={2}\n                            ellipsizeMode='tail'\n                        >\n                            {item.adTitle}\n                        </Text>\n                        <View style={styles.adInfo}>\n                            <Text style={styles.adPrice}>Price: ₹{item.price}</Text>\n                            <Text style={styles.adBedrooms}>{item.bedrooms} {item.location}</Text>\n                        </View>\n                    </View>\n                </LinearGradient>\n            </TouchableOpacity>\n        </Animated.View>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n    bannerImage: {\n        width: '100%',\n        height: 200,\n    },\n    adList: {\n        padding: 8,\n    },\n    touchable: {\n        flex: 1,\n    },\n    card: {\n        flex: 0.5,\n        margin: 8,\n        borderRadius: 15,\n        overflow: 'hidden',\n        backgroundColor: '#fff',\n        elevation: 6,\n        shadowColor: 'rgba(0,0,0,0.15)',\n        shadowOffset: { width: 0, height: 3 },\n        shadowOpacity: 1,\n        shadowRadius: 6,\n        borderColor: '#f0f0f0', // Light grey border\n        borderWidth: 1, // Border width\n        fontFamily: 'open-sans-regular',\n    },\n    adImage: {\n        width: '100%',\n        height: 140,\n        backfaceVisibility: 'hidden',\n        borderTopLeftRadius: 15, // Match border radius of card\n        borderTopRightRadius: 15, // Match border radius of card\n    },\n    adDetails: {\n        flex: 1,\n        padding: 12, // Slightly more padding\n    },\n    adTitle: {\n        fontSize: 14, // Reduced font size for title\n        //fontWeight: 'bold',\n        marginBottom: 5,\n        color: 'white', // Darker text color for better readability\n        fontFamily: 'open-sans-bold',\n    },\n    adLocation: {\n        fontSize: 14, // Reduced font size for location\n        color: 'white', // Lighter text color for location\n        marginBottom: 8, // Added margin-bottom for spacing\n    },\n    adInfo: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    adPrice: {\n        fontSize: 16,\n        color: '#deac47',\n        fontFamily: 'open-sans-bold',\n    },\n    adBedrooms: {\n        fontSize: 12,\n        color: '#999',\n    },\n\n    filterButtonsContainer: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        padding: 10,\n        //marginBottom: 20,\n    },\n    filterButton: {\n        borderWidth: 1,\n        borderColor: '#007DBC',\n        paddingVertical: 8,\n        paddingHorizontal: 20,\n        borderRadius: 20,\n        marginHorizontal: 5,\n        backgroundColor: 'white',\n    },\n    filterButtonActive: {\n        backgroundColor: '#007DBC',\n    },\n    filterText: {\n        color: '#007DBC',\n        textAlign: 'center',\n    },\n    filterTextActive: {\n        color: 'white',\n        textAlign: 'center',\n    },\n});\n\nexport default HomeWithoutAuthentication;\n","// src/navigation/AuthStack.js\n\nimport React, { useEffect, useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Platform } from 'react-native'; // Import Platform from 'react-native'\nimport Authentication from '../screens/Authentication';\nimport OnboardingScreen from '../screens/OnboardingScreen';\nimport { getItem } from '../utils/asyncStorage';\nimport AdDetailsWithoutAuthentication from '../screens/AdDetailsWithoutAuthentication';\nimport HomeWithoutAuthentication from '../screens/HomeWithoutAuthentication';\n\nconst Stack = createStackNavigator();\n\nconst AuthStack = () => {\n    const [showOnboarding, setShowOnboarding] = useState(null);\n\n    useEffect(() => {\n        checkIfAlreadyOnboarded();\n    }, []);\n\n    const checkIfAlreadyOnboarded = async () => {\n        let onboarded = await getItem('onboarded');\n        if (onboarded == 1) {\n            setShowOnboarding(false);\n        } else {\n            setShowOnboarding(true);\n        }\n    };\n\n    if (showOnboarding && Platform.OS !== 'web') { // Check the platform here\n        return (\n            <Stack.Navigator initialRouteName='Onboarding'>\n                <Stack.Screen name=\"Onboarding\" options={{ headerShown: false }} component={OnboardingScreen} />\n                <Stack.Screen name=\"HomeTabNavigator\" options={{ headerShown: false }} component={Authentication} />\n                <Stack.Screen name=\"AdDetailsWithoutAuthentication\" component={AdDetailsWithoutAuthentication} />\n                <Stack.Screen name=\"HomeWithoutAuthentication\" component={HomeWithoutAuthentication} />\n            </Stack.Navigator>\n        );\n    }\n\n    if (showOnboarding == null) return null;\n\n    return (\n        <Stack.Navigator\n            screenOptions={{\n                headerShown: false\n            }}\n            initialRouteName='HomeTabNavigator'\n        >\n            <Stack.Screen name=\"HomeTabNavigator\" component={Authentication} />\n            <Stack.Screen name=\"HomeWithoutAuthentication\" component={HomeWithoutAuthentication} />\n            <Stack.Screen name=\"AdDetailsWithoutAuthentication\" component={AdDetailsWithoutAuthentication} />\n        </Stack.Navigator>\n    );\n};\n\nexport default AuthStack;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { View, Text, FlatList, TouchableOpacity, StyleSheet, Image, RefreshControl, Dimensions, ActivityIndicator } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { collection, getDocs, query } from 'firebase/firestore'\nimport Animated, { useSharedValue, useAnimatedStyle, withSpring } from 'react-native-reanimated';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { analytics, db } from '../firebase/firebase';\nimport BannerCarousel from '../components/BannerCarousel';\nimport { logEvent } from 'firebase/analytics';\nimport SkeletonLoader from \"expo-skeleton-loader\";\nconst { height, width } = Dimensions.get('window');\n\nconst Home = () => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [ads, setAds] = useState([]);\n    const [banners, setBanners] = useState([]);\n    const [refreshing, setRefreshing] = useState(false);\n    const navigation = useNavigation();\n    const [bannersLoading, setBannersLoading] = useState(true);\n    const [genderFilter, setGenderFilter] = useState('all'); // 'all', 'male', 'female'\n    const [filteredAds, setFilteredAds] = useState([]);\n    useEffect(() => {\n        fetchAds();\n        fetchBanners()\n\n    }, []);\n\n    const fetchAds = async () => {\n        try {\n            setIsLoading(true)\n            const response = await fetch(`${API_BASE_URL}/rentpost/getAllPosts`);\n            if (response.ok) {\n                const data = await response.json();\n                setAds(data);\n                setIsLoading(false)\n            } else {\n                console.error('Failed to fetch ad posts');\n            }\n        } catch (error) {\n            console.error('Error fetching ad posts:', error);\n        } finally {\n            setRefreshing(false);\n            setIsLoading(false)\n        }\n    };\n\n    const handleGenderFilterChange = (newFilter) => {\n        setGenderFilter(newFilter);\n    };\n\n    const skeletonBanner = () => (\n        <SkeletonLoader\n            boneColor=\"#B0B3B8\"\n            highlightColor=\"#E0E0E0\"\n        >\n\n            <SkeletonLoader.Item\n                style={{ width, height: height / 4, marginVertical: 10 }}\n            />\n        </SkeletonLoader>\n    );\n    const filterAds = () => {\n        let filtered;\n        switch (genderFilter) {\n            case 'male':\n                filtered = ads.filter(ad => ad.isMaleOnly === true);\n                break;\n            case 'female':\n                filtered = ads.filter(ad => ad.isMaleOnly === false);\n                break;\n            default:\n                filtered = ads;\n        }\n        setFilteredAds(filtered);\n    };\n    const fetchBanners = async () => {\n        try {\n            setBannersLoading(true);\n            const bannersQuery = query(collection(db, 'banners'));\n            const bannersSnapshot = await getDocs(bannersQuery);\n            const fetchedBanners = bannersSnapshot.docs.map(doc => doc.data().link);\n            setBanners(fetchedBanners);\n        } catch (error) {\n            console.error('Error fetching banners:', error);\n        } finally {\n            setBannersLoading(false);\n        }\n    };\n\n    const renderAdCard = ({ item }) => (\n        <AnimatedCard item={item} onPress={handleAdPress} />\n    );\n\n    const handleAdPress = (ad) => {\n        logEvent(analytics, \"Post OnClick\", (ad));\n        navigation.navigate('SingleScreenAd', { adIds: ad?._id });\n    };\n\n    const onRefresh = useCallback(() => {\n        setRefreshing(true);\n        fetchAds();\n        fetchBanners();\n    }, []);\n\n    useEffect(() => {\n        filterAds();\n    }, [ads, genderFilter]);\n\n    if (isLoading && refreshing && bannersLoading) {\n        return (\n            <View style={styles.loaderContainer}>\n                <ActivityIndicator size=\"large\" color=\"#FFFFFF\" />\n            </View>\n        )\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                {bannersLoading && skeletonBanner()}\n                {!bannersLoading && banners.length > 0 && <BannerCarousel data={banners} />}\n                <View style={styles.filterButtonsContainer}>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'all' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('all')}\n                    >\n                        <Text style={genderFilter === 'all' ? styles.filterTextActive : styles.filterText}>All</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'male' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('male')}\n                    >\n                        <Text style={genderFilter === 'male' ? styles.filterTextActive : styles.filterText}>Male Only</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'female' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('female')}\n                    >\n                        <Text style={genderFilter === 'female' ? styles.filterTextActive : styles.filterText}>Female Only</Text>\n                    </TouchableOpacity>\n                </View>\n                <FlatList\n                    data={filteredAds.length ? filteredAds : ads}\n                    keyExtractor={(item) => item._id}\n                    renderItem={renderAdCard}\n                    contentContainerStyle={styles.adList}\n                    numColumns={2}\n                    refreshControl={\n                        <RefreshControl\n                            refreshing={refreshing}\n                            onRefresh={onRefresh}\n                            tintColor=\"white\"\n                        />\n                    }\n                />\n            </View>\n        </>\n    );\n};\n\nconst AnimatedCard = ({ item, onPress }) => {\n    const scale = useSharedValue(1);\n    const lastPress = useRef(Date.now());\n\n    const animatedStyles = useAnimatedStyle(() => {\n        return {\n            transform: [{ scale: scale.value }],\n        };\n    });\n\n    const animatedImageStyles = useAnimatedStyle(() => {\n        return {\n            transform: [\n                { perspective: 1000 },\n                { rotateY: `${scale.value * 0}deg` },\n            ],\n        };\n    });\n\n    const handlePress = () => {\n        const now = Date.now();\n        if (now - lastPress.current > 300) { // Prevent multiple rapid presses\n            lastPress.current = now;\n            onPress(item);\n        }\n    };\n\n    const handlePressIn = () => {\n        scale.value = withSpring(1.05);\n    };\n\n    const handlePressOut = () => {\n        scale.value = withSpring(1);\n    };\n\n    return (\n        <Animated.View style={[styles.card, animatedStyles]}>\n            <TouchableOpacity\n                activeOpacity={1}\n                onPress={handlePress}\n                onPressIn={handlePressIn}\n                onPressOut={handlePressOut}\n                delayPressIn={100} // Add delay here\n                style={styles.touchable}\n            >\n                <LinearGradient colors={['#005AAA', '#007DBC']} style={styles.gradient}>\n                    <Animated.Image source={{ uri: item.images[0] }} style={[styles.adImage, animatedImageStyles]} />\n                    <View style={styles.adDetails}>\n                        <Text\n                            style={styles.adTitle}\n                            numberOfLines={2}\n                            ellipsizeMode='tail'\n                        >\n                            {item.adTitle}\n                        </Text>\n                        <View style={styles.adInfo}>\n                            <Text style={styles.adPrice}>Price: ₹{item.price}</Text>\n                            <Text style={styles.adBedrooms}>{item.bedrooms} {item.location}</Text>\n                        </View>\n                    </View>\n                </LinearGradient>\n            </TouchableOpacity>\n        </Animated.View>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n    bannerImage: {\n        width: '100%',\n        height: 200,\n    },\n    adList: {\n        padding: 8,\n    },\n    touchable: {\n        flex: 1,\n    },\n    card: {\n        flex: 0.5,\n        margin: 8,\n        borderRadius: 15,\n        overflow: 'hidden',\n        backgroundColor: '#fff',\n        elevation: 6,\n        shadowColor: 'rgba(0,0,0,0.15)',\n        shadowOffset: { width: 0, height: 3 },\n        shadowOpacity: 1,\n        shadowRadius: 6,\n        borderColor: '#f0f0f0', // Light grey border\n        borderWidth: 1, // Border width\n        fontFamily: 'open-sans-regular',\n    },\n    adImage: {\n        width: '100%',\n        height: 140,\n        backfaceVisibility: 'hidden',\n        borderTopLeftRadius: 15, // Match border radius of card\n        borderTopRightRadius: 15, // Match border radius of card\n    },\n    adDetails: {\n        flex: 1,\n        padding: 12, // Slightly more padding\n    },\n    adTitle: {\n        fontSize: 14, // Reduced font size for title\n        //fontWeight: 'bold',\n        marginBottom: 5,\n        color: 'white', // Darker text color for better readability\n        fontFamily: 'open-sans-bold',\n    },\n    adLocation: {\n        fontSize: 14, // Reduced font size for location\n        color: 'white', // Lighter text color for location\n        marginBottom: 8, // Added margin-bottom for spacing\n    },\n    adInfo: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    adPrice: {\n        fontSize: 16,\n        color: '#deac47',\n        fontFamily: 'open-sans-bold',\n    },\n    adBedrooms: {\n        fontSize: 12,\n        color: '#999',\n    },\n    loaderContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#005AAA', // Adjust the color and opacity to match your gradient\n    },\n    filterButtonsContainer: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        padding: 10,\n        //marginBottom: 20,\n    },\n    filterButton: {\n        borderWidth: 1,\n        borderColor: '#007DBC',\n        paddingVertical: 8,\n        paddingHorizontal: 20,\n        borderRadius: 20,\n        marginHorizontal: 5,\n        backgroundColor: 'white',\n    },\n    filterButtonActive: {\n        backgroundColor: '#007DBC',\n    },\n    filterText: {\n        color: '#007DBC',\n        textAlign: 'center',\n    },\n    filterTextActive: {\n        color: 'white',\n        textAlign: 'center',\n    },\n});\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    Image,\n    ScrollView,\n    Switch,\n    StyleSheet,\n    Button,\n} from 'react-native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport RNPickerSelect from 'react-native-picker-select';\nimport * as ImagePicker from 'expo-image-picker'; // For image upload\nimport { RNS3 } from 'react-native-aws3'; // For S3 upload\nimport { useUser } from '../context/UserContext';\nimport axios from 'axios';\nimport Toast from 'react-native-toast-message'; // Import the toast library\nimport API_BASE_URL from '../services/config';\nimport { useNavigation, } from '@react-navigation/native';\nimport { AuthOpen } from '../hooks/useAuth';\n\nexport default function PostAdScreen({ route }) {\n    const navigation = useNavigation();\n    const { userToken, userDetails, userInfo } = useUser();\n    const [images, setImages] = useState([]); // Store image URIs\n    const [location, setLocation] = useState(route.params?.ad?.location || null);\n    const [adTitle, setAdTitle] = useState(route.params?.ad?.adTitle || '');\n    const [adDescription, setAdDescription] = useState(route.params?.ad?.adDescription || '');\n    const [phone, setPhone] = useState(route.params?.ad?.phone || '');\n    const [email, setEmail] = useState(route.params?.ad?.email || '');\n    const [price, setPrice] = useState(route.params?.ad?.price || 0);\n    const [maxResidents, setMaxResidents] = useState(route.params?.ad?.maxResidents || 1);\n    const [preference, setPreference] = useState(route.params?.ad?.preference || null);\n    const [isMaleOnly, setIsMaleOnly] = useState(route.params?.ad?.isMaleOnly || false);\n    const [isFurnished, setIsFurnished] = useState(route.params?.ad?.isFurnished || false);\n    const [hasAttachedBathroom, setHasAttachedBathroom] = useState(\n        route.params?.ad?.hasAttachedBathroom || false\n    );\n    const [isBachelorsAllowed, setIsBachelorsAllowed] = useState(\n        route.params?.ad?.isBachelorsAllowed || false\n    );\n    const [loading, setLoading] = useState(false); // Loading state\n    const handleImageUpload = async () => {\n        const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n        if (permissionResult.granted === false) {\n            alert('Permission to access camera roll is required!');\n            return;\n        }\n\n        const pickerResult = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n            multiple: true, // Allow selecting multiple images\n        });\n        if (!pickerResult.cancelled) {\n            // Create a new array with the selected image URIs\n            const newImages = [...images, pickerResult.assets[0].uri];\n            setImages(newImages);\n        }\n    };\n\n    const uploadImagesToS3 = async () => {\n\n        Toast.show({\n            type: 'error',\n            text1: 'Error Uploading Image',\n            text2: 'Please try again later.',\n        });\n        let s3Images = [];\n\n        for (const imageUri of images) {\n            const options = {\n                keyPrefix: 'uploads/',\n                bucket: 'primecaves',\n                region: 'ap-south-1',\n                accessKey: 'AKIARM6FSFR7MWP7YQUY',\n                secretKey: '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',\n                successActionStatus: 201,\n            };\n            const file = {\n                uri: imageUri,\n                name: `${userToken.toString()}-${Date.now()}.jpeg`,\n                type: 'image/jpeg',\n            };\n\n            try {\n                const response = await RNS3.put(file, options);\n                if (response.status !== 201) {\n                    throw new Error('Failed to upload image to S3');\n                }\n\n                const s3ImageUrl = response.body.postResponse.location;\n                s3Images.push(s3ImageUrl);\n            } catch (error) {\n                console.error('Error uploading image:', error);\n                // Show a toast message for the error\n                Toast.show({\n                    type: 'error',\n                    text1: 'Error Uploading Image',\n                    text2: 'Please try again later.',\n                });\n\n            }\n        }\n\n        return s3Images;\n    };\n\n\n    const handleSubmit = async () => {\n        try {\n            let s3Images = [];\n            // Upload images to S3 and wait for the operation to complete\n            if (images) {\n                s3Images = await uploadImagesToS3();\n            }\n            const postData = {\n                images: s3Images,\n                location,\n                adTitle,\n                adDescription,\n                phone,\n                email,\n                maxResidents,\n                preference,\n                isMaleOnly,\n                isFurnished,\n                hasAttachedBathroom,\n                isBachelorsAllowed,\n                price,\n                userId: userDetails._id,\n                user: {\n                    firebaseId: userInfo.firebaseId,\n                    gender: userDetails.gender,\n                    image: userDetails.image,\n                    name: userDetails.name,\n                    phone: userDetails.phoneNumber\n                }\n            };\n            setLoading(true);\n            if (route.params?.ad) {\n                // If route.params.ad exists, it means we're updating an existing ad\n                const response = await axios.put(\n                    `${API_BASE_URL}/rentpost/update/${route.params.ad._id}`,\n                    postData\n                );\n\n                // Check the response status and show a success or error toast\n                if (response.status === 200) {\n                    // Ad updated successfully\n                    console.log('Rental post updated successfully.');\n                    Toast.show({\n                        type: 'success',\n                        text1: 'Rental Post Updated',\n                        text2: 'Your rental post has been successfully updated.',\n                    });\n                    navigation.navigate('HomeTabNavigator');\n                } else {\n                    console.error('Failed to update rental post.');\n                    Toast.show({\n                        type: 'error',\n                        text1: 'Error Updating Rental Post',\n                        text2: 'Please try again later.',\n                    });\n                }\n            } else {\n                // If route.params.ad does not exist, it means we're creating a new ad\n                const response = await axios.post(`${API_BASE_URL}/rentpost/create`, postData);\n\n                // Check the response status and show a success or error toast\n                if (response.status === 201) {\n                    // Ad created successfully\n                    console.log('Rental post created successfully.');\n                    Toast.show({\n                        type: 'success',\n                        text1: 'Rental Post Created',\n                        text2: 'Your rental post has been successfully created.',\n                    });\n                    // navigation.navigate('HomeTabNavigator')\n                    navigation.goBack()\n                } else {\n                    console.error('Failed to create rental post.');\n                    Toast.show({\n                        type: 'error',\n                        text1: 'Error Creating Rental Post',\n                        text2: 'Please try again later.',\n                    });\n                }\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            // Handle error appropriately (e.g., show an error message to the user)\n            Toast.show({\n                type: 'error',\n                text1: 'Error',\n                text2: 'Please try again later.',\n            });\n        } finally {\n            // Set loading state back to false when done\n            setLoading(false);\n        }\n    };\n\n    return (\n        <ScrollView style={styles.container}>\n            <View style={styles.imageContainer}>\n                {/* Custom back button with Ionicons */}\n                <TouchableOpacity\n                    style={styles.backButton}\n                    onPress={() => navigation.goBack()}\n                >\n                    <Ionicons name=\"arrow-back\" size={24} color=\"#007DBC\" />\n                </TouchableOpacity>\n                {/* ... Your existing JSX ... */}\n            </View>\n            <View style={styles.imageContainer}>\n                <Text style={styles.heading}>Upload Photos</Text>\n                <TouchableOpacity style={styles.imageUploadButton} onPress={handleImageUpload}>\n                    <Text style={styles.uploadButtonText}>Select Images</Text>\n                </TouchableOpacity>\n                <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n                    {images.map((imageUri, index) => (\n                        <Image key={index} source={{ uri: imageUri }} style={styles.image} />\n                    ))}\n                </ScrollView>\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Location</Text>\n                <RNPickerSelect\n                    placeholder={{ label: 'Select Location', value: null }}\n                    onValueChange={(value) => setLocation(value)}\n                    items={[\n                        { label: 'Patia', value: 'Patia' },\n                        { label: 'Nayapali', value: 'Nayapali' },\n                        { label: 'CSpur', value: 'CSpur' },\n                        { label: 'Master Canteen', value: 'Master Canteen' },\n                    ]}\n                    style={pickerSelectStyles}\n                    value={location}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Ad Title</Text>\n                <TextInput\n                    style={styles.input}\n                    value={adTitle}\n                    onChangeText={setAdTitle}\n                    placeholder=\"Enter Ad Title\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Ad Description</Text>\n                <TextInput\n                    style={[styles.input, styles.multilineInput]}\n                    value={adDescription}\n                    onChangeText={setAdDescription}\n                    multiline\n                    placeholder=\"Enter Ad Description\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Phone Number</Text>\n                <TextInput\n                    style={styles.input}\n                    value={phone}\n                    onChangeText={setPhone}\n                    keyboardType=\"numeric\"\n                    placeholder=\"Enter Phone Number\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Email</Text>\n                <TextInput\n                    style={styles.input}\n                    value={email}\n                    onChangeText={setEmail}\n                    keyboardType=\"email-address\"\n                    placeholder=\"Enter Email\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Price</Text>\n                <TextInput\n                    style={styles.input}\n                    value={price}\n                    onChangeText={setPrice}\n                    keyboardType=\"numeric\"\n                    placeholder=\"Enter Price\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Maximum Residents</Text>\n                <View style={styles.stepperContainer}>\n                    <TouchableOpacity\n                        style={styles.stepperButton}\n                        onPress={() => maxResidents > 1 && setMaxResidents(maxResidents - 1)}\n                    >\n                        <Text style={styles.stepperButtonText}>-</Text>\n                    </TouchableOpacity>\n                    <Text style={styles.stepperValue}>{maxResidents}</Text>\n\n                    <TouchableOpacity\n                        style={styles.stepperButton}\n                        onPress={() => setMaxResidents(maxResidents + 1)}\n                    >\n                        <Text style={styles.stepperButtonText}>+</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Preference</Text>\n                <RNPickerSelect\n                    value={preference}\n                    placeholder={{ label: 'Select Preference', value: null }}\n                    onValueChange={(value) => setPreference(value)}\n                    items={[\n                        { label: 'Family', value: 'Family' },\n                        { label: 'Student', value: 'Student' },\n                        { label: 'Working Professional', value: 'Working Professional' },\n                    ]}\n                    style={pickerSelectStyles}\n\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Room for Male Only</Text>\n                <Switch\n                    value={isMaleOnly}\n                    onValueChange={setIsMaleOnly}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Furnishing</Text>\n                <Switch\n                    value={isFurnished}\n                    onValueChange={setIsFurnished}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Attached Bathroom</Text>\n                <Switch\n                    value={hasAttachedBathroom}\n                    onValueChange={setHasAttachedBathroom}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Bachelors Allowed</Text>\n                <Switch\n                    value={isBachelorsAllowed}\n                    onValueChange={setIsBachelorsAllowed}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <TouchableOpacity\n                style={styles.submitButton}\n                onPress={handleSubmit}\n                disabled={loading} // Disable the button while loading\n            >\n                <Text style={styles.submitButtonText}>{loading ? 'Loading...' : 'Submit'}</Text>\n            </TouchableOpacity>\n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16,\n        backgroundColor: '#fff',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        color: '#007DBC',\n    },\n    imageContainer: {\n        marginBottom: 20,\n    },\n    imageUploadButton: {\n        backgroundColor: '#007DBC',\n        padding: 10,\n        borderRadius: 5,\n        alignItems: 'center',\n        bottom: 8,\n    },\n    uploadButtonText: {\n        color: 'white',\n        fontWeight: 'bold',\n    },\n    image: {\n        width: 100,\n        height: 100,\n        marginRight: 10,\n        borderRadius: 5,\n    },\n    fieldContainer: {\n        marginBottom: 20,\n    },\n    label: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginBottom: 5,\n        color: '#007DBC',\n    },\n    input: {\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n        padding: 10,\n    },\n    multilineInput: {\n        minHeight: 100,\n        textAlignVertical: 'top',\n    },\n    stepperContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    stepperButton: {\n        backgroundColor: '#007DBC',\n        padding: 8,\n        borderRadius: 20,\n        marginHorizontal: 5,\n    },\n    stepperButtonText: {\n        color: 'white',\n        fontSize: 18,\n    },\n    stepperValue: {\n        fontSize: 16,\n    },\n    submitButton: {\n        backgroundColor: '#007DBC',\n        padding: 16,\n        borderRadius: 5,\n        alignItems: 'center',\n    },\n    submitButtonText: {\n        color: 'white',\n        fontWeight: 'bold',\n        fontSize: 18,\n    },\n});\n\n\nconst pickerSelectStyles = StyleSheet.create({\n    inputIOS: {\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n        paddingVertical: 12,\n        paddingHorizontal: 10,\n        paddingRight: 30, // to ensure the text is never behind the icon\n        marginBottom: 20,\n    },\n    inputAndroid: {\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n        paddingVertical: 10,\n        paddingHorizontal: 10,\n        paddingRight: 30, // to ensure the text is never behind the icon\n        marginBottom: 20,\n    },\n});\n","import React, { useEffect, useCallback, useState } from 'react';\nimport {\n    View,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    Modal,\n    StyleSheet,\n    Platform,\n    ActivityIndicator,\n    Image,\n    ScrollView\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport { RNS3 } from 'react-native-aws3';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport Toast from 'react-native-toast-message';\nimport Autocomplete from 'react-native-autocomplete-input';\nimport { AuthOpen } from '../hooks/useAuth'\nimport { serverTimestamp, updateDoc, doc, setDoc } from 'firebase/firestore';\nimport { getAuth, updateProfile as updateAuthProfile } from 'firebase/auth';\nimport { db } from '../firebase/firebase';\nimport * as Location from 'expo-location';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport maleIcon from '../assets/images/male.png';\nimport femaleIcon from '../assets/images/female.png';\nimport student from '../assets/images/student.png';\nimport professionals from '../assets/images/professionals.png';\nimport family from '../assets/images/family.png';\nconst domains = ['gmail.com', 'hotmail.com', 'yahoo.com', 'outlook.com'];\n\nconst UpdateProfileModal = ({ isVisible, onDismiss, isUserExists, setLocationModal }) => {\n    const { setUserInfoToStore } = useUser()\n    const { userToken, userInfo } = useUser();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [userId, setUserId] = useState('');\n    const [gender, setGender] = useState('');\n    const [tenantType, setTenantType] = useState('');\n    const [image, setImage] = useState(null);\n    const [isLoading, setLoading] = useState(false);\n    const [suggestions, setSuggestions] = useState([]);\n    const [fieldsDisabled, setFieldsDisabled] = useState(true);\n    const [userLocation, setUserLocation] = useState(''); // State variable to store user's location\n    const handleGenderSelect = (selectedGender) => {\n        setGender(selectedGender);\n    };\n\n    const requestLocationPermission = async () => {\n        try {\n            const { status } = await Location.requestForegroundPermissionsAsync();\n            if (status !== 'granted') {\n                // Handle permission denied or other errors\n                console.error('Location permission denied.');\n                return;\n            }\n            const location = await Location.getCurrentPositionAsync({});\n            setUserLocation(location); // Store user's location in state\n        } catch (error) {\n            console.error('Error getting user location:', error);\n        }\n    };\n\n    const updateProfileToFirebase = async ({ name, pic, email, isEdit }) => {\n        try {\n            const newDocRef = doc(db, 'user_profiles', userInfo.firebaseId);\n            const handler = isEdit ? updateDoc : setDoc;\n            await handler(newDocRef, {\n                id: userInfo.firebaseId,\n                name,\n                pic,\n                email,\n                phone: userToken.toString(),\n                timestamp: serverTimestamp(),\n            });\n            const auth = getAuth();\n            await updateAuthProfile(auth.currentUser, {\n                displayName: name,\n                photoURL: pic,\n            });\n            console.log('Updated to Firestore and Firebase Authentication');\n        } catch (error) {\n            console.error('Error updating profile:', error);\n        }\n    };\n\n    const handleTenantTypeSelect = (selectedType) => {\n        setTenantType(selectedType);\n    };\n\n    const handleChooseImage = async () => {\n        const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n        if (permissionResult.granted === false) {\n            alert('Permission to access media library is required!');\n            return;\n        }\n\n        const pickerResult = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n        });\n\n        if (!pickerResult.cancelled) {\n            const selectedImageUri = pickerResult.assets[0].uri;\n            setImage(selectedImageUri);\n        }\n    };\n\n    const handleEmailChange = (text) => {\n        setEmail(text);\n        const query = text.split('@')[1];\n        const filteredDomains = domains.filter((domain) => domain.includes(query));\n        setSuggestions(filteredDomains);\n    };\n\n    const handleUpdate = useCallback(async () => {\n        setLoading(true);\n        let s3ImageUrl = null;\n        const isEdit = userId !== ''\n        try {\n            if (image) {\n                const options = {\n                    keyPrefix: 'uploads/',\n                    bucket: 'primecaves',\n                    region: 'ap-south-1',\n                    accessKey: 'AKIARM6FSFR7MWP7YQUY',\n                    secretKey: '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',\n                    successActionStatus: 201,\n                };\n                let file;\n                if (Platform.OS === 'web') {\n                    const blob = await fetch(image).then((res) => res.blob());\n                    file = {\n                        uri: image,\n                        name: `${userToken.toString()}.jpeg`,\n                        type: 'image/jpeg',\n                        blob,\n                    };\n                } else {\n                    file = {\n                        uri: image,\n                        name: `${userToken.toString()}.jpeg`,\n                        type: 'image/jpeg',\n                    };\n                }\n                const response = await RNS3.put(file, options);\n                if (response.status !== 201) {\n                    throw new Error('Failed to upload image to S3');\n                }\n                s3ImageUrl = response.body.postResponse.location;\n            }\n            const apiEndpoint = isEdit\n                ? `${API_BASE_URL}/user/update/${userId}`\n                : `${API_BASE_URL}/user/register`;\n            const method = isEdit ? 'PUT' : 'POST'\n            const response = await fetch(apiEndpoint, {\n                method,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    tenantType,\n                    image,\n                    name,\n                    email,\n                    gender,\n                    phoneNumber: userToken.toString(),\n                    firebaseId: userInfo.firebaseId,\n                    location: userLocation,\n                }),\n            });\n\n            if (response.ok) {\n                const responseData = await response.json();\n                onDismiss();\n                if (!isUserExists) {\n                    setLocationModal(true)\n                }\n                updateProfileToFirebase({ name, pic: image, email, isEdit })\n                setUserInfoToStore({\n                    name, image, email,\n                    gender,\n                    phone: userToken.toString(),\n                    firebaseId: userInfo.firebaseId,\n                    tenantType,\n                    subscriptionStartDate: isEdit ? userInfo.subscriptionStartDate : 'NA',\n                    location: userLocation,\n                })\n                Toast.show({\n                    type: 'success',\n                    text1: 'Success',\n                    text2: 'Profile saved successfully',\n                });\n\n            } else {\n                console.error('Save failed');\n            }\n        } catch (error) {\n            console.error('Error during save:', error);\n            Toast.show({\n                type: 'error',\n                text1: 'Error',\n                text2: 'Profile failed to save',\n            });\n        } finally {\n            setLoading(false);\n        }\n    }, [userToken, name, email, gender, image, tenantType]);\n\n    useEffect(() => {\n        requestLocationPermission();\n        if (isVisible && isUserExists) {\n            setFieldsDisabled(true);\n            const fetchUserDetails = async () => {\n                try {\n                    const response = await fetch(`${API_BASE_URL}/user/getUserByPhoneNumber/${userToken.toString()}`);\n                    if (response.ok) {\n                        const userData = await response.json();\n                        setName(userData.name || '');\n                        setEmail(userData.email || '');\n                        setGender(userData.gender || '');\n                        setTenantType(userData.tenantType || '');\n                        setUserId(userData._id || '');\n                        setFieldsDisabled(false);\n                    } else {\n                        console.error('Failed to fetch user details');\n                    }\n                } catch (error) {\n                    console.error('Error fetching user details:', error);\n                    setFieldsDisabled(false);\n                }\n            };\n\n            fetchUserDetails();\n        }\n    }, [isVisible, userToken]);\n\n\n    const updateButtonStyle = [\n        styles.actionButton,\n        { backgroundColor: '#007DBC', left: 5 }, // Set background color to #007DBC\n    ];\n\n    return (\n        <Modal visible={isVisible} transparent={true} animationType=\"slide\">\n            <View style={styles.modalContainer}>\n                <LinearGradient // Use LinearGradient for the gradient background\n                    colors={['#007DBC', '#005CA1']} // Gradient colors\n                    style={styles.linearGradient}\n                >\n                    <View style={styles.modalContent}>\n                        {isUserExists && ( // Conditionally render the close icon\n                            <TouchableOpacity\n                                style={styles.closeButton}\n                                onPress={onDismiss}\n                            >\n                                <MaterialCommunityIcons\n                                    name=\"close\"\n                                    size={24}\n                                    color=\"white\" // Set the close icon color to white\n                                />\n                            </TouchableOpacity>\n                        )}\n                        <Text style={styles.modalTitle}>Update Profile</Text>\n                        <View style={styles.chooseImageButton}>\n                            <MaterialCommunityIcons\n                                name=\"camera\"\n                                size={24}\n                                color=\"#007DBC\"\n                                style={{ marginRight: 8 }}\n                            />\n                            <Text style={styles.chooseImageText}>Choose Image</Text>\n                        </View>\n                        {image && (\n                            <Image\n                                source={{ uri: image }}\n                                style={styles.profileImage}\n                            />\n                        )}\n                        <TextInput\n                            style={styles.input}\n                            placeholder=\"Name\"\n                            placeholderTextColor={\"#E7E0C3\"}\n                            value={name}\n                            onChangeText={(text) => setName(text)}\n                        />\n                        <TextInput\n                            style={styles.input}\n                            placeholder=\"Email\"\n                            textContentType=\"emailAddress\"\n                            placeholderTextColor={\"#E7E0C3\"}\n                            value={email}\n                            onChangeText={handleEmailChange}\n                        />\n                        <View style={styles.genderContainer}>\n                            <Text style={styles.label}>Gender</Text>\n                            <View style={styles.radioButtons}>\n                                <TouchableOpacity\n                                    onPress={() => handleGenderSelect('male')}\n                                    style={[\n                                        styles.radioButton,\n                                        gender === 'male' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={maleIcon}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={gender === 'male' ? styles.radioButtonTextSelected : styles.radioButtonText}>Male</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity\n                                    onPress={() => handleGenderSelect('female')}\n                                    style={[\n                                        styles.radioButton,\n                                        gender === 'female' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={femaleIcon}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={gender === 'female' ? styles.radioButtonTextSelected : styles.radioButtonText}>Female</Text>\n                                </TouchableOpacity>\n                            </View>\n                        </View>\n                        <View style={styles.tenantTypeContainer}>\n                            <Text style={styles.label}>I am</Text>\n                            <View style={styles.radioButtonsTenantType}>\n                                <TouchableOpacity\n                                    onPress={() => handleTenantTypeSelect('student')}\n                                    style={[\n                                        styles.radioButtonTenantType,\n                                        tenantType === 'student' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={student}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={tenantType === 'student' ? styles.radioButtonTextSelected : styles.radioButtonText}>Student</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity\n                                    onPress={() => handleTenantTypeSelect('professional')}\n                                    style={[\n                                        styles.radioButtonTenantType,\n                                        tenantType === 'professional' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={professionals}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={tenantType === 'professional' ? styles.radioButtonTextSelected : styles.radioButtonText}>Working Professional</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity\n                                    onPress={() => handleTenantTypeSelect('family')}\n                                    style={[\n                                        styles.radioButtonTenantType,\n                                        tenantType === 'family' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={family}\n                                        style={{ width: 24, height: 24, }}\n                                    />\n                                    <Text style={tenantType === 'family' ? styles.radioButtonTextSelected : styles.radioButtonText}>Family</Text>\n                                </TouchableOpacity>\n                            </View>\n                        </View>\n                        {isLoading ? (\n                            <ActivityIndicator size=\"small\" color=\"#dddddd\" style={styles.loader} />\n                        ) : (\n                            <View style={styles.buttonContainer}>\n                                <TouchableOpacity\n                                    style={updateButtonStyle}\n                                    onPress={handleUpdate}\n                                >\n                                    <Text style={styles.buttonText}>Save</Text>\n                                </TouchableOpacity>\n                            </View>\n                        )}\n                    </View>\n                </LinearGradient>\n            </View>\n        </Modal>\n    );\n};\nconst styles = StyleSheet.create({\n    tenantTypeContainer: {\n        width: '100%',\n        marginBottom: 10,\n    },\n    actionButton: {\n        padding: 10,\n        borderRadius: 5,\n        width: '100%',\n        alignItems: 'center',\n    },\n    loader: {\n        marginTop: 10,\n    },\n    buttonText: {\n        color: 'white',\n        fontFamily: 'open-sans-bold'\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    profileImage: {\n        width: 100,\n        height: 100,\n        borderRadius: 50,\n        marginTop: 10,\n    },\n    scrollViewContent: {\n        flexGrow: 1, // Allow the content to grow vertically\n    },\n    modalContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    },\n    linearGradient: {\n        width: '80%', // Set the width to 100% to cover the entire modal\n    },\n    modalContent: {\n        padding: 20,\n        borderRadius: 10,\n        alignItems: 'center',\n        backgroundColor: 'transparent', // Make the content background transparent\n    },\n    modalTitle: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        color: 'white', // Set the text color to white\n        fontFamily: 'open-sans-regular',\n    },\n    input: {\n        width: '100%',\n        borderWidth: 1,\n        borderColor: 'white', // Set the border color to white\n        borderRadius: 10,\n        padding: 15,\n        marginBottom: 20,\n        fontSize: 16,\n        backgroundColor: 'transparent', // Make the input background transparent\n        color: 'white', // Set the text color to white\n        fontFamily: 'open-sans-light',\n    },\n    closeButton: {\n        position: 'absolute',\n        top: 10,\n        right: 10,\n        zIndex: 1,\n    },\n    chooseImageButton: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: 10,\n    },\n    chooseImageText: {\n        color: '#007DBC',\n        fontFamily: 'open-sans-bold'\n    },\n    genderContainer: {\n        width: '100%',\n        marginBottom: 10,\n    },\n    label: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginBottom: 5,\n        color: 'white'\n    },\n    radioButtons: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n\n    },\n    radioButton: {\n        flexDirection: 'row', // Make it horizontal\n        alignItems: 'center',\n        borderWidth: 0.4,\n        borderRadius: 5,\n        padding: 10,\n        marginRight: 10,\n    },\n    radioButtonSelected: {\n        borderColor: '#dddddd',\n        borderRadius: 5,\n        borderWidth: 1,\n        backgroundColor: '#007DBC', // Set background color to blue on selection\n    },\n    radioButtonText: {\n        color: 'white',\n        fontFamily: 'open-sans-regular',\n        marginLeft: 10,\n    },\n    radioButtonTextSelected: {\n        color: 'white', // Set text color to white on selection\n        marginLeft: 10, // Add margin to separate text from icon\n        fontFamily: 'open-sans-regular'\n\n    },\n    radioButtonsTenantType: { // Center items vertically\n        justifyContent: 'space-between',\n        marginBottom: 20, // Add margin to separate options\n    },\n\n    radioButtonTenantType: {\n        flexDirection: 'row',\n        borderWidth: 0.4,\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10, // Add margin to separate options\n    },\n\n});\n\nexport default UpdateProfileModal;\n\n","const getMatchedUserInfo = (users, userLoggedIn) => {\n  const newUsers = { ...users };\n  delete newUsers[userLoggedIn];\n\n  const [id, user] = Object.entries(newUsers).flat();\n\n  return { id, ...user };\n};\n\nexport default getMatchedUserInfo;\n","const generateId = (id1, id2) => {\n    if (id1 > id2) {\n        return id1 + id2\n    } else {\n        return id2 + id1\n    }\n}\n\nexport default generateId;","\nimport React, { useEffect, useState } from \"react\";\nimport { View, Text, TouchableOpacity, Image, StyleSheet } from \"react-native\";\n\nimport { useNavigation } from '@react-navigation/native';\nimport tw from \"tailwind-rn\";\nimport { collection, onSnapshot, orderBy, query } from \"@firebase/firestore\";\nimport { db } from \"../firebase/firebase\";\nimport getMatchedUserInfo from \"../utils/getMatchedUserInfo\";\nimport { useUser } from \"../context/UserContext\";\nimport generateId from \"../utils/generateIds\";\n\nconst ChatRow = ({ matchDetails }) => {\n  const navigation = useNavigation();\n  const { userInfo } = useUser();\n  const [lastMessage, setLastmessage] = useState(\"\");\n  const [matchedUserInfo, setMatchedUserInfo] = useState(null);\n  useEffect(() => {\n    setMatchedUserInfo(getMatchedUserInfo(matchDetails.users, userInfo.firebaseId));\n  }, [matchDetails, userInfo]);\n\n  useEffect(\n    () => {\n      if (matchedUserInfo) {\n        onSnapshot(\n          query(\n            collection(db, \"matches\",\n              generateId(userInfo.firebaseId, matchedUserInfo.id)\n              , \"messages\"),\n            orderBy(\"timestamp\", \"desc\")\n          ),\n          (snapshot) => setLastmessage(snapshot.docs[0]?.data()?.message)\n        )\n      }\n    },\n    [matchedUserInfo, db]\n  );\n  let userDetails;\n  if (matchedUserInfo) {\n    userDetails = matchDetails.users[matchedUserInfo.id];\n  }\n\n\n  const handleDirectMessage = () => {\n    navigation.navigate('MessagWithData', {\n      userDetails\n    })\n  };\n  return (\n    <TouchableOpacity\n      style={[\n        tw(\"flex-row items-center py-3 px-5 bg-white mx-3 my-1 rounded-lg\"),\n        styles.cardShadow,\n      ]}\n      onPress={handleDirectMessage}\n    >\n      {matchedUserInfo ? (\n        <>\n          <Image\n            style={tw(\"rounded-full h-16 w-16 mr-4\")}\n            source={{\n              uri:\n                matchedUserInfo?.photoUrl ||\n                'https://i.pinimg.com/736x/ff/a0/9a/ffa09aec412db3f54deadf1b3781de2a.jpg',\n            }}\n          />\n          <View>\n            <Text style={tw(\"text-lg font-bold\")}>\n              {matchedUserInfo?.name}\n            </Text>\n            <Text style={tw(\"font-light\")}>\n              {lastMessage?.length > 34\n                ? lastMessage?.substring(0, 34) + '...'\n                : lastMessage || 'Say Hi!'}\n            </Text>\n          </View>\n        </>\n      ) : (\n        <View style={tw('justify-center items-center')}>\n          <Text style={tw('text-lg text-gray-500')}>\n            Yet to have a conversation\n          </Text>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  cardShadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.41,\n    elevation: 2,\n  },\n});\n\n\nexport default ChatRow;\n","import { collection, onSnapshot, query, where } from \"@firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  View,\n  Text,\n  FlatList,\n  StyleSheet,\n} from \"react-native\";\nimport tw from \"tailwind-rn\";\nimport { AuthOpen } from \"../hooks/useAuth\";\nimport ChatRow from \"./ChatRow\";\nimport { db } from \"../firebase/firebase\";\nimport { useUser } from \"../context/UserContext\";\n\nconst ChatList = () => {\n  const [matches, setMatches] = useState([]);\n  const { userInfo } = useUser();\n  const [loading, setLoading] = useState(true);\n  useEffect(\n    () =>\n      onSnapshot(\n        query(\n          collection(db, \"matches\"),\n          where(\"usersMatched\", \"array-contains\", userInfo.firebaseId)\n        ),\n        (snapshot) =>\n          setMatches(\n            snapshot.docs.map(\n              (doc) => ({\n                id: doc.id,\n                ...doc.data(),\n              }),\n              setLoading(false)\n            )\n          )\n      ),\n    [userInfo]\n  );\n\n  return loading ? (\n    <View style={[styles.container, styles.horizontal]}>\n      <ActivityIndicator size=\"large\" color=\"#29325C\" />\n    </View>\n  ) : matches.length > 0 ? (\n    <FlatList\n      style={tw(\"h-full\")}\n      data={matches}\n      keyExtractor={(item) => item.id}\n      renderItem={({ item }) => <ChatRow matchDetails={item} />}\n    />\n  ) : (\n    <View style={tw(\"p-5\")}>\n      <Text style={tw(\"text-center text-lg\")}>No Message at the moment 😢</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n  },\n});\n\nexport default ChatList;\n","import { useNavigation } from \"@react-navigation/core\";\nimport React, { useEffect } from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport ChatList from \"../components/ChatList\";\nimport Header from \"../components/Header\";\n\nconst Chat = () => {\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView>\n      <ChatList />\n    </SafeAreaView>\n  );\n};\n\nexport default Chat;\n","import React, { useState, useEffect } from 'react';\nimport { View, TouchableOpacity, StyleSheet, Modal, Text, TextInput, FlatList, ScrollView } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport axios from 'axios';\nimport API_BASE_URL from '../services/config';\nimport { useUser } from '../context/UserContext';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport { logEvent } from 'firebase/analytics';\nimport { analytics } from '../firebase/firebase';\nconst DEFAULT_LOCATION = {\n  label: 'Patia',\n  value: 'Patia',\n}\nconst CustomHeader = ({ navigation, onSettingPress, showBack = false, locationModal = false, setLocationModal }) => {\n  const { setUserInfoToStore, useToken } = useUser()\n  const [selectedLocation, setSelectedLocation] = useState(DEFAULT_LOCATION);\n  const [allLocations, setLocations] = useState([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [suggestedLocations, setSuggestedLocations] = useState([]);\n  const [topLocations, setTopLocations] = useState([]);\n\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/user/getAllLocations`); // Replace with your API endpoint\n        const { locations = [] } = response.data;\n        const fetchedLocations = locations.map(location => ({\n          label: location,\n          value: location\n        }));\n        setLocations(fetchedLocations);\n        setTopLocations(fetchedLocations.slice(0, 30));\n      } catch (error) {\n        console.error('Error fetching locations in component:', error);\n      }\n    };\n\n    fetchLocations();\n  }, []);\n\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n    const filteredLocations = allLocations.filter((location) =>\n      location.label.toLowerCase().includes(query.toLowerCase())\n    );\n    setSuggestedLocations(filteredLocations);\n  };\n\n  const clearSearch = () => {\n    setSearchQuery('');\n    setSuggestedLocations([]);\n  };\n\n  const selectLocation = (location) => {\n    logEvent(analytics, \"location changed\", location);\n    setSelectedLocation(location);\n    setModalVisible(false);\n    if (locationModal) {\n      setLocationModal(false);\n    }\n    setSearchQuery('');\n    setSuggestedLocations([]);\n    setUserInfoToStore(location)\n  };\n\n  const renderLocationItem = ({ item }) => (\n    <TouchableOpacity style={styles.locationItem} onPress={() => selectLocation(item)}>\n      <Text style={styles.locationText}>{item.label}</Text>\n    </TouchableOpacity>\n  );\n\n  const renderTag = (item) => (\n    <TouchableOpacity style={styles.tag} onPress={() => selectLocation(item)}>\n      <Text style={styles.tagText}>{item.label}</Text>\n    </TouchableOpacity>\n  );\n\n  return (\n    <SafeAreaView edges={['top']} style={{ flex: 0, backgroundColor: 'transparent' }}>\n      <LinearGradient colors={['#007DBC', '#005AAA']} style={styles.header}>\n        <View style={styles.leftContainer}>\n          {showBack && (\n            <TouchableOpacity onPress={() => navigation.goBack()} style={styles.iconButton}>\n              <Icon name=\"arrow-back\" size={24} color=\"#fff\" />\n            </TouchableOpacity>\n          )}\n          <TouchableOpacity style={styles.selectedLocationContainer} onPress={() => setModalVisible(true)}>\n            <Text style={styles.selectedLocationText}>\n              {selectedLocation ? selectedLocation.label : 'Select Location'}\n            </Text>\n            <Icon name=\"chevron-down\" size={20} color=\"#fff\" style={styles.downIcon} />\n          </TouchableOpacity>\n        </View>\n        <TouchableOpacity onPress={onSettingPress} style={styles.iconButton}>\n          <Icon name=\"settings\" size={24} color=\"#fff\" />\n        </TouchableOpacity>\n      </LinearGradient>\n\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={locationModal || modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalView}>\n          <LinearGradient colors={['#007DBC', '#dddddd']} style={styles.modalGradient}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalHeaderText}>Select Location</Text>\n              <TouchableOpacity onPress={() => setModalVisible(false)}>\n                <Icon name=\"close\" size={24} color=\"#fff\" />\n              </TouchableOpacity>\n            </View>\n            <View style={styles.searchContainer}>\n              <TextInput\n                style={styles.searchInput}\n                placeholder=\"Search Location\"\n                placeholderTextColor=\"#fff\"\n\n                value={searchQuery}\n                onChangeText={handleSearch}\n              />\n              {searchQuery.length > 0 && (\n                <TouchableOpacity style={styles.clearIcon} onPress={clearSearch}>\n                  <Icon name=\"close-circle\" size={20} color=\"#fff\" />\n                </TouchableOpacity>\n              )}\n            </View>\n            <ScrollView showsHorizontalScrollIndicator={false} contentContainerStyle={styles.tagsContainer}>\n              {searchQuery.length > 0\n                ? suggestedLocations.map((location, index) => (\n                  <React.Fragment key={index}>\n                    {renderTag(location)}\n                  </React.Fragment>\n                ))\n                : topLocations.map((location, index) => (\n                  <React.Fragment key={index}>\n                    {renderTag(location)}\n                  </React.Fragment>\n                ))}\n            </ScrollView>\n          </LinearGradient>\n        </View>\n      </Modal>\n    </SafeAreaView>\n  );\n};\n\nconst tagSize = 90;\n\nconst styles = StyleSheet.create({\n  header: {\n    height: 60,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 10,\n    justifyContent: 'space-between',\n  },\n  leftContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  selectedLocationContainer: {\n    flexDirection: 'row',\n    marginLeft: 10,\n    alignItems: 'center',\n  },\n  downIcon: {\n    marginLeft: 5,\n  },\n  rightContainer: {\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n  iconButton: {\n    padding: 10,\n  },\n  selectedLocationText: {\n    color: '#fff',\n    fontSize: 18,\n    fontFamily: 'open-sans-regular',\n  },\n  modalView: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  modalGradient: {\n    width: '100%',\n    height: '60%',\n    padding: 20,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  modalHeaderText: {\n    color: '#fff',\n    fontSize: 18,\n    fontFamily: 'open-sans-regular',\n  },\n  searchContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    borderRadius: 10,\n    padding: 10,\n    marginTop: 20,\n  },\n  searchInput: {\n    flex: 1,\n    color: '#fff',\n    fontSize: 16,\n    fontFamily: 'open-sans-light',\n  },\n  clearIcon: {\n    marginLeft: 10,\n  },\n  locationList: {\n    marginTop: 20,\n  },\n  locationItem: {\n    padding: 10,\n    borderRadius: 5,\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    marginTop: 10,\n  },\n  locationText: {\n    color: '#fff',\n  },\n  tagsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    marginTop: 10,\n  },\n  tag: {\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    width: 170,\n    height: tagSize,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n    marginBottom: 10,\n  },\n  tagText: {\n    color: '#fff',\n    fontSize: 14,\n    textAlign: 'center',\n    fontFamily: 'open-sans-regular',\n  },\n});\n\nexport default CustomHeader;\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Modal, Pressable, TextInput } from 'react-native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useUser } from '../context/UserContext';\nimport Home from './Home';\nimport PostAdScreen from './PostAd';\nimport UpdateProfileModal from '../components/UpdateProfileModal';\nimport API_BASE_URL from '../services/config';\nimport { AuthOpen } from '../hooks/useAuth';\nimport Chat from './Chat';\nimport CustomHeader from '../components/CustomHeader';\nconst Tab = createBottomTabNavigator();\n\nconst HomeTabNavigator = ({ route }) => {\n    const navigation = useNavigation();\n    const adIds = route.params?.adIdm\n    const { logout, userToken, fetchUserDetails } = useUser();\n    const { logOut } = AuthOpen();\n    const [isModalVisible, setModalVisible] = React.useState(false);\n    const [isUpdateModalVisible, setUpdateModalVisible] = React.useState(false);\n    const [locationModal, setLocationModal] = React.useState(false);\n\n\n    const [isUserExists, setIsUserExists] = useState(false);\n    const [userProfileData, setUserProfileData] = React.useState({\n        name: '',\n        email: '',\n        gender: '',\n        phone: '',\n    });\n    const handleMyAds = () => {\n        navigation.navigate('UserAds')\n        setModalVisible(false)\n    }\n    const renderPopover = () => (\n        <Modal\n            visible={isModalVisible}\n            transparent={true}\n            onRequestClose={() => {\n                setModalVisible(false);\n                setUpdateModalVisible(false);\n            }}\n        >\n            <Pressable\n                style={styles.popoverBackground}\n                onPress={() => {\n                    setModalVisible(false);\n                    setUpdateModalVisible(false);\n                }}\n            >\n                <View style={styles.popoverContent}>\n\n                    <TouchableOpacity\n                        style={styles.popoverOption}\n                        onPress={handleUpdateProfile}\n                    >\n                        <Text style={styles.popoverOptionText}>Update Profile</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={styles.popoverOption}\n                        onPress={handleMyAds}\n                    >\n                        <Text style={styles.popoverOptionText}>My Ads</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={styles.popoverOption} onPress={handleLogout}>\n                        <Text style={styles.popoverOptionText}>Logout</Text>\n                    </TouchableOpacity>\n                </View>\n            </Pressable>\n        </Modal>\n    );\n\n    useEffect(() => {\n        if (adIds) {\n            setTimeout(() => {\n                navigation.navigate('SingleScreenAd', { adIds });\n            }, 100);\n        }\n    }, [adIds]);\n\n    useEffect(() => {\n        fetchUserExistsStatus()\n    }, []);\n\n    const fetchUserExistsStatus = async () => {\n        const checkPhoneResponse = await fetch(`${API_BASE_URL}/user/check-phone/${userToken.toString()}`);\n        const checkPhoneData = await checkPhoneResponse.json();\n        if (checkPhoneData.exists) {\n            fetchUserDetails()\n        }\n        setUpdateModalVisible(!checkPhoneData.exists)\n        setIsUserExists(checkPhoneData.exists)\n    }\n\n    const toggleModal = () => {\n        setModalVisible(!isModalVisible);\n        if (isUpdateModalVisible) {\n            setUpdateModalVisible(false);\n        }\n    };\n\n\n    const handleUpdateProfile = () => {\n        setModalVisible(false);\n        const fetchedProfileData = {\n            name: 'John Doe',\n            email: 'johndoe@example.com',\n            gender: 'Male',\n        };\n\n        setUserProfileData(fetchedProfileData);\n        setUpdateModalVisible(true);\n    };\n\n    const handleLogout = () => {\n        logout();\n        logOut()\n    };\n\n    const handleDismissUpdateModal = () => {\n        setUpdateModalVisible(false)\n        fetchUserExistsStatus()\n    }\n\n    const renderCustomHeader = () => {\n        return (\n            <CustomHeader\n                onBackPress={() => navigation.goBack()}\n                onSettingPress={toggleModal}\n                locationModal={locationModal}\n                setLocationModal={setLocationModal}\n            />\n        );\n    };\n    return (\n        <>\n            <Tab.Navigator\n                tabBarOptions={{\n                    activeTintColor: '#007DBC',\n                    inactiveTintColor: 'gray',\n                    showLabel: true,\n                    style: styles.tabBar,\n                    headerShown: false\n                }}\n                screenOptions={({ route }) => ({\n                    // headerRight: () => (\n                    //     <TouchableOpacity onPress={toggleModal}>\n                    //         <MaterialCommunityIcons\n                    //             name=\"cog\"\n                    //             size={24}\n                    //             color=\"#000\"\n                    //             style={{ marginRight: 16 }}\n                    //         />\n                    //     </TouchableOpacity>\n                    // ),\n                    header: renderCustomHeader\n\n                })}\n            >\n                <Tab.Screen\n                    name=\"HomeTabNavigator\"\n                    component={Home}\n                    options={{\n                        title: 'Home',\n                        tabBarIcon: ({ color, focused }) => (\n                            <MaterialCommunityIcons\n                                name={focused ? 'home' : 'home-outline'}\n                                size={24}\n                                color={color}\n                            />\n                        ),\n                    }}\n                />\n                <Tab.Screen\n                    name=\"PostAdScreen\"\n                    component={PostAdScreen}\n                    options={{\n                        title: '',\n                        tabBarIcon: ({ color, focused }) => (\n                            <MaterialCommunityIcons\n                                name={focused ? 'plus-circle' : 'plus-circle'}\n                                size={55}\n                                color={focused ? '#007DBC' : \"rgb(128, 128, 128)\"}\n                            />\n                        ),\n                    }}\n                />\n                <Tab.Screen\n                    name=\"Message\"\n                    component={Chat}\n                    options={{\n                        tabBarIcon: ({ color, focused }) => (\n                            <MaterialCommunityIcons\n                                name={focused ? 'message' : 'message'}\n                                size={24}\n                                color={color}\n                            />\n                        ),\n                    }}\n                />\n            </Tab.Navigator>\n            {renderPopover()}\n            {isUpdateModalVisible && (<UpdateProfileModal\n                isVisible={isUpdateModalVisible}\n                onDismiss={handleDismissUpdateModal}\n                userProfileData={userProfileData}\n                isUserExists={isUserExists}\n                setLocationModal={setLocationModal}\n                onUpdateProfile={(updatedData) => {\n                    // Handle updating the user profile here\n                    setUserProfileData(updatedData);\n                }}\n            />)}\n\n        </>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        padding: 16,\n    },\n    tabBar: {\n        backgroundColor: 'white',\n        borderTopWidth: 0,\n        elevation: 2,\n    },\n    addButton: {\n        backgroundColor: '#007DBC',\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        alignItems: 'center',\n        justifyContent: 'center',\n        bottom: 16,\n        elevation: 4,\n    },\n    addButtonText: {\n        color: 'white',\n        fontSize: 32,\n        fontWeight: 'bold',\n    },\n    popoverBackground: {\n        flex: 1,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    popoverContent: {\n        backgroundColor: '#fff',\n        padding: 16,\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: '#ccc',\n    },\n    popoverOption: {\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n    },\n    popoverOptionText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#007DBC',\n    },\n});\n\nexport default HomeTabNavigator;\n","import { Text, View } from 'react-native'\nimport React, { Component } from 'react'\n\nexport default class Default extends Component {\n    render() {\n        return (\n            <View>\n                <Text>Default</Text>\n            </View>\n        )\n    }\n}","// AdCard.js\nimport React from 'react';\nimport { View, Text, Image, TouchableOpacity, StyleSheet } from 'react-native';\n\nconst AdCard = ({ ad, onEdit, onDelete, onClaim }) => {\n    return (\n        <View style={styles.container}>\n            <Image source={{ uri: ad.images[0] }} style={styles.image} />\n            <Text style={styles.title}>{ad.adTitle}</Text>\n            <Text style={styles.location}>{ad.location}</Text>\n            <View style={styles.buttonContainer}>\n                <TouchableOpacity style={styles.button} onPress={() => onEdit(ad)}>\n                    <Text style={styles.buttonText}>Edit</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.button} onPress={() => onDelete(ad._id)}>\n                    <Text style={styles.buttonText}>Delete</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.button} onPress={() => onClaim(ad)}>\n                    <Text style={styles.buttonText}>Claim </Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'white',\n        borderRadius: 10,\n        padding: 10,\n        marginBottom: 20,\n        elevation: 2,\n    },\n    image: {\n        width: '100%',\n        height: 200,\n        borderRadius: 10,\n        marginBottom: 10,\n    },\n    title: {\n        fontSize: 16,\n        fontWeight: 'bold',\n    },\n    location: {\n        fontSize: 14,\n        color: 'gray',\n        marginBottom: 10,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    button: {\n        flex: 1,\n        backgroundColor: '#3182CE',\n        borderRadius: 5,\n        padding: 10,\n        alignItems: 'center',\n        marginHorizontal: 5,\n    },\n    buttonText: {\n        color: 'white',\n        fontWeight: 'bold',\n    },\n});\n\nexport default AdCard;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { View, FlatList, Text, TouchableOpacity, StyleSheet, Image, ActivityIndicator, RefreshControl } from 'react-native';\nimport Modal from 'react-native-modal';\nimport AdCard from '../components/AdCard'; // Import the AdCard component\nimport API_BASE_URL from '../services/config'; // Your API base URL\nimport { FontAwesome } from '@expo/vector-icons'; // Import FontAwesome icons\nimport { useNavigation } from '@react-navigation/native'; // Import the useNavigation hook\nimport { useUser } from '../context/UserContext';\n\nconst UserAds = () => {\n    const { userDetails } = useUser();\n    const [userAds, setUserAds] = useState([]);\n    const [selectedAd, setSelectedAd] = useState(null); // To store the selected ad for the modal\n    const [isModalVisible, setModalVisible] = useState(false);\n    const [isLoading, setIsLoading] = useState(false); // To track delete operation loading state\n    const [isDeleteConfirmationVisible, setDeleteConfirmationVisible] = useState(false); // To show delete confirmation modal\n    const navigation = useNavigation(); // Get the navigation object\n    const [refreshing, setRefreshing] = useState(false);\n\n    useEffect(() => {\n        // Fetch user's posted ads from the backend\n        const fetchUserAds = async () => {\n            try {\n                const response = await fetch(`${API_BASE_URL}/rentpost/user/${userDetails._id}`);\n                if (response.ok) {\n                    const data = await response.json();\n                    setUserAds(data);\n                } else {\n                    console.error('Failed to fetch user ads');\n                }\n            } catch (error) {\n                console.error('Error fetching user ads:', error);\n            }\n        };\n\n        fetchUserAds();\n    }, []);\n\n    const handleEdit = (ad) => {\n        navigation.navigate('PostAd', { ad });\n    };\n\n    const renderEmptyListComponent = () => (\n        <View style={styles.emptyListContainer}>\n            <Text style={styles.emptyListText}>You have no ads posted yet.</Text>\n        </View>\n    );\n\n\n    const handleDelete = async (adId) => {\n        setIsLoading(true);\n\n        try {\n            // Send a request to delete the ad by its ID\n            const response = await fetch(`${API_BASE_URL}/rentpost/delete/${adId}`, {\n                method: 'DELETE',\n            });\n\n            if (response.ok) {\n                // Remove the deleted ad from the userAds state\n                setUserAds((prevAds) => prevAds.filter((ad) => ad._id !== adId));\n            } else {\n                console.error('Failed to delete ad');\n            }\n        } catch (error) {\n            console.error('Error deleting ad:', error);\n        } finally {\n            // Reset loading state\n            setIsLoading(false);\n            // Close the modal\n            setDeleteConfirmationVisible(false);\n        }\n    };\n\n    const handleClaim = (ad) => {\n        // Implement your claim logic here\n    };\n\n    const toggleModal = (ad) => {\n\n        setModalVisible(!isModalVisible);\n    };\n\n\n    const handleDeleteAd = (ad) => {\n        setSelectedAd(ad);\n        setDeleteConfirmationVisible(true)\n    }\n\n    const onRefresh = useCallback(async () => {\n        setRefreshing(true);\n\n        try {\n            // Fetch user's posted ads from the backend\n            const response = await fetch(`${API_BASE_URL}/rentpost/user/${userDetails._id}`);\n            if (response.ok) {\n                const data = await response.json();\n                setUserAds(data);\n            } else {\n                console.error('Failed to fetch user ads');\n            }\n        } catch (error) {\n            console.error('Error fetching user ads:', error);\n        } finally {\n            setRefreshing(false);\n        }\n    }, []);\n\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                {/* Back button */}\n                <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>\n                    <FontAwesome name=\"arrow-left\" size={24} color=\"black\" />\n                </TouchableOpacity>\n                <Text style={styles.headerText}>Your Ads</Text>\n            </View>\n            <FlatList\n                data={userAds}\n                keyExtractor={(item) => item._id}\n                renderItem={({ item }) => (\n                    <TouchableOpacity onPress={() => toggleModal(item)}>\n                        <AdCard ad={item} onEdit={handleEdit} onDelete={() => handleDeleteAd(item)} onClaim={handleClaim} />\n                    </TouchableOpacity>\n                )}\n                ListEmptyComponent={renderEmptyListComponent}\n                refreshControl={\n                    <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n                }\n            />\n            <Modal isVisible={isModalVisible}>\n                <View style={styles.modalContainer}>\n                    <TouchableOpacity onPress={() => setModalVisible(false)} style={styles.closeButton}>\n                        <Text style={styles.closeButtonText}>Close</Text>\n                    </TouchableOpacity>\n                    {/* Display ad details here */}\n                    {selectedAd && (\n                        <View>\n                            <Text>{selectedAd.adTitle}</Text>\n                            <Text>{selectedAd.location}</Text>\n                            <Image source={{ uri: selectedAd.images[0] }} style={styles.image} />\n                            {/* Add other ad details */}\n                        </View>\n                    )}\n                </View>\n            </Modal>\n            {/* Delete confirmation modal */}\n            <Modal isVisible={isDeleteConfirmationVisible}>\n                <View style={styles.deleteConfirmationContainer}>\n                    <Text style={styles.deleteConfirmationText}>Are you sure you want to delete this ad?</Text>\n                    <View style={styles.deleteConfirmationButtons}>\n                        <TouchableOpacity onPress={() => setDeleteConfirmationVisible(false)} style={styles.cancelButton}>\n                            <Text style={styles.cancelButtonText}>Cancel</Text>\n                        </TouchableOpacity>\n                        {isLoading ? (\n                            <ActivityIndicator size=\"small\" color=\"blue\" />\n                        ) : (\n                            <TouchableOpacity onPress={() => handleDelete(selectedAd._id)} style={styles.confirmButton}>\n                                <Text style={styles.confirmButtonText}>Delete</Text>\n                            </TouchableOpacity>\n                        )}\n                    </View>\n                </View>\n            </Modal>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16, // Add padding for the ads\n    },\n    header: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 16, // Add margin at the bottom of the header\n    },\n    backButton: {\n        marginRight: 8,\n    },\n    headerText: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    modalContainer: {\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 10,\n    },\n    image: {\n        width: '100%',\n        height: 200,\n        borderRadius: 10,\n        marginBottom: 10,\n    },\n    deleteConfirmationContainer: {\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 10,\n    },\n    deleteConfirmationText: {\n        fontSize: 18,\n        marginBottom: 20,\n    },\n    deleteConfirmationButtons: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n    },\n    confirmButton: {\n        backgroundColor: 'red',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 5,\n    },\n    emptyListContainer: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 20,\n    },\n    emptyListText: {\n        fontSize: 16,\n        color: '#999',\n    },\n    confirmButtonText: {\n        color: 'white',\n    },\n    cancelButton: {\n        backgroundColor: '#3182CE',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 5,\n        marginRight: 10,\n    },\n    cancelButtonText: {\n        color: 'white',\n    },\n    closeButton: {\n        backgroundColor: '#3182CE',\n        padding: 8,\n        borderRadius: 5,\n    },\n    closeButtonText: {\n        color: 'white',\n    },\n});\n\nexport default UserAds;\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, Image, TouchableOpacity, ScrollView, SafeAreaView, Share, Platform, Clipboard, Alert, ActivityIndicator, } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { db } from '../firebase/firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useUser } from '../context/UserContext';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport API_BASE_URL, { DOMAIN_URL } from '../services/config';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons'; // Import for larger icon\n\nconst amenitiesMapping = [\n    { key: 'isFurnished', label: 'Furnished', icon: 'bed-outline' },\n    { key: 'hasAttachedBathroom', label: 'Attached Bathroom', icon: 'water-outline' },\n    { key: 'isMaleOnly', label: 'Male Only', icon: 'male-outline' },\n    { key: 'isBachelorsAllowed', label: 'Bachelors Allowed', icon: 'people-outline' },\n];\n\nconst AdDetailsScreen = ({ route }) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const { userInfo } = useUser();\n    const adId = route.params?.adIds;\n    const navigation = useNavigation();\n    const [ad, setAd] = useState();\n    const [firebaseId, setFirebaseId] = useState(ad?.firebaseId);\n    const [flatmatesData, setFlatmatesData] = useState(ad?.flatmates);\n    const [userDetails, setUserDetails] = useState(null);\n    const [showDirectMessageButton, setShowDirectMessageButton] = useState(false);\n    const isPostedByCurrentUser = firebaseId === userInfo?.firebaseId;\n    const [isAdAvailable, setIsAdAvailable] = useState(true);\n    useEffect(() => {\n        const fetchPostDetails = async () => {\n            setIsLoading(true);\n\n            try {\n                const response = await fetch(`${API_BASE_URL}/rentpost/getPostsById/${adId}`);\n                if (response.ok) {\n                    const data = await response.json();\n                    setAd(data)\n                    setFirebaseId(data?.firebaseId)\n                    setFlatmatesData(data?.flatmates || [])\n                    setIsAdAvailable(true);\n                } else {\n                    setIsAdAvailable(false);\n                    console.error('Failed to fetch user ads');\n                }\n            } catch (error) {\n                console.error('Error fetching user ads:', error);\n            } finally {\n                setIsLoading(false); // Stop loading\n            }\n        };\n\n        if (adId) {\n            fetchPostDetails();\n        }\n    }, [adId]);\n\n\n    const onShare = async () => {\n        const shareMessage = `${ad?.adTitle} At Price ₹${ad?.price}\\n\\n Check this out!! ✨🏠🌟\\n\\n` + `${DOMAIN_URL}/ads/${ad?._id}`;\n\n        if (Platform.OS === 'web') {\n            // Attempt to use the Web Share API if available\n            if (navigator.share) {\n                navigator.share({\n                    title: ad?.adTitle,\n                    text: shareMessage,\n                    // url: ad?.images[0],\n                }).catch(error => console.log('Error sharing', error));\n            } else {\n                Clipboard.setString(shareMessage);\n                Alert.alert('Link copied to clipboard');\n            }\n        } else {\n            // Mobile sharing\n            try {\n                await Share.share({\n                    message: shareMessage,\n                    //url: ad?.images[0], // Include this only if it's a local file\n                });\n            } catch (error) {\n                console.error(error.message);\n            }\n        }\n    };\n\n    useEffect(() => {\n        const fetchUserDetails = async () => {\n            try {\n                const userDoc = await getDoc(doc(db, 'user_profiles', firebaseId));\n\n                if (userDoc.exists()) {\n                    setUserDetails(userDoc.data());\n                    setShowDirectMessageButton(true);\n                }\n            } catch (error) {\n                console.error('Error fetching user details:', error);\n            }\n        };\n\n        if (firebaseId) {\n            fetchUserDetails();\n        }\n    }, [firebaseId]);\n\n\n    const handleDirectMessage = () => {\n        navigation.navigate('Message', {\n            userDetails\n        });\n    };\n\n    const handleBackButton = () => {\n        navigation.goBack();\n    };\n\n    if (isLoading) {\n        return (\n            <View style={styles.loaderContainer}>\n                <ActivityIndicator size=\"large\" color=\"#FFFFFF\" />\n            </View>\n        )\n    }\n    if (!isAdAvailable) {\n        return (\n            <LinearGradient colors={['#007DBC', '#005AAA']} style={styles.soldContainer}>\n                <MaterialIcons name=\"error-outline\" size={60} color=\"white\" />\n                <Text style={styles.soldMessage}>This ad has been sold</Text>\n                <TouchableOpacity onPress={handleBackButton} style={styles.seeMoreButtonContainer}>\n\n                    <Text style={styles.seeMoreButtonText}> See More</Text>\n                    <Ionicons name=\"arrow-forward\" size={24} color=\"white\" />\n                </TouchableOpacity>\n            </LinearGradient>\n        );\n    }\n    return (\n        <SafeAreaView style={styles.flexContainer}>\n            <View style={{ height: \"90%\", backgroundColor: '#f8f9fa', }}>\n                <LinearGradient colors={['#007DBC', '#005AAA']} >\n                    <TouchableOpacity onPress={handleBackButton} style={styles.seeMoreButtonContainer}>\n                        <Ionicons name=\"arrow-back\" size={24} color=\"white\" />\n                    </TouchableOpacity>\n                </LinearGradient>\n                <ScrollView contentContainerStyle={styles.scrollViewContent}>\n                    <Image source={{ uri: ad?.images[0] }} style={styles.villaImage} />\n                    <TouchableOpacity style={styles.shareIcon} onPress={onShare}>\n                        <Ionicons name=\"share-social\" size={24} color=\"white\" />\n                    </TouchableOpacity>\n                    <Text style={styles.villaName}>{ad?.adTitle}</Text>\n                    <Text style={styles.location}>{ad?.location}</Text>\n                    <View style={styles.offerContainer}>\n                        <FontAwesome name=\"check\" size={24} color=\"white\" style={styles.trustIcon} />\n\n                        <Text style={styles.offerText}>Verified User</Text>\n                    </View>\n                    <Text style={styles.description}>{ad?.adDescription}</Text>\n                    {ad &&\n                        (<View style={styles.amenitiesContainer}>\n                            <View style={styles.amenitiesList}>\n                                {amenitiesMapping.map(amenity => {\n                                    if (ad[amenity.key]) {\n                                        return (\n                                            <View style={styles.amenityItem} key={amenity.key}>\n                                                <Ionicons name={amenity.icon} size={24} color=\"white\" />\n                                                <Text style={styles.amenityLabel}>{amenity.label}</Text>\n                                            </View>\n                                        );\n                                    }\n                                    return null;\n                                })}\n                            </View>\n                        </View>)}\n                    {\n                        (ad && flatmatesData.length > 0) &&\n                        (<View style={styles.flatmatesSection}>\n                            <Text style={styles.title}>Flatmates</Text>\n                            <View style={styles.flatmatesGrid}>\n                                {flatmatesData.map((flatmate, index) => (\n                                    <View key={index} style={styles.flatmateCard}>\n                                        <Image source={{ uri: flatmate.image }} style={styles.flatmateImage} />\n                                        <Text style={styles.flatmateName}>{flatmate.name}</Text>\n                                        <Text style={styles.flatmateOccupation}>{flatmate.occupation}</Text>\n                                    </View>\n                                ))}\n                            </View>\n                        </View>)\n                    }\n                </ScrollView>\n            </View>\n            {isPostedByCurrentUser ? (\n                // Display a message indicating that the advertisement is posted by the current user\n                <Text style={styles.postedByCurrentUserMessage}>\n                    This advertisement is posted by you.\n                </Text>\n            ) : showDirectMessageButton && (\n                <View style={styles.footer}>\n                    <View style={styles.priceContainer}>\n                        <Text style={styles.discountedPrice}>₹{ad?.price}/month</Text>\n                    </View>\n                    <TouchableOpacity onPress={handleDirectMessage} style={styles.bookNowButton}>\n                        <Text style={styles.bookNowButtonText}>\n                            Direct Message\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n\n            )}\n\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    flexContainer: {\n        flex: 1,\n        backgroundColor: '#f8f9fa',\n        fontFamily: 'open-sans-regular'\n    },\n    container: {\n        flex: 1,\n    },\n    loaderContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#005AAA', // Adjust the color and opacity to match your gradient\n    },\n    footer: {\n        borderTopWidth: 1,\n        borderColor: '#eaecef',\n        backgroundColor: '#fff',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        zIndex: 10,\n        padding: 16,\n        flexDirection: 'row',\n        ...(Platform.OS === 'web' ? {\n            position: 'fixed',\n            bottom: 0,\n            left: 0,\n            right: 0,\n        } : {\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            right: 0,\n        }),\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        padding: 16,\n        alignItems: 'center',\n        borderBottomWidth: 1,\n        borderBottomColor: '#eaecef',\n    },\n    icon: {\n        width: 24,\n        height: 24,\n    },\n    backButton: {\n        fontSize: 18,\n        color: '#007bff',\n    },\n    villaImage: {\n        width: '100%',\n        height: 300,\n        resizeMode: 'cover',\n    },\n    villaName: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginVertical: 8,\n        marginHorizontal: 16,\n        color: '#212529',\n        fontFamily: 'open-sans-bold'\n    },\n    location: {\n        fontSize: 16,\n        color: '#6c757d',\n        marginBottom: 8,\n        marginLeft: 16,\n        fontFamily: 'open-sans-regular'\n    },\n    offerContainer: {\n        flexDirection: 'row',\n        backgroundColor: '#007DBC',\n        padding: 12,\n        marginHorizontal: 16,\n        marginVertical: 8,\n        borderRadius: 4,\n    },\n    offerText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontFamily: 'open-sans-regular'\n    },\n    description: {\n        marginHorizontal: 16,\n        marginVertical: 8,\n        fontSize: 16,\n        color: '#212529',\n        fontFamily: 'open-sans-regular'\n    },\n    hostImage: {\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        margin: 16,\n        borderWidth: 2,\n        borderColor: '#eaecef',\n    },\n    hostName: {\n        fontSize: 18,\n        fontWeight: '500',\n        marginLeft: 16,\n        color: '#212529',\n    },\n    price: {\n        fontSize: 28,\n        fontWeight: 'bold',\n        marginHorizontal: 16,\n        marginVertical: 8,\n        color: '#28a745',\n    },\n    directMessageButton: {\n        backgroundColor: '#28a745',\n        padding: 12,\n        marginHorizontal: 16,\n        marginVertical: 8,\n        borderRadius: 4,\n        alignItems: 'center',\n    },\n    directMessageButtonText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontSize: 18,\n    },\n    postedByCurrentUserMessage: {\n        color: '#dc3545',\n        textAlign: 'center',\n        marginBottom: 10,\n        fontSize: 16,\n    },\n    amenitiesContainer: {\n        padding: 16,\n        borderBottomWidth: 1,\n        borderBottomColor: '#eaecef',\n        backgroundColor: '#fff',\n    },\n    amenitiesTitle: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#212529',\n        marginBottom: 8,\n        fontFamily: 'open-sans-bold'\n    },\n    amenitiesList: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'flex-start',\n    },\n    amenityItem: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        backgroundColor: '#007DBC', // This sets the background color to a blue shade\n        borderRadius: 16,\n        padding: 8,\n        marginRight: 8,\n        marginBottom: 8,\n    },\n    amenityLabel: {\n        marginLeft: 8,\n        fontSize: 14,\n        color: '#FFFFFF', // This sets the text color to white\n        fontFamily: 'open-sans-regular'\n    },\n    priceContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    originalPrice: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        textDecorationLine: 'line-through',\n        marginRight: 8,\n    },\n    discountedPrice: {\n        fontSize: 22,\n        fontWeight: 'bold',\n    },\n    bookNowButton: {\n        backgroundColor: '#28a745',\n        padding: 12,\n        borderRadius: 4,\n        alignItems: 'center',\n    },\n    bookNowButtonText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontSize: 18,\n    },\n    flatmateRow: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    flatmatesSection: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#e9ecef', // Changed background color for better visibility\n    },\n    title: {\n        fontSize: 24,\n        marginBottom: 20,\n        fontFamily: 'open-sans-bold'\n    },\n    flatmatesGrid: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between', // To maintain equal spacing between two cards in a row\n    },\n    flatmateCard: {\n        width: '48%', // Slightly less than half to account for any potential margins or paddings\n        marginBottom: 15,\n        padding: 10, // Added some padding\n        backgroundColor: '#fff', // White background for the card\n        borderRadius: 8, // Rounded corners\n        alignItems: 'center', // Center items horizontally\n    },\n    flatmateImage: {\n        width: 50,\n        height: 50,\n        borderRadius: 25,\n        marginBottom: 10, // Margin below the image\n    },\n    flatmateName: {\n        fontSize: 18,\n        fontWeight: '600',\n        fontFamily: 'open-sans-regular',\n        textAlign: 'center', // Center the text\n    },\n    flatmateOccupation: {\n        fontSize: 14,\n        color: 'gray',\n        fontFamily: 'open-sans-light',\n        textAlign: 'center', // Center the text\n    },\n    trustIcon: {\n        marginRight: 5,  // Some space between the icon and text\n        bottom: 2,\n    },\n    scrollViewContent: {\n        paddingBottom: 20, // Add some bottom padding to accommodate for any absolutely positioned elements\n    },\n    seeMoreButtonContainer: {\n        flexDirection: 'row', // Align items in a row\n        alignItems: 'center', // Center items vertically\n        padding: 10,\n        borderRadius: 5,\n        // Add any additional styling as needed\n    },\n    shareIcon: {\n        position: 'absolute',\n        right: 10,\n        top: 10,\n        backgroundColor: 'rgba(0, 0, 0, 0.6)',\n        padding: 8,\n        borderRadius: 25,\n        width: 40,\n        zIndex: 1, // Add this line\n    },\n    soldContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    soldMessage: {\n        fontSize: 24,\n        color: 'white',\n        marginTop: 20,\n        textAlign: 'center',\n        fontFamily: 'open-sans-bold'\n    },\n\n});\n\n\n\nexport default AdDetailsScreen;\n","import React from \"react\";\nimport { View, Text, Image, StyleSheet } from \"react-native\";\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\n\nTimeAgo.addLocale(en)\nconst timeAgo = new TimeAgo('en-US')\n\nconst ReceiverMessage = ({ message }) => {\n\n  const date2 = new Date(message.timestamp.toDate());\n  const numericTimestamp = date2.getTime();\n  const x = timeAgo.format(numericTimestamp, 'mini')\n\n  return (\n    <View style={styles.container}>\n      <Image\n        style={styles.image}\n        source={{\n          uri: message.photoURL ||\n            'https://i.pinimg.com/736x/ff/a0/9a/ffa09aec412db3f54deadf1b3781de2a.jpg',\n        }}\n      />\n      <View style={styles.messageBubble}>\n        <Text style={styles.messageText}>{message.message}</Text>\n        <Text style={styles.timestamp}>{x} ago</Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    margin: 5,\n    alignItems: 'flex-end',\n  },\n  image: {\n    height: 40,\n    width: 40,\n    borderRadius: 20,\n    marginRight: 5,\n    borderColor: 'white',\n    borderWidth: 1,\n  },\n  messageBubble: {\n    backgroundColor: '#f0f0f0', // A soft color\n    borderRadius: 20,\n    padding: 10,\n    maxWidth: '80%',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  messageText: {\n    color: '#333', // Darker text color for contrast\n    fontSize: 16,\n  },\n  timestamp: {\n    color: '#888', // Soft color for the timestamp\n    fontSize: 12,\n    marginTop: 5,\n    alignSelf: 'flex-end',\n  }\n});\n\nexport default ReceiverMessage;\n","import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\n\nTimeAgo.addLocale(en)\nconst timeAgo = new TimeAgo('en-US')\n\nconst SenderMessage = ({ message }) => {\n\n  const date2 = new Date(message?.timestamp?.toDate());\n  const numericTimestamp = date2?.getTime();\n  const x = numericTimestamp ? timeAgo.format(numericTimestamp, 'mini') : ''\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.messageText}>{message.message}</Text>\n      <Text style={styles.timestamp}>{x ? x + ' ago' : 'sending...'}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#4D7EA8', // A calm blue tone\n    borderRadius: 15,\n    padding: 10,\n    marginVertical: 5,\n    marginRight: 10,\n    marginLeft: 'auto',\n    maxWidth: '80%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3,\n  },\n  messageText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    marginBottom: 2,\n  },\n  timestamp: {\n    color: '#D3E3F2', // A lighter shade for timestamp\n    fontSize: 12,\n    alignSelf: 'flex-end',\n  }\n});\n\nexport default SenderMessage;\n","import { Image, StyleSheet, Text, View, TouchableOpacity, Platform } from \"react-native\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Ionicons } from '@expo/vector-icons'; // Make sure to install this library\nimport AnimatedNumbers from 'react-native-animated-numbers';\nimport WebAnimatedNumbers from 'react-animated-numbers';\nconst ChatHeader = ({ userDetails, navigation, coins }) => {\n    const handleBackPress = () => {\n        navigation.goBack();\n    };\n    const AnimatedNumberComponent = Platform.select({\n        web: WebAnimatedNumbers,\n        default: AnimatedNumbers,\n    });\n    return (\n        <SafeAreaView>\n            <View style={styles.chatHeaderContainer} >\n\n                <TouchableOpacity onPress={handleBackPress} style={styles.backButton}>\n                    <Ionicons name=\"arrow-back\" size={24} color=\"#FFFFFF\" />\n                </TouchableOpacity>\n                {userDetails?.image && (<Image source={{ uri: userDetails.image }} style={styles.chatHeaderImage} />)}\n                <Text style={styles.chatHeaderText}>{userDetails.name}</Text>\n                <View style={styles.coinsContainer}>\n                    <Text style={styles.coinsTitle}>Message Left</Text>\n                    <AnimatedNumberComponent\n                        animateToNumber={coins}\n                        fontStyle={styles.coinsValue}\n                        includeComma\n                        frameStyle={{ flexDirection: 'row', alignItems: 'flex-end' }}\n                    />\n                </View>\n            </View>\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    chatHeaderContainer: {\n\n        flexDirection: 'row',\n        alignItems: 'center',\n        padding: 10,\n        backgroundColor: '#006699', // A nice shade of blue\n        borderBottomWidth: 1,\n        borderColor: '#006699', // A slightly darker blue for the border\n    },\n    chatHeaderImage: {\n        width: 40,\n        height: 40,\n        borderRadius: 20,\n        marginRight: 10,\n    },\n    chatHeaderText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#FFFFFF', // White text for better contrast and readability\n    },\n    backButton: {\n        marginRight: 10,\n    },\n    coinsTitle: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        color: '#FFFFFF', // Assuming the title is also white\n        marginRight: 8, // Add some space between the title and the number\n    },\n    coinsValue: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#FFD700', // A gold-like color for the coins value\n    },\n    coinsContainer: {\n        marginLeft: 'auto', // This pushes the coins container to the extreme right\n        flexDirection: 'row',\n        alignItems: 'center',\n        right: 15\n    },\n});\n\nexport default ChatHeader;","import React from 'react'; // Basic React import\nimport { View, Text, TouchableOpacity, StyleSheet, ScrollView } from 'react-native'; // React Native components\n\n\nconst MessageSuggestion = ({ onSelectSuggestion }) => {\n    const suggestions = [\n        \"Hi, How are you ?\",\n        \"Hi, I am looking for this house, is it available?\",\n    ];\n\n    return (\n        <ScrollView\n\n            horizontal={true}\n            contentContainerStyle={styles.messageSuggestionContainer}>\n            {suggestions.map((text, index) => (\n                <TouchableOpacity\n                    key={index}\n                    style={styles.messageSuggestion}\n                    onPress={() => onSelectSuggestion(text)}\n                >\n                    <Text style={styles.messageSuggestionText}>{text}</Text>\n                </TouchableOpacity>\n            ))}\n        </ScrollView>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    // ... other styles\n    messageSuggestionContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        paddingVertical: 10,\n    },\n    messageSuggestion: {\n        backgroundColor: '#FFFFFF', // Blue background\n        borderRadius: 20,\n        paddingVertical: 10,\n        paddingHorizontal: 15,\n        marginHorizontal: 5,\n    },\n    messageSuggestionText: {\n        // color: '#FFFFFF', // White text\n        fontSize: 16,\n    },\n});\n\nexport default MessageSuggestion;","import React from 'react';\nimport { Modal, View, Text, TouchableOpacity, StyleSheet, Platform } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport AnimatedNumbers from 'react-native-animated-numbers';\nimport WebAnimatedNumbers from 'react-animated-numbers';\nimport { Ionicons } from '@expo/vector-icons';\n\nconst CoinModal = ({ isVisible, onTakePremium, coins, onClose }) => {\n    const AnimatedNumberComponent = Platform.select({\n        web: WebAnimatedNumbers,\n        default: AnimatedNumbers,\n    });\n    return (\n        <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={isVisible}\n            onRequestClose={onClose}\n        >\n            <View style={styles.centeredView}>\n                <LinearGradient\n                    colors={['#005AAA', '#dddddd',]}\n                    style={styles.gradient}\n                >\n                    <TouchableOpacity style={styles.closeButton} onPress={onClose}>\n                        <Ionicons name=\"close-circle\" size={30} color=\"white\" />\n                    </TouchableOpacity>\n                    <View style={styles.modalView}>\n\n                        <Text style={styles.modalText}>You have only one coin left!</Text>\n                        <AnimatedNumberComponent\n                            animateToNumber={coins}\n                            fontStyle={styles.animatedNumbers}\n                        />\n                        <TouchableOpacity style={styles.premiumButton} onPress={onTakePremium}>\n                            <Text style={styles.premiumButtonText}>Buy Premium</Text>\n                        </TouchableOpacity>\n                    </View>\n                </LinearGradient>\n            </View>\n        </Modal>\n    );\n};\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    gradient: {\n        width: '80%',\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 5\n    },\n    modalView: {\n        width: '100%',\n        alignItems: \"center\",\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: \"center\",\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: 'white',\n    },\n    animatedNumbers: {\n        fontSize: 50,\n        fontWeight: 'bold',\n        color: '#FFD700',\n    },\n    premiumButton: {\n        marginTop: 15,\n        backgroundColor: '#005AAA',\n        borderRadius: 5,\n        padding: 10,\n        elevation: 2\n    },\n    premiumButtonText: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n    },\n    closeButton: {\n        position: 'absolute',\n        top: 10,\n        right: 10,\n    },\n});\n\nexport default CoinModal;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  KeyboardAvoidingView,\n  Platform,\n  FlatList,\n  Button,\n  Keyboard,\n  TouchableOpacity,\n  Pressable,\n  Modal,\n  StyleSheet,\n  ActivityIndicator,\n  Alert,\n  RefreshControl,\n} from \"react-native\";\nimport { WebView } from 'react-native-webview';\nimport axios from \"axios\"; // Import Axios for making API requests\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\nimport tw from \"tailwind-rn\";\nimport ReceiverMessage from \"../components/ReceiverMessage\";\nimport SenderMessage from \"../components/SenderMessage\";\nimport {\n  addDoc,\n  collection,\n  onSnapshot,\n  orderBy,\n  query,\n  serverTimestamp,\n} from \"@firebase/firestore\";\nimport { analytics, db } from \"../firebase/firebase\";\nimport { useUser } from \"../context/UserContext\";\nimport generateId from \"../utils/generateIds\";\nimport API_BASE_URL from \"../services/config\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport ChatHeader from \"../components/ChatHeader\";\nimport MessageSuggestion from \"../components/MessageSuggestion\";\nimport { logEvent } from \"firebase/analytics\";\nimport CoinModal from \"../components/CoinModal\";\nconst MessageScreen = ({ route, navigation }) => {\n  const flatListRef = useRef();\n  const [userInfo, setUserInfo] = useState({ coins: 2 });\n  const { userInfo: userInfoFromAsync, setUserInfoToStore, fetchUserDetails } = useUser();\n  const { params: { userDetails } } = route;\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [isConversationStarter, setConversationStarter] = useState(undefined);\n  const [combinedUid, setCombinedUid] = useState([]);\n  const [scrollToEnd, setScrollToEnd] = useState(false); // To scroll to the end of the chat\n  const [showModal, setShowModal] = useState(false); // State for the modal\n  const [showOneCointModal, setOneCointModal] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const [webviewUrl, setWebviewUrl] = useState(\n    \"https://subham-routray.mojo.page/odicult-subscription\"\n  );\n  const [isLoading, setIsLoading] = useState(true);\n  const isWeb = Platform.OS === 'web';\n\n  useEffect(() => {\n    fetchUserInitialDetails();\n  }, [db, combinedUid]);\n\n  useEffect(() => {\n    if (userInfo?.coins === 1) {\n      setOneCointModal(true)\n    }\n    if (userInfo?.coins === 0) {\n      setShowModal(true)\n    }\n  }, [userInfo?.coins]);\n\n  useEffect(() => {\n    if (messages && messages.length > 0) {\n      const firstMessage = messages[messages.length - 1]; // Since it's an inverted list, the first message will be the last element in the array.\n      setConversationStarter(firstMessage.userId === userInfo.firebaseId);\n    }\n  }, [messages]);\n\n\n  const fetchUserInitialDetails = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/user/getUserByFirebaseId/${userInfoFromAsync.firebaseId}`);\n      if (response.ok) {\n        const userInfo = await response.json();\n        const combinedUid = generateId(userInfo.firebaseId, userDetails.id);\n        setCombinedUid(combinedUid)\n        setUserInfo(userInfo)\n        setMatchUsers(combinedUid)\n      } else {\n        console.error('Failed to fetch user details');\n        setIsLoading(false); // Set loading to false even if there is an error\n      }\n    } catch (error) {\n      console.error('Error fetching user details:', error);\n      setIsLoading(false); // Set loading to false even if there is an error\n    }\n  };\n\n  const setMatchUsers = (combinedUid) => {\n    const matchDocRef = doc(db, \"matches\", combinedUid);\n    getDoc(matchDocRef)\n      .then((docSnapshot) => {\n        if (!docSnapshot.exists()) {\n          const sanitizedUserInto = {\n            image: userInfo.image || null,\n            email: userInfo.email,\n            phone: userInfo.phoneNumber,\n            id: userInfo.firebaseId,\n            name: userInfo.name,\n          };\n          setDoc(doc(db, \"matches\", combinedUid), {\n            users: {\n              [userInfo.firebaseId]: sanitizedUserInto,\n              [userDetails.id]: userDetails,\n            },\n            usersMatched: [userInfo.firebaseId, userDetails.id],\n            timestamp: serverTimestamp(),\n          });\n\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error checking document existence:\", error);\n      });\n    fetchMessages()\n  }\n\n  const fetchMessages = () => {\n    onSnapshot(\n      query(\n        collection(db, \"matches\", combinedUid, \"messages\"),\n        orderBy(\"timestamp\", \"desc\")\n      ),\n      (snapshot) => {\n        const fetchedMessages = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setMessages(fetchedMessages);\n        setIsLoading(false);\n        // if (scrollToEnd) {\n        //   scrollFlatListToEnd();\n        // }\n      }\n    );\n  }\n\n  const scrollFlatListToEnd = () => {\n    // setScrollToEnd(true);\n    // setTimeout(() => setScrollToEnd(false), 200); // Delay to ensure scrolling to end works\n    flatListRef.current?.scrollToEnd({ animated: true });\n  };\n\n  const handleSendMessage = async () => {\n    if (input === \"\") {\n      return; // Do nothing if the input is empty\n    }\n\n    // If user is the conversation starter and doesn't have coins or subscription, show the modal\n    if (isConversationStarter && userInfo.coins === 0 && userInfo.subscriptionStartDate === \"NA\") {\n      setShowModal(true);\n      return;\n    }\n\n    // Process to send message\n    try {\n      await addDoc(collection(db, \"matches\", combinedUid, \"messages\"), {\n        timestamp: serverTimestamp(),\n        userId: userInfo.firebaseId,\n        name: userInfo.name,\n        photoURL: userInfo.pic || null,\n        message: input,\n      });\n      setInput('')\n      // If the user is the conversation starter, deduct a coin after sending a message\n      if (isConversationStarter) {\n        // Check if the user has enough coins to send the message\n        if (userInfo.coins > 0) {\n          const updatedCoins = Math.max(userInfo.coins - 1, 0);  // Deduct one coin\n          await axios.put(`${API_BASE_URL}/user/updateUserCoins/${userInfo.phoneNumber}`, {\n            coins: userInfo.coins,\n          });\n\n          // Update the local state with the new coins value\n          setUserInfo((prevUserInfo) => ({\n            ...prevUserInfo,\n            coins: updatedCoins,\n          }));\n\n          // Assuming setUserInfoToStore is to update the AsyncStorage or similar storage,\n          // it's important to ensure that it is successful and handle the case where it's not.\n          // For brevity, I'm not including error handling here.\n          setUserInfoToStore({\n            ...userInfo,\n            coins: updatedCoins,\n          });\n        } else {\n          // Handle the case when the user does not have enough coins.\n          Alert.alert(\"You do not have enough coins to send a message.\");\n          return;\n        }\n      }\n\n      fetchMessages();\n      setInput(\"\");\n      scrollFlatListToEnd(); // Scroll to the end after sending a message\n\n    } catch (error) {\n      console.error(\"Error sending message or updating coins:\", error);\n      Alert.alert(\"Message sending failed\");\n    }\n  };\n\n  const handleModalClose = () => {\n    logEvent(analytics, \"purchase banner changed\");\n    fetchUserDetails()\n    setShowModal(false)\n  }\n\n  const handleSelectSuggestion = (text) => {\n    setInput(text);\n  };\n\n  if (isLoading) {\n    return (\n      <LinearGradient colors={['#dddddd', '#005AAA']} style={styles.loaderContainer}>\n        <ActivityIndicator size=\"large\" color=\"white\" />\n      </LinearGradient>\n    );\n  }\n\n\n  // const onRefresh = useCallback(() => {\n  //   setRefreshing(true);\n  //   // fetchUserInitialDetails();\n  //   //fetchMessages();\n  // }, []);\n\n  const handleTakePremium = () => {\n    setOneCointModal(false)\n    setShowModal(true)\n\n  }\n  return (\n    <>\n      <ChatHeader coins={userInfo?.coins} userDetails={userDetails} navigation={navigation} />\n      <LinearGradient colors={['#dddddd', '#005AAA']} style={styles.container}>\n        <Pressable onPress={Keyboard.dismiss}>\n          <FlatList\n            ref={flatListRef}\n            data={messages}\n            inverted={true}\n            style={styles.flatList}\n            keyExtractor={(item) => item.id}\n            renderItem={({ item: message }) =>\n              message.userId === userInfo.firebaseId ? (\n                <SenderMessage key={message.id} message={message} />\n              ) : (\n                <ReceiverMessage key={message.id} message={message} />\n              )\n            }\n            onContentSizeChange={scrollFlatListToEnd}\n          // refreshControl={\n          //   <RefreshControl\n          //     refreshing={refreshing}\n          //     onRefresh={onRefresh}\n          //     tintColor=\"white\"\n          //   />\n          // }\n          />\n        </Pressable>\n      </LinearGradient>\n      <LinearGradient colors={['#005AAA', '#dddddd',]} style={styles.inputSection}>\n        <KeyboardAvoidingView\n          behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n          style={styles.keyboardAvoidingView}\n          keyboardVerticalOffset={10}\n        >\n          {\n            messages.length === 0 && (\n              <View style={styles.suggestionsContainer}>\n                <MessageSuggestion onSelectSuggestion={handleSelectSuggestion} />\n              </View>\n            )\n          }\n          <View style={[styles.messageInputContainer, isWeb && styles.messageInputContainerWeb]}>\n            <TextInput\n              multiline={true}\n              style={styles.textInput}\n              placeholder=\"Send a message\"\n              onChangeText={(value) => {\n                setInput(value)\n                logEvent(analytics, \"message changed\", value);\n              }}\n              value={input}\n            />\n            <TouchableOpacity onPress={handleSendMessage} style={styles.sendButton}>\n              <Text style={styles.sendButtonText}>Send</Text>\n            </TouchableOpacity>\n          </View>\n        </KeyboardAvoidingView>\n      </LinearGradient>\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={showModal}\n        onRequestClose={handleModalClose}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>Subscribe Now</Text>\n              <TouchableOpacity onPress={handleModalClose}>\n                <Text style={styles.modalCloseText}>Close</Text>\n              </TouchableOpacity>\n            </View>\n            {Platform.OS !== 'web' ?\n              <WebView source={{ uri: webviewUrl }} style={styles.webView} /> :\n              <iframe src={webviewUrl} height={'100%'} width={'100%'} />}\n          </View>\n        </View>\n      </Modal>\n      <CoinModal\n        coins={userInfo?.coins}\n        onTakePremium={handleTakePremium}\n        isVisible={showOneCointModal}\n        onClose={() => setOneCointModal(false)}\n\n      />\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  keyboardAvoidingView: {\n    flex: 1,\n  },\n  messageInputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderTopWidth: 1,\n    borderColor: '#E2E8F0',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n  },\n  textInput: {\n    flex: 1,\n    minHeight: 40,\n    padding: 10,\n    borderRadius: 20,\n    backgroundColor: '#FFFFFF',\n    fontSize: 16,\n  },\n  sendButton: {\n    marginLeft: 10,\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    backgroundColor: '#63B3ED',\n    borderRadius: 20,\n  },\n  sendButtonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    width: '80%',\n    height: '80%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    overflow: 'hidden',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderColor: '#E2E8F0',\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  modalCloseText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#3182CE',\n  },\n  webView: {\n    flex: 1,\n  },\n  messageInputContainerWeb: {\n    position: 'fixed', // Fix position to bottom on web\n    bottom: 0,\n    left: 0,\n    right: 0,\n    borderTopWidth: 1,\n    borderColor: '#E2E8F0',\n    backgroundColor: 'white', // or any desired color\n  },\n  suggestionsContainer: {\n    position: 'fixed',\n    bottom: 80, // You should adjust this value based on the height of messageInputContainer + some offset\n    width: '100%',\n    zIndex: 2,  // Ensure the suggestions are above the FlatList\n  },\n  loaderContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  inputSection: {\n    position: 'absolute', // Input section will be positioned absolutely\n    bottom: 0, // Sticks to the bottom\n    width: '100%', // Full width of the screen\n    padding: 10, // Optional padding\n  },\n\n  flatList: {\n    // Removed paddingLeft and added flex: 1\n    flex: 1, // Takes all available space except for the input section\n  },\n});\n\nexport default MessageScreen;","// src/navigation/AuthStack.js\n\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeTabNavigator from '../screens/HomeTabNavigator';\nimport PostAdScreen from '../screens/PostAd';\nimport Default from '../screens/Default';\nimport UserAds from '../screens/UserAds';\nimport AdDetailsScreen from '../screens/AdDetails';\nimport Message from '../screens/Message';\nimport Chat from '../screens/Chat';\nimport ChatRow from '../components/ChatRow';\nimport CustomHeader from '../components/CustomHeader';\n\nconst Stack = createStackNavigator();\n\nconst AppStack = () => {\n    return (\n        <Stack.Navigator\n            screenOptions={{\n                headerShown: false\n            }}\n            initialRouteName='HomeTabNavigator'\n        >\n            <Stack.Screen name=\"HomeTabNavigator\" component={HomeTabNavigator} />\n            <Stack.Screen name=\"PostAd\" component={PostAdScreen} />\n            <Stack.Screen name=\"UserAds\" component={UserAds} />\n            <Stack.Screen name=\"SingleScreenAd\" component={AdDetailsScreen} />\n            <Stack.Screen name=\"Chat\" component={Chat} />\n            <Stack.Screen name=\"Location\" component={CustomHeader} />\n            <Stack.Screen name=\"Message\" component={Message} />\n            <Stack.Screen name=\"MessagWithData\" component={Message} />\n        </Stack.Navigator>\n    );\n};\n\nexport default AppStack;\n","import React from 'react';\nimport { View, Text, TouchableOpacity } from 'react-native';\nimport Modal from 'react-native-modal';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nconst UpdateAppModal = ({ isVisible, onAppUpdate }) => {\n    return (\n        <Modal isVisible={isVisible} backdropColor=\"rgba(0, 0, 0, 0.5)\" backdropOpacity={1}>\n            <LinearGradient\n                colors={['#007DBC', '#005AAA']}\n                style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}\n            >\n                <View style={{ backgroundColor: 'white', borderRadius: 10, padding: 20 }}>\n                    <Text style={{ color: '#007DBC', fontSize: 18, marginBottom: 20 }}>Please update the app now.</Text>\n                    <TouchableOpacity\n                        style={{ backgroundColor: '#007DBC', padding: 10, borderRadius: 5 }}\n                        onPress={onAppUpdate}\n                    >\n                        <Text style={{ color: 'white', textAlign: 'center', fontSize: 16 }}>Click Here to Update</Text>\n                    </TouchableOpacity>\n                </View>\n            </LinearGradient>\n        </Modal>\n    );\n};\n\nexport default UpdateAppModal;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AuthStack from './navigation/AuthStack';\nimport AppStack from './navigation/AppStack';\nimport { UserProvider, useUser } from './context/UserContext';\nimport Toast from 'react-native-toast-message';\nimport { AuthProvider } from './hooks/useAuth';\nimport UpdateAppModal from './components/UpdateAppModal'; // Import the modal component\nimport API_BASE_URL, { DOMAIN_URL } from './services/config';\nimport { Linking, Platform } from 'react-native';\n\nimport * as Font from 'expo-font';\n\nconst App = () => {\n  const { userToken } = useUser();\n  const [showUpdateModal, setShowUpdateModal] = useState(false); // State for modal visibility\n  const [action, setAction] = useState('');\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  useEffect(() => {\n    Font.loadAsync({\n      'open-sans-regular': require('./assets/fonts/OpenSans-Regular.ttf'),\n      'open-sans-light': require('./assets/fonts/OpenSans-Light.ttf'),\n      'open-sans-bold': require('./assets/fonts/OpenSans-Bold.ttf'),\n      'argon': require('./assets/fonts/argon.ttf'),\n    });\n    setFontsLoaded(true)\n  }, []);\n\n  useEffect(() => {\n    const fetchAppUpdateStatus = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/user/getAppUpdateStatus`); // Replace with your API endpoint\n        const { blockApp, action } = response.data;\n        if (blockApp) {\n          setShowUpdateModal(true);\n          setAction(action)\n        }\n      } catch (error) {\n        console.error('Error fetching app update status:', error);\n      }\n    };\n    if (Platform.OS !== 'web') {\n      fetchAppUpdateStatus();\n    }\n  }, []);\n\n  const linking = {\n    prefixes: [DOMAIN_URL, 'yourapp://'],\n    config: {\n      screens: {\n        HomeTabNavigator: 'ads/:adIdm',\n      },\n    },\n  };\n\n  const handleAppUpdate = () => {\n    Linking.canOpenURL(action)\n      .then((supported) => {\n        if (supported) {\n          Linking.openURL(action);\n        } else {\n          console.error('Cannot open Play Store link');\n        }\n      })\n      .catch((error) => {\n        console.error('Error opening Play Store link:', error);\n      });\n  };\n\n  return (\n    <>\n\n      <AuthProvider>\n\n        <NavigationContainer linking={linking}>\n          <Toast />\n          {userToken ? <AppStack /> : <AuthStack />}\n        </NavigationContainer>\n      </AuthProvider>\n      <UpdateAppModal\n        isVisible={showUpdateModal}\n        onClose={() => setShowUpdateModal(false)}\n        onAppUpdate={handleAppUpdate}\n      />\n    </>\n  );\n};\n\nexport default () => {\n  return (\n    <UserProvider>\n      <App />\n    </UserProvider>\n  );\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [415], () => (__webpack_require__(5530)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","analytics","getStorage","getAnalytics","AuthContext","createContext","AuthProvider","_ref","children","setUserInfoToStore","useUser","_useState","useState","_useState2","_slicedToArray","user","_useState3","_useState4","loadingLogin","setLoadingLogin","useEffect","unsubscribe","onAuthStateChanged","_ref2","_asyncToGenerator","authUser","_x","apply","arguments","signUpWithEmailPassword","_ref3","email","password","createUserWithEmailAndPassword","then","userCredential","uid","firebaseId","catch","error","console","log","_x2","_x3","logOut","_ref4","signOut","_jsx","Provider","value","signInWithEmailPassword","signInWithEmailAndPassword","LinearGradient","colors","style","flex","justifyContent","alignItems","height","width","ActivityIndicator","size","color","AuthOpen","useContext","DOMAIN_URL","UserContext","UserProvider","userToken","setUserToken","userDetails","setUserDetails","_useState5","_useState6","userInfo","setUserInfo","loadUserToken","storedToken","AsyncStorage","getItem","fetchUserDetails","response","fetch","API_BASE_URL","toString","ok","userData","json","gender","image","name","phoneNumber","_id","tenantType","rentPosts","coins","subscriptionStartDate","location","phone","id","statusText","login","token","setItem","logout","_ref5","removeUserInfoFromStore","removeItem","_ref6","_ref8","_ref7","rentPost","_ref7$subscriptionSta","_ref7$location","locationMarked","existingUserInfo","JSON","parse","length","_objectSpread","stringify","TextAnimator","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","animate","toValue","undefined","animations","state","textArr","map","_","i","Animated","timing","animatedValues","duration","useNativeDriver","stagger","reverse","start","setTimeout","onFinish","content","trim","split","forEach","Value","_createClass","key","this","prevProps","_this2","setState","_this3","View","styles","textWrapper","word","index","_jsxs","Text","textStyle","opacity","transform","translateY","multiply","React","StyleSheet","create","flexDirection","flexWrap","_Dimensions$get","Dimensions","get","Authentication","_route$params","route","navigation","adId","params","adIdm","_AuthOpen","formattedValue","setFormattedValue","isUserExists","setIsUserExists","screen","setScreen","_useState7","_useState8","setPhoneNumber","_useState9","_useState10","otp","setOtp","_useState11","_useState12","assignedOtp","setAssignedOtp","_useState13","_useState14","isLoading","setIsLoading","_useState15","_useState16","isTextInputFocused","setIsTextInputFocused","_useState17","_useState18","currentTextIndex","setCurrentTextIndex","animatedTexts","_useClearByFocusCell","useClearByFocusCell","setValue","_useClearByFocusCell2","getCellOnLayoutHandler","navigate","handleAnimationComplete","generateOtp","Math","floor","random","fetchUserExistsStatus","checkPhoneResponse","checkPhoneData","exists","sendOTP","postData","axios","post","headers","data","status","alert","_error$response","message","verifyOTP","handleTextInputFocus","handleTextInputBlur","gradient","x","y","end","lottie","Platform","OS","LottieView","source","require","autoPlay","loop","KeyboardAvoidingView","behavior","keyboardVerticalOffset","ScrollView","contentContainerStyle","container","keyboardShouldPersistTaps","header","subheader","PhoneNumberInput","defaultCode","onChangeText","text","logEvent","onChangeFormattedText","placeholder","withDarkTheme","withShadow","onFocus","onBlur","TouchableOpacity","button","onPress","buttonText","iconContainer","Ionicons","CodeField","caretHidden","cellCount","rootStyle","codeFieldRoot","keyboardType","textContentType","renderCell","symbol","isFocused","onLayout","cell","focusCell","cellText","Cursor","buttonContainer","_Fragment","resendText","renderScreen","fontSize","fontWeight","marginBottom","fontFamily","top","backgroundColor","paddingVertical","paddingHorizontal","borderRadius","resendButton","marginTop","backButton","countryPickerContainer","borderColor","borderWidth","countryPicker","resizeMode","marginLeft","marginRight","lineHeight","textAlign","position","left","zIndex","OnboardingScreen","useNavigation","handleDone","Onboarding","onDone","onSkip","DoneButtonComponent","Object","assign","_objectDestructuringEmpty","doneButton","containerStyles","pages","Lottie","title","subtitle","padding","amenitiesMapping","label","icon","flexContainer","loaderContainer","footer","borderTopWidth","bottom","right","borderBottomWidth","borderBottomColor","villaImage","villaName","marginVertical","marginHorizontal","offerContainer","offerText","description","hostImage","margin","hostName","price","directMessageButton","directMessageButtonText","postedByCurrentUserMessage","amenitiesContainer","amenitiesTitle","amenitiesList","amenityItem","amenityLabel","priceContainer","originalPrice","textDecorationLine","discountedPrice","bookNowButton","bookNowButtonText","flatmateRow","flatmatesSection","flatmatesGrid","flatmateCard","flatmateImage","flatmateName","flatmateOccupation","trustIcon","scrollViewContent","paddingBottom","seeMoreButtonContainer","seeMoreButtonText","shareIcon","soldContainer","soldMessage","ad","setAd","setFirebaseId","flatmates","flatmatesData","setFlatmatesData","showDirectMessageButton","setShowDirectMessageButton","isPostedByCurrentUser","isAdAvailable","setIsAdAvailable","fetchPostDetails","onShare","shareMessage","adTitle","navigator","share","Clipboard","setString","Alert","Share","userDoc","getDoc","doc","handleBackButton","SafeAreaView","Image","uri","images","FontAwesome","adDescription","amenity","flatmate","occupation","MaterialIcons","BannerWidth","bannerImage","Carousel","autoplay","autoplayTimeout","pageSize","renderPage","_worklet_4122753321172_init_data","code","_worklet_10469424627174_init_data","AnimatedCard","item","scale","useSharedValue","lastPress","useRef","Date","now","animatedStyles","useAnimatedStyle","_f","_closure","__initData","__workletHash","animatedImageStyles","perspective","rotateY","card","activeOpacity","current","onPressIn","withSpring","onPressOut","delayPressIn","touchable","adImage","adDetails","numberOfLines","ellipsizeMode","adInfo","adPrice","adBedrooms","bedrooms","adList","overflow","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","backfaceVisibility","borderTopLeftRadius","borderTopRightRadius","adLocation","filterButtonsContainer","filterButton","filterButtonActive","filterText","filterTextActive","_useUser","ads","setAds","banners","setBanners","refreshing","setRefreshing","bannersLoading","setBannersLoading","genderFilter","setGenderFilter","filteredAds","setFilteredAds","fetchAds","fetchBanners","handleGenderFilterChange","newFilter","bannersQuery","query","collection","fetchedBanners","getDocs","docs","link","handleAdPress","onRefresh","useCallback","filtered","filter","isMaleOnly","filterAds","SkeletonLoader","boneColor","highlightColor","BannerCarousel","FlatList","keyExtractor","renderItem","numColumns","refreshControl","RefreshControl","tintColor","Stack","createStackNavigator","showOnboarding","setShowOnboarding","checkIfAlreadyOnboarded","onboarded","Navigator","initialRouteName","Screen","options","headerShown","component","AdDetailsWithoutAuthentication","HomeWithoutAuthentication","screenOptions","adIds","PostAdScreen","_route$params$ad","_route$params2","_route$params2$ad","_route$params3","_route$params3$ad","_route$params4","_route$params4$ad","_route$params5","_route$params5$ad","_route$params6","_route$params6$ad","_route$params7","_route$params7$ad","_route$params8","_route$params8$ad","_route$params9","_route$params9$ad","_route$params10","_route$params10$ad","_route$params11","_route$params11$ad","_route$params12","_route$params12$ad","setImages","setLocation","setAdTitle","setAdDescription","setPhone","setEmail","setPrice","maxResidents","setMaxResidents","preference","setPreference","_useState19","_useState20","setIsMaleOnly","_useState21","isFurnished","_useState22","setIsFurnished","_useState23","hasAttachedBathroom","_useState24","setHasAttachedBathroom","_useState25","isBachelorsAllowed","_useState26","setIsBachelorsAllowed","_useState27","_useState28","loading","setLoading","handleImageUpload","ImagePicker","requestMediaLibraryPermissionsAsync","granted","pickerResult","launchImageLibraryAsync","mediaTypes","Images","allowsEditing","aspect","quality","multiple","cancelled","newImages","concat","_toConsumableArray","assets","uploadImagesToS3","Toast","show","type","text1","text2","s3Images","imageUri","file","RNS3","put","keyPrefix","bucket","region","accessKey","secretKey","successActionStatus","Error","s3ImageUrl","body","postResponse","push","handleSubmit","_route$params13","userId","goBack","imageContainer","heading","imageUploadButton","uploadButtonText","horizontal","showsHorizontalScrollIndicator","fieldContainer","RNPickerSelect","onValueChange","items","pickerSelectStyles","TextInput","input","multilineInput","multiline","stepperContainer","stepperButton","stepperButtonText","stepperValue","Switch","trackColor","false","true","submitButton","disabled","submitButtonText","minHeight","textAlignVertical","inputIOS","paddingRight","inputAndroid","domains","tenantTypeContainer","actionButton","loader","profileImage","flexGrow","modalContainer","linearGradient","modalContent","modalTitle","closeButton","chooseImageButton","chooseImageText","genderContainer","radioButtons","radioButton","radioButtonSelected","radioButtonText","radioButtonTextSelected","radioButtonsTenantType","radioButtonTenantType","isVisible","onDismiss","setLocationModal","_useUser2","setName","setUserId","setGender","setTenantType","setImage","setSuggestions","setFieldsDisabled","userLocation","setUserLocation","handleGenderSelect","selectedGender","requestLocationPermission","Location","requestForegroundPermissionsAsync","getCurrentPositionAsync","updateProfileToFirebase","pic","isEdit","newDocRef","handler","updateDoc","setDoc","timestamp","serverTimestamp","updateAuthProfile","currentUser","displayName","photoURL","handleTenantTypeSelect","selectedType","handleUpdate","selectedImageUri","blob","res","apiEndpoint","method","updateButtonStyle","Modal","visible","transparent","animationType","MaterialCommunityIcons","placeholderTextColor","filteredDomains","domain","includes","maleIcon","femaleIcon","student","professionals","family","users","userLoggedIn","newUsers","_Object$entries$flat","entries","flat","_Object$entries$flat2","id1","id2","cardShadow","matchDetails","lastMessage","setLastmessage","matchedUserInfo","setMatchedUserInfo","getMatchedUserInfo","onSnapshot","generateId","orderBy","snapshot","_snapshot$docs$","_snapshot$docs$$data","tw","photoUrl","substring","matches","setMatches","where","ChatRow","ChatList","DEFAULT_LOCATION","leftContainer","selectedLocationContainer","downIcon","rightContainer","iconButton","selectedLocationText","modalView","modalGradient","modalHeader","modalHeaderText","searchContainer","searchInput","clearIcon","locationList","locationItem","locationText","tagsContainer","tag","tagText","onSettingPress","_ref$showBack","showBack","_ref$locationModal","locationModal","useToken","selectedLocation","setSelectedLocation","allLocations","setLocations","modalVisible","setModalVisible","searchQuery","setSearchQuery","suggestedLocations","setSuggestedLocations","topLocations","setTopLocations","fetchLocations","_response$data$locati","locations","fetchedLocations","slice","selectLocation","renderTag","edges","Icon","onRequestClose","filteredLocations","toLowerCase","Tab","createBottomTabNavigator","tabBar","addButton","addButtonText","popoverBackground","popoverContent","popoverOption","popoverOptionText","_React$useState","_React$useState2","isModalVisible","_React$useState3","_React$useState4","isUpdateModalVisible","setUpdateModalVisible","_React$useState5","_React$useState6","_React$useState7","_React$useState8","userProfileData","setUserProfileData","handleMyAds","toggleModal","handleUpdateProfile","handleLogout","renderCustomHeader","CustomHeader","onBackPress","tabBarOptions","activeTintColor","inactiveTintColor","showLabel","Home","tabBarIcon","focused","Chat","Pressable","UpdateProfileModal","onUpdateProfile","updatedData","_Component","Default","Component","onEdit","onDelete","onClaim","headerText","deleteConfirmationContainer","deleteConfirmationText","deleteConfirmationButtons","confirmButton","emptyListContainer","emptyListText","confirmButtonText","cancelButton","cancelButtonText","closeButtonText","userAds","setUserAds","selectedAd","setSelectedAd","isDeleteConfirmationVisible","setDeleteConfirmationVisible","fetchUserAds","handleEdit","handleDelete","prevAds","handleClaim","AdCard","ListEmptyComponent","TimeAgo","addLocale","en","timeAgo","messageBubble","maxWidth","messageText","alignSelf","numericTimestamp","toDate","getTime","format","_message$timestamp","date2","chatHeaderContainer","chatHeaderImage","chatHeaderText","coinsTitle","coinsValue","coinsContainer","AnimatedNumberComponent","select","web","WebAnimatedNumbers","default","AnimatedNumbers","animateToNumber","fontStyle","includeComma","frameStyle","messageSuggestionContainer","messageSuggestion","messageSuggestionText","onSelectSuggestion","centeredView","modalText","animatedNumbers","premiumButton","premiumButtonText","onTakePremium","onClose","keyboardAvoidingView","messageInputContainer","textInput","sendButton","sendButtonText","modalCloseText","webView","messageInputContainerWeb","suggestionsContainer","inputSection","flatList","flatListRef","userInfoFromAsync","setInput","messages","setMessages","isConversationStarter","setConversationStarter","combinedUid","setCombinedUid","showModal","setShowModal","showOneCointModal","setOneCointModal","webviewUrl","isWeb","fetchUserInitialDetails","firstMessage","setMatchUsers","matchDocRef","docSnapshot","_users","sanitizedUserInto","_defineProperty","usersMatched","fetchMessages","fetchedMessages","scrollFlatListToEnd","_flatListRef$current","scrollToEnd","animated","handleSendMessage","addDoc","updatedCoins","max","prevUserInfo","handleModalClose","ChatHeader","Keyboard","dismiss","ref","inverted","SenderMessage","ReceiverMessage","onContentSizeChange","MessageSuggestion","WebView","src","CoinModal","HomeTabNavigator","UserAds","AdDetailsScreen","Message","onAppUpdate","backdropColor","backdropOpacity","App","showUpdateModal","setShowUpdateModal","action","setAction","setFontsLoaded","Font","loadAsync","fetchAppUpdateStatus","_response$data","blockApp","linking","prefixes","config","screens","NavigationContainer","AppStack","AuthStack","UpdateAppModal","Linking","canOpenURL","supported","openURL","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","amdO","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","ns","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}