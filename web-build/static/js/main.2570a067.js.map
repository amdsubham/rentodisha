{"version":3,"file":"static/js/main.2570a067.js","mappings":"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","sources":["firebase/firebase.js","hooks/useAuth.js","services/config.js","context/UserContext.js","components/TextAnimator.js","screens/Authentication.js","utils/asyncStorage.js","screens/OnboardingScreen.js","navigation/AuthStack.js","components/BannerCarousel.js","screens/Home.js","screens/PostAd.js","components/UpdateProfileModal.js","utils/getMatchedUserInfo.js","utils/generateIds.js","components/ChatRow.js","components/ChatList.js","screens/Chat.js","components/CustomHeader.js","screens/HomeTabNavigator.js","screens/Default.js","components/AdCard.js","screens/UserAds.js","screens/AdDetails.js","components/ReceiverMessage.js","components/SenderMessage.js","components/ChatHeader.js","components/MessageSuggestion.js","components/CoinModal.js","screens/Message.js","navigation/AppStack.js","components/UpdateAppModal.js","App.js","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from 'firebase/auth'\nimport { getFirestore } from 'firebase/firestore'\nimport { getStorage } from \"firebase/storage\";\nimport { initializeAuth, getReactNativePersistence } from 'firebase/auth';\nimport ReactNativeAsyncStorage from '@react-native-async-storage/async-storage';\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyApunLilBsWG8YvyLL6hNdpWW0oB_JGNl8\",\n    authDomain: \"odicult-c051c.firebaseapp.com\",\n    databaseURL: \"https://odicult-c051c-default-rtdb.firebaseio.com\",\n    projectId: \"odicult-c051c\",\n    storageBucket: \"odicult-c051c.appspot.com\",\n    messagingSenderId: \"264373040060\",\n    appId: \"1:264373040060:web:8d9c8e752ae975257331b9\",\n    measurementId: \"G-YJTXX7D32M\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app)\n\n// initializeAuth(app, {\n//     persistence: getReactNativePersistence(ReactNativeAsyncStorage)\n// });\nconst db = getFirestore()\nconst storage = getStorage();\nconst analytics = getAnalytics(app);\nexport { analytics, app, auth, db, storage }\n","\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from 'firebase/auth';\nimport { ActivityIndicator } from 'react-native';\nimport { auth, db } from '../firebase/firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useUser } from '../context/UserContext';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nconst AuthContext = createContext({\n})\n\nconst AuthProvider = ({ children }) => {\n  const { setUserInfoToStore } = useUser();\n  const [user, setUser] = useState(null);\n  const [loadingLogin, setLoadingLogin] = useState(true);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (authUser) => {\n      if (authUser) {\n        try {\n        } catch (error) {\n          console.error('Error fetching user details:', error);\n        }\n        setLoadingLogin(false);\n      } else {\n        // setUser(null);\n        setLoadingLogin(false);\n      }\n    });\n\n    return () => {\n      // Unsubscribe from the auth state listener when the component unmounts\n      unsubscribe();\n    };\n  }, []);\n\n  const signInWithEmailPassword = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        const uid = userCredential.user.uid;\n        setUserInfoToStore({ firebaseId: uid })\n\n      })\n      .catch((error) => {\n        console.log(\"Firebase SignIn Error\", error)\n      });\n  };\n\n  const signUpWithEmailPassword = async (email, password) => {\n    await createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        const uid = userCredential.user.uid;\n        setUserInfoToStore({ firebaseId: uid })\n      })\n      .catch((error) => {\n        console.log(\"Firebase SignUp Error\", error)\n      });\n  };\n\n  const logOut = async () => {\n    setLoadingLogin(true);\n    await signOut(auth);\n    setLoadingLogin(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        signInWithEmailPassword,\n        signUpWithEmailPassword,\n        loadingLogin,\n        logOut,\n      }}\n    >\n      {loadingLogin ?\n        <LinearGradient colors={['#007DBC', '#005AAA']}\n          style={{\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: \"100%\",\n            width: \"100%\"\n          }}>\n          <ActivityIndicator size=\"large\" color=\"white\" />\n        </LinearGradient>\n        : children}\n    </AuthContext.Provider>\n  );\n};\nconst AuthOpen = () => {\n  return useContext(AuthContext);\n};\n\nexport { AuthOpen, AuthProvider };","const API_BASE_URL = 'https://odicult.fruitnasta.com/api';\n\nexport default API_BASE_URL;\n","// UserContext.js\n\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthOpen } from '../hooks/useAuth';\nimport API_BASE_URL from '../services/config';\n\nconst UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n    const [userToken, setUserToken] = useState(null);\n    const [userDetails, setUserDetails] = useState(null);\n    const [userInfo, setUserInfo] = useState(null);\n    useEffect(() => {\n        const loadUserToken = async () => {\n            try {\n                const storedToken = await AsyncStorage.getItem('userToken');\n                if (storedToken) {\n                    setUserToken(storedToken);\n\n                }\n            } catch (error) {\n                console.error('Error loading user token:', error);\n            }\n        };\n        loadUserToken();\n    }, []);\n\n    const fetchUserDetails = async () => {\n        const response = await fetch(`${API_BASE_URL}/user/getUserByPhoneNumber/${userToken.toString()}`);\n        if (response.ok) {\n            const userData = await response.json();\n            const { email, gender, image, name, phoneNumber, _id, tenantType, rentPosts, coins, subscriptionStartDate, location } = userData\n            setUserDetails(userData);\n            setUserInfoToStore({ email, gender, image, name, phone: phoneNumber, id: _id, tenantType, rentPosts, coins, subscriptionStartDate, location })\n        } else {\n            console.error('Error fetching user details:', response.statusText);\n        }\n    }\n    const login = async (token) => {\n        setUserToken(token);\n        try {\n            // Store the user token in async storage\n            await AsyncStorage.setItem('userToken', token);\n        } catch (error) {\n            console.error('Error storing user token:', error);\n        }\n    };\n\n    const logout = async () => {\n        setUserToken(null);\n        removeUserInfoFromStore()\n        try {\n            // Remove the user token from async storage\n            await AsyncStorage.removeItem('userToken');\n        } catch (error) {\n            console.error('Error removing user token:', error);\n        }\n    };\n\n\n    const removeUserInfoFromStore = async () => {\n        try {\n            // Remove the user info from async storage\n            await AsyncStorage.removeItem('userInfo');\n            // You can also reset the user info state if needed\n            setUserInfo({});\n        } catch (error) {\n            console.error('Error removing user info:', error);\n        }\n    };\n\n    const setUserInfoToStore = async ({\n        name,\n        id,\n        firebaseId,\n        phone,\n        gender,\n        rentPost,\n        email,\n        image,\n        tenantType,\n        coins,\n        subscriptionStartDate = 'NA',\n        location = {},\n        locationMarked,\n    }) => {\n        try {\n            // Get the existing user info from async storage\n            const existingUserInfo = await AsyncStorage.getItem('userInfo');\n            let userInfo = existingUserInfo ? JSON.parse(existingUserInfo) : {};\n\n            // Check if firebaseId exists in userInfo\n            if (!userInfo.firebaseId || !userInfo.firebaseId.length) {\n                userInfo = {\n                    ...userInfo,\n                    firebaseId,\n                };\n            }\n\n            // Update the other user info fields\n            userInfo = {\n                ...userInfo,\n                name,\n                id,\n                phone,\n                gender,\n                rentPost,\n                email,\n                image,\n                tenantType,\n                coins,\n                subscriptionStartDate,\n                location,\n                locationMarked\n            };\n\n            await AsyncStorage.setItem('userInfo', JSON.stringify(userInfo));\n            setUserInfo(userInfo);\n        } catch (error) {\n            console.error('Error storing/updating user info:', error);\n        }\n    };\n\n    return (\n        <UserContext.Provider value={{\n            userToken,\n            login,\n            logout,\n            userDetails,\n            fetchUserDetails,\n            setUserInfoToStore,\n            userInfo,\n        }}>\n            {children}\n        </UserContext.Provider>\n    );\n};\n\nexport const useUser = () => {\n    return useContext(UserContext);\n};\n","import * as React from 'react';\nimport { View, StyleSheet, Animated } from 'react-native';\n\nexport default class TextAnimator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textArr: props.content.trim().split(' '),\n            animatedValues: [],\n        };\n        this.state.textArr.forEach((_, i) => {\n            this.state.animatedValues[i] = new Animated.Value(0);\n        });\n    }\n\n    componentDidMount() {\n        this.animate();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.content !== this.props.content) {\n            this.setState({\n                textArr: this.props.content.trim().split(' '),\n                animatedValues: this.props.content.trim().split(' ').map(() => new Animated.Value(0)),\n            }, () => {\n                this.animate();\n            });\n        }\n    }\n\n    animate = (toValue = 1) => {\n        const animations = this.state.textArr.map((_, i) => {\n            return Animated.timing(this.state.animatedValues[i], {\n                toValue,\n                duration: this.props.duration,\n                useNativeDriver: true\n            });\n        });\n\n        Animated.stagger(\n            this.props.duration / 5,\n            toValue === 0 ? animations.reverse() : animations\n        ).start(() => {\n            setTimeout(() => this.animate(toValue === 0 ? 1 : 0), 1000);\n            if (this.props.onFinish) {\n                this.props.onFinish();\n            }\n        });\n    };\n\n    render() {\n        return (\n            <View style={[this.props.style, styles.textWrapper]}>\n                {this.state.textArr.map((word, index) => {\n                    return (\n                        <Animated.Text\n                            key={`${word}-${index}`}\n                            style={[\n                                this.props.textStyle,\n                                {\n                                    opacity: this.state.animatedValues[index],\n                                    transform: [\n                                        {\n                                            translateY: Animated.multiply(\n                                                this.state.animatedValues[index],\n                                                new Animated.Value(-5)\n                                            )\n                                        }\n                                    ],\n                                },\n                            ]}\n                        >\n                            {word}\n                            {`${index < this.state.textArr.length - 1 ? ' ' : ''}`}\n                        </Animated.Text>\n                    );\n                })}\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    textWrapper: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    }\n});\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport {\n    StyleSheet,\n    View,\n    Text,\n    TouchableOpacity,\n    ActivityIndicator,\n    ScrollView,\n    Dimensions,\n    KeyboardAvoidingView,\n    Platform\n} from 'react-native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { Image } from 'react-native';\n\nimport PhoneNumberInput from 'react-native-phone-number-input';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport { AuthOpen } from '../hooks/useAuth';\nimport Lottie from 'lottie-react-native';\nimport LottieView from 'react-native-web-lottie';\n\nimport { CodeField, Cursor, useClearByFocusCell } from 'react-native-confirmation-code-field';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport TextAnimator from '../components/TextAnimator';\nimport { logEvent } from 'firebase/analytics';\nimport { analytics } from '../firebase/firebase';\n\nconst { width, height } = Dimensions.get('window');\nconst CELL_COUNT = 6;\nexport default function Authentication() {\n    const { signInWithEmailPassword, signUpWithEmailPassword } = AuthOpen();\n    const [formattedValue, setFormattedValue] = useState('');\n    const { login } = useUser();\n    const [isUserExists, setIsUserExists] = useState(false);\n    const [screen, setScreen] = useState(1);\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [otp, setOtp] = useState('');\n    const [assignedOtp, setAssignedOtp] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [isTextInputFocused, setIsTextInputFocused] = useState(false);\n    const [currentTextIndex, setCurrentTextIndex] = useState(0);\n    const animatedTexts = [\n        'No Broker in Between 🏠',\n        'Fast and Reliable 🔥',\n        'Your Dream House Awaits! 🏠'\n    ];\n    const [props, getCellOnLayoutHandler] = useClearByFocusCell({\n        value: otp,\n        setValue: setOtp,\n    });\n\n    const handleAnimationComplete = () => {\n        if (currentTextIndex < animatedTexts.length - 1) {\n            setCurrentTextIndex(currentTextIndex + 1);\n        }\n    };\n\n    const renderMedia = () => {\n        if (Platform.OS === 'web') {\n            return (\n                <LottieView\n                    source={require('../assets/animations/dreamHouse.json')}\n                    autoPlay\n                    loop\n                />\n            );\n        } else {\n            return (\n                <Lottie\n                    source={require('../assets/animations/dreamHouse.json')}\n                    autoPlay\n                    loop\n                />\n            );\n        }\n    };\n\n    const generateOtp = () => {\n        const otp =\n            (phoneNumber === '7008105210' || phoneNumber === '7777711111'\n                || phoneNumber === '7777722222' || phoneNumber === '7777733333'\n                || phoneNumber === '7777744444' || phoneNumber === '7777755555'\n            )\n                ? 121212\n                : Math.floor(100000 + Math.random() * 900000);\n        setAssignedOtp(otp);\n        return otp;\n    };\n\n    const fetchUserExistsStatus = async () => {\n        const checkPhoneResponse = await fetch(\n            `${API_BASE_URL}/user/check-phone/${phoneNumber}`\n        );\n        const checkPhoneData = await checkPhoneResponse.json();\n        setIsUserExists(checkPhoneData.exists);\n    };\n\n    const sendOTP = async () => {\n        try {\n            setIsLoading(true);\n\n            const postData = {\n                phoneNumber: formattedValue,\n                assignedOtp: generateOtp(),\n            };\n            const response = await axios.post(`${API_BASE_URL}/user/sendotp`, postData, {\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            });\n\n            const { data } = response;\n            // Check the response from your own server's endpoint\n            if (data.status === 'OK') {\n                fetchUserExistsStatus();\n                setScreen(2);\n            } else {\n                alert('Failed to send OTP. Please try again.');\n            }\n        } catch (error) {\n            // Handle errors\n            console.error('Error sending OTP:', error.response?.data || error.message);\n            alert('Error sending OTP. Please check your network connection.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const verifyOTP = () => {\n        try {\n            setIsLoading(true);\n            if (otp === assignedOtp.toString()) {\n                login(phoneNumber);\n                if (isUserExists) {\n                    signInWithEmailPassword(`${phoneNumber}@gmail.com`, phoneNumber);\n                } else {\n                    signUpWithEmailPassword(`${phoneNumber}@gmail.com`, phoneNumber);\n                }\n            } else {\n                // OTPs do not match, show an error alert\n                alert('Invalid OTP. Please try again.');\n            }\n        } catch (error) {\n            alert('Error verifying OTP. Please try again.');\n            console.log('error', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleTextInputFocus = () => {\n        setIsTextInputFocused(true);\n    };\n\n    const handleTextInputBlur = () => {\n        setIsTextInputFocused(false);\n    };\n\n    const renderScreen = () => {\n        switch (screen) {\n            case 1:\n                return (\n                    <LinearGradient\n                        colors={['#003366', '#006699', '#0099CC']}\n                        style={styles.gradient}\n                        start={{ x: 0, y: 0 }}\n                        end={{ x: 1, y: 1 }}\n                    >\n                        {(!isTextInputFocused) && (<View style={styles.lottie}>\n                            {renderMedia()}\n                            <TextAnimator\n                                content={animatedTexts[currentTextIndex]}\n                                textStyle={styles.textStyle}\n                                duration={1500}\n                                onFinish={handleAnimationComplete}\n                            />\n                        </View>)}\n                        <KeyboardAvoidingView\n                            behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n                            style={{ flex: 1 }}\n                            keyboardVerticalOffset={Platform.OS === 'ios' ? -100 : 0}\n                        >\n                            <ScrollView\n                                contentContainerStyle={styles.container}\n                                keyboardShouldPersistTaps=\"handled\"\n                            >\n                                <Text style={styles.header}>Enter Your Mobile Number</Text>\n                                <Text style={styles.subheader}>\n                                    We will send you a Confirmation Code\n                                </Text>\n\n                                <PhoneNumberInput\n                                    defaultCode=\"IN\"\n                                    value={phoneNumber}\n                                    onChangeText={(text) => {\n                                        logEvent(analytics, \"phone number changed\", text);\n                                        setPhoneNumber(text);\n                                    }}\n                                    onChangeFormattedText={(text) => {\n                                        setFormattedValue(text);\n                                    }}\n                                    placeholder=\"Enter Phone Number\"\n                                    withDarkTheme\n                                    withShadow\n                                    onFocus={handleTextInputFocus}\n                                    onBlur={handleTextInputBlur}\n                                />\n\n                                {isLoading ? (\n                                    <ActivityIndicator size=\"small\" color=\"#E5E5E5\" />\n                                ) : (\n                                    <TouchableOpacity\n                                        style={styles.button}\n                                        onPress={sendOTP}\n                                    >\n                                        <Text style={styles.buttonText}>VERIFY</Text>\n                                    </TouchableOpacity>\n                                )}\n                            </ScrollView>\n                        </KeyboardAvoidingView>\n                    </LinearGradient>\n                );\n            case 2:\n\n                return (\n                    <LinearGradient\n                        colors={['#003366', '#006699', '#0099CC']}\n                        style={styles.gradient}\n                        start={{ x: 0, y: 0 }}\n                        end={{ x: 1, y: 1 }}\n                    >\n                        <View style={styles.iconContainer}>\n                            <TouchableOpacity onPress={() => setScreen(1)}>\n                                <Ionicons name=\"arrow-back\" size={30} color=\"#FFFFFF\" />\n                            </TouchableOpacity>\n                        </View>\n                        <ScrollView\n                            contentContainerStyle={styles.container}\n                            keyboardShouldPersistTaps=\"handled\"\n                        >\n                            <Text style={styles.header}>Enter Verification Code</Text>\n                            <CodeField\n                                {...props}\n                                caretHidden={false}\n                                value={otp}\n                                onChangeText={setOtp}\n                                cellCount={CELL_COUNT}\n                                rootStyle={styles.codeFieldRoot}\n                                keyboardType=\"number-pad\"\n                                textContentType=\"oneTimeCode\"\n                                renderCell={({ index, symbol, isFocused }) => (\n                                    <View\n                                        onLayout={getCellOnLayoutHandler(index)}\n                                        key={index}\n                                        style={[styles.cell, isFocused && styles.focusCell]}\n                                    >\n                                        <Text style={styles.cellText}>\n                                            {symbol || (isFocused ? <Cursor /> : null)}\n                                        </Text>\n                                    </View>\n                                )}\n                            />\n                            <View style={styles.buttonContainer}>\n                                {isLoading ? (\n                                    <ActivityIndicator size=\"small\" color=\"#FFFFFF\" />\n                                ) : (\n                                    <>\n                                        <TouchableOpacity\n                                            style={styles.button}\n                                            onPress={verifyOTP}\n                                        >\n                                            <Text style={styles.buttonText}>VERIFY OTP</Text>\n                                        </TouchableOpacity>\n                                        <TouchableOpacity\n                                            onPress={sendOTP}\n                                        >\n                                            <Text style={styles.resendText}>RESEND OTP</Text>\n                                        </TouchableOpacity>\n                                    </>\n                                )}\n                            </View>\n                        </ScrollView>\n                    </LinearGradient>\n                );\n\n\n\n            default:\n                return <View />;\n        }\n    };\n\n    return renderScreen();\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        // backgroundColor: '#E5E5E5',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    header: {\n        fontSize: 24,\n        color: '#E5E5E5',\n        fontWeight: 'bold',\n        marginBottom: 10,\n        fontFamily: 'open-sans-regular'\n    },\n    subheader: {\n        fontSize: 16,\n        color: '#E5E5E5',\n        marginBottom: 30,\n        fontFamily: 'open-sans-regular'\n    },\n    button: {\n        top: 15,\n        backgroundColor: '#FFFFFF',\n        paddingVertical: 15,\n        paddingHorizontal: 30,\n        borderRadius: 5,\n\n    },\n    resendButton: {\n        backgroundColor: '#E5E5E5',\n        paddingVertical: 15,\n        paddingHorizontal: 30,\n        borderRadius: 5,\n        marginTop: 10,\n    },\n    backButton: {\n        backgroundColor: '#E5E5E5',\n        paddingVertical: 15,\n        paddingHorizontal: 30,\n        borderRadius: 5,\n        marginBottom: 10,\n    },\n    buttonText: {\n        color: '#007DBC',\n        fontFamily: 'open-sans-bold'\n    },\n    buttonContainer: {\n        marginTop: 20,\n        alignItems: 'center',\n    },\n    countryPickerContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n        width: 110,\n        borderColor: '#007DBC',\n        borderWidth: 1,\n        borderRadius: 5,\n    },\n    countryPicker: {\n        flex: 1,\n        height: 40,\n        color: '#007DBC',\n    },\n    lottie: {\n        width: width,\n        height: width,\n        alignItems: 'center',\n        justifyContent: 'center',\n        top: 50,\n    },\n    image: {\n        width: 250,\n        height: 250,\n        resizeMode: 'contain', // or 'cover' depending on your requirement\n    },\n    codeFieldRoot: {\n        marginTop: 20,\n        width: 280,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n    cell: {\n        width: 30,\n        height: 45,\n        lineHeight: 38,\n        fontSize: 24,\n        borderWidth: 2,\n        borderColor: '#FFFFFF',\n        textAlign: 'center',\n        marginRight: 8,\n    },\n    focusCell: {\n        borderColor: '#000',\n    },\n    cellText: {\n        color: '#FFFFFF',\n        fontSize: 36,\n        textAlign: 'center',\n    },\n    gradient: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    iconContainer: {\n        position: 'absolute',\n        top: 50,  // Adjust according to your need\n        left: 20,  // Adjust according to your need\n        zIndex: 10,\n    },\n    resendText: {\n        color: '#FFFFFF',\n        textAlign: 'center',\n        marginTop: 15,  // Or any other value that suits your design\n        fontSize: 16,   // Or any other value that suits your design\n        top: 20\n    },\n    textStyle: {\n        fontSize: 20,\n        fontFamily: 'open-sans-regular',\n        marginBottom: 14,\n        color: '#FFFFFF',\n        marginTop: 20, // Added this line to create a gap of 50\n    },\n});\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport const setItem = async (key, value) => {\n  try {\n    await AsyncStorage.setItem(key, value);\n  } catch (error) {\n    console.log('Error storing value: ', error);\n  }\n};\n\n\nexport const getItem = async (key) => {\n  try {\n    const value = await AsyncStorage.getItem(key);\n    return value;\n  } catch (error) {\n    console.log('Error retrieving value: ', error);\n  }\n};\n\nexport const removeItem = async (key) => {\n  try {\n    await AsyncStorage.removeItem(key);\n  } catch (error) {\n    console.log('Error deleting value: ', error);\n  }\n}","import { View, Text, StyleSheet, Dimensions, TouchableOpacity } from 'react-native'\nimport React from 'react'\nimport Onboarding from 'react-native-onboarding-swiper';\nimport Lottie from 'lottie-react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { setItem } from '../utils/asyncStorage';\n\nconst { width, height } = Dimensions.get('window');\n\nexport default function OnboardingScreen() {\n    const navigation = useNavigation();\n\n    const handleDone = () => {\n        navigation.navigate('Home');\n        setItem('onboarded', '1');\n    }\n\n    const doneButton = ({ ...props }) => {\n        return (\n            <TouchableOpacity style={styles.doneButton} {...props}>\n                <Text>Done</Text>\n            </TouchableOpacity>\n        )\n\n    }\n    return (\n        <View style={styles.container}>\n            <Onboarding\n                onDone={handleDone}\n                onSkip={handleDone}\n                // bottomBarHighlight={false}\n                DoneButtonComponent={doneButton}\n                containerStyles={{ paddingHorizontal: 15 }}\n                pages={[\n                    {\n                        backgroundColor: '#003366',\n\n                        image: (\n                            <View style={styles.lottie}>\n                                <Lottie source={require('../assets/animations/nearbyRooms.json')} autoPlay loop />\n                            </View>\n                        ),\n                        title: 'Nearby Rooms',\n                        subtitle: 'Discover rooms close to your current location easily.',\n                    },\n                    {\n                        backgroundColor: '#006699',\n                        image: (\n                            <View style={styles.lottie}>\n                                <Lottie source={require('../assets/animations/directMessageFlatmates.json')} autoPlay loop />\n                            </View>\n                        ),\n                        title: 'Direct Message Flatmate',\n                        subtitle: 'Contact flatmates directly, no broker in between.',\n                    },\n                    {\n                        backgroundColor: '#0099CC',\n                        image: (\n                            <View style={styles.lottie}>\n                                <Lottie source={require('../assets/animations/verifiedListings.json')} autoPlay loop />\n                            </View>\n                        ),\n                        title: 'Verified Listings',\n                        subtitle: '100% verified rooms with 1000+ users trusted.',\n                    },\n                ]}\n            />\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: 'white'\n    },\n    lottie: {\n        width: width * 0.9,\n        height: width\n    },\n    doneButton: {\n        padding: 20,\n        // backgroundColor: 'white',\n        // borderTopLeftRadius: '100%',\n        // borderBottomLeftRadius: '100%'\n    }\n})","// src/navigation/AuthStack.js\n\nimport React, { useEffect, useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Platform } from 'react-native'; // Import Platform from 'react-native'\nimport Authentication from '../screens/Authentication';\nimport OnboardingScreen from '../screens/OnboardingScreen';\nimport { getItem } from '../utils/asyncStorage';\n\nconst Stack = createStackNavigator();\n\nconst AuthStack = () => {\n    const [showOnboarding, setShowOnboarding] = useState(null);\n\n    useEffect(() => {\n        checkIfAlreadyOnboarded();\n    }, []);\n\n    const checkIfAlreadyOnboarded = async () => {\n        let onboarded = await getItem('onboarded');\n        if (onboarded == 1) {\n            setShowOnboarding(false);\n        } else {\n            setShowOnboarding(true);\n        }\n    };\n\n    if (showOnboarding && Platform.OS !== 'web') { // Check the platform here\n        return (\n            <Stack.Navigator initialRouteName='Onboarding'>\n                <Stack.Screen name=\"Onboarding\" options={{ headerShown: false }} component={OnboardingScreen} />\n                <Stack.Screen name=\"Home\" options={{ headerShown: false }} component={Authentication} />\n            </Stack.Navigator>\n        );\n    }\n\n    if (showOnboarding == null) return null;\n\n    return (\n        <Stack.Navigator\n            screenOptions={{\n                headerShown: false\n            }}\n        >\n            <Stack.Screen name=\"Authentication\" component={Authentication} />\n        </Stack.Navigator>\n    );\n};\n\nexport default AuthStack;\n","import { logEvent } from 'firebase/analytics';\nimport React from 'react';\nimport { Image, Dimensions, StyleSheet } from 'react-native';\nimport Carousel from 'react-native-banner-carousel';\nimport { analytics } from '../firebase/firebase';\n\nconst BannerWidth = Dimensions.get('window').width;\nconst BannerHeight = 200; // Adjust the height as needed\n\nconst BannerCarousel = ({ data }) => {\n    const renderPage = (image, index) => (\n        <Image key={index} source={{ uri: image }} style={styles.bannerImage} />\n    );\n\n    return (\n        <Carousel\n            autoplay\n            autoplayTimeout={5000}\n            loop\n            index={0}\n            pageSize={BannerWidth}\n        >\n            {data.map((image, index) => renderPage(image, index))}\n        </Carousel>\n    );\n};\n\nconst styles = StyleSheet.create({\n    bannerImage: {\n        width: BannerWidth,\n        height: BannerHeight,\n        // Add any additional styling for your images here\n    },\n    // You can add additional styles if needed\n});\n\nexport default BannerCarousel;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { View, Text, FlatList, TouchableOpacity, StyleSheet, Image, RefreshControl, Dimensions } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { collection, getDocs, getFirestore, query } from 'firebase/firestore'\nimport Animated, { useSharedValue, useAnimatedStyle, withSpring } from 'react-native-reanimated';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { analytics, db } from '../firebase/firebase';\nimport BannerCarousel from '../components/BannerCarousel';\nimport { logEvent } from 'firebase/analytics';\nimport SkeletonLoader from \"expo-skeleton-loader\";\nconst { height, width } = Dimensions.get('window');\n\nconst Home = () => {\n    const { userToken, userInfo } = useUser();\n    const [ads, setAds] = useState([]);\n    const [banners, setBanners] = useState([]);\n    const [refreshing, setRefreshing] = useState(false);\n    const navigation = useNavigation();\n    const [bannersLoading, setBannersLoading] = useState(true);\n    const [genderFilter, setGenderFilter] = useState('all'); // 'all', 'male', 'female'\n    const [filteredAds, setFilteredAds] = useState([]);\n    useEffect(() => {\n        fetchAds();\n        fetchBanners()\n\n    }, []);\n\n    const fetchAds = async () => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/rentpost/getAllPosts`);\n            if (response.ok) {\n                const data = await response.json();\n                setAds(data);\n            } else {\n                console.error('Failed to fetch ad posts');\n            }\n        } catch (error) {\n            console.error('Error fetching ad posts:', error);\n        } finally {\n            setRefreshing(false);\n        }\n    };\n\n    const handleGenderFilterChange = (newFilter) => {\n        setGenderFilter(newFilter);\n    };\n\n    const skeletonBanner = () => (\n        <SkeletonLoader\n            boneColor=\"#B0B3B8\"\n            highlightColor=\"#E0E0E0\"\n        >\n\n            <SkeletonLoader.Item\n                style={{ width, height: height / 4, marginVertical: 10 }}\n            />\n        </SkeletonLoader>\n    );\n    const filterAds = () => {\n        let filtered;\n        switch (genderFilter) {\n            case 'male':\n                filtered = ads.filter(ad => ad.isMaleOnly === true);\n                break;\n            case 'female':\n                filtered = ads.filter(ad => ad.isMaleOnly === false);\n                break;\n            default:\n                filtered = ads;\n        }\n        setFilteredAds(filtered);\n    };\n    const fetchBanners = async () => {\n        try {\n            setBannersLoading(true);\n            const bannersQuery = query(collection(db, 'banners'));\n            const bannersSnapshot = await getDocs(bannersQuery);\n            const fetchedBanners = bannersSnapshot.docs.map(doc => doc.data().link);\n            setBanners(fetchedBanners);\n        } catch (error) {\n            console.error('Error fetching banners:', error);\n        } finally {\n            setBannersLoading(false);\n        }\n    };\n\n    const renderAdCard = ({ item }) => (\n        <AnimatedCard item={item} onPress={handleAdPress} />\n    );\n\n    const handleAdPress = (ad) => {\n        logEvent(analytics, \"Post OnClick\", (ad));\n        navigation.navigate('SingleScreenAd', { ad });\n    };\n\n    const onRefresh = useCallback(() => {\n        setRefreshing(true);\n        fetchAds();\n    }, []);\n    useEffect(() => {\n        filterAds();\n    }, [ads, genderFilter]);\n    return (\n        <>\n            <View style={styles.container}>\n                {bannersLoading && skeletonBanner()}\n                {!bannersLoading && banners.length > 0 && <BannerCarousel data={banners} />}\n                <View style={styles.filterButtonsContainer}>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'all' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('all')}\n                    >\n                        <Text style={genderFilter === 'all' ? styles.filterTextActive : styles.filterText}>All</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'male' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('male')}\n                    >\n                        <Text style={genderFilter === 'male' ? styles.filterTextActive : styles.filterText}>Male Only</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'female' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('female')}\n                    >\n                        <Text style={genderFilter === 'female' ? styles.filterTextActive : styles.filterText}>Female Only</Text>\n                    </TouchableOpacity>\n                </View>\n                <FlatList\n                    data={filteredAds.length ? filteredAds : ads}\n                    keyExtractor={(item) => item._id}\n                    renderItem={renderAdCard}\n                    contentContainerStyle={styles.adList}\n                    numColumns={2}\n                    refreshControl={\n                        <RefreshControl\n                            refreshing={refreshing}\n                            onRefresh={onRefresh}\n                            tintColor=\"#007DBC\"\n                        />\n                    }\n                />\n            </View>\n        </>\n    );\n};\n\nconst AnimatedCard = ({ item, onPress }) => {\n    const scale = useSharedValue(1);\n    const lastPress = useRef(Date.now());\n\n    const animatedStyles = useAnimatedStyle(() => {\n        return {\n            transform: [{ scale: scale.value }],\n        };\n    });\n\n    const animatedImageStyles = useAnimatedStyle(() => {\n        return {\n            transform: [\n                { perspective: 1000 },\n                { rotateY: `${scale.value * 0}deg` },\n            ],\n        };\n    });\n\n    const handlePress = () => {\n        const now = Date.now();\n        if (now - lastPress.current > 300) { // Prevent multiple rapid presses\n            lastPress.current = now;\n            onPress(item);\n        }\n    };\n\n    const handlePressIn = () => {\n        scale.value = withSpring(1.05);\n    };\n\n    const handlePressOut = () => {\n        scale.value = withSpring(1);\n    };\n\n    return (\n        <Animated.View style={[styles.card, animatedStyles]}>\n            <TouchableOpacity\n                activeOpacity={1}\n                onPress={handlePress}\n                onPressIn={handlePressIn}\n                onPressOut={handlePressOut}\n                delayPressIn={100} // Add delay here\n                style={styles.touchable}\n            >\n                <LinearGradient colors={['#005AAA', '#007DBC']} style={styles.gradient}>\n                    <Animated.Image source={{ uri: item.images[0] }} style={[styles.adImage, animatedImageStyles]} />\n                    <View style={styles.adDetails}>\n                        <Text\n                            style={styles.adTitle}\n                            numberOfLines={2}\n                            ellipsizeMode='tail'\n                        >\n                            {item.adTitle}\n                        </Text>\n                        <View style={styles.adInfo}>\n                            <Text style={styles.adPrice}>Price: ₹{item.price}</Text>\n                            <Text style={styles.adBedrooms}>{item.bedrooms} {item.location}</Text>\n                        </View>\n                    </View>\n                </LinearGradient>\n            </TouchableOpacity>\n        </Animated.View>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n    bannerImage: {\n        width: '100%',\n        height: 200,\n    },\n    adList: {\n        padding: 8,\n    },\n    touchable: {\n        flex: 1,\n    },\n    card: {\n        flex: 0.5,\n        margin: 8,\n        borderRadius: 15,\n        overflow: 'hidden',\n        backgroundColor: '#fff',\n        elevation: 6,\n        shadowColor: 'rgba(0,0,0,0.15)',\n        shadowOffset: { width: 0, height: 3 },\n        shadowOpacity: 1,\n        shadowRadius: 6,\n        borderColor: '#f0f0f0', // Light grey border\n        borderWidth: 1, // Border width\n        fontFamily: 'open-sans-regular',\n    },\n    adImage: {\n        width: '100%',\n        height: 140,\n        backfaceVisibility: 'hidden',\n        borderTopLeftRadius: 15, // Match border radius of card\n        borderTopRightRadius: 15, // Match border radius of card\n    },\n    adDetails: {\n        flex: 1,\n        padding: 12, // Slightly more padding\n    },\n    adTitle: {\n        fontSize: 14, // Reduced font size for title\n        //fontWeight: 'bold',\n        marginBottom: 5,\n        color: 'white', // Darker text color for better readability\n        fontFamily: 'open-sans-bold',\n    },\n    adLocation: {\n        fontSize: 14, // Reduced font size for location\n        color: 'white', // Lighter text color for location\n        marginBottom: 8, // Added margin-bottom for spacing\n    },\n    adInfo: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    adPrice: {\n        fontSize: 16,\n        color: '#deac47',\n        fontFamily: 'open-sans-bold',\n    },\n    adBedrooms: {\n        fontSize: 12,\n        color: '#999',\n    },\n\n    filterButtonsContainer: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        padding: 10,\n        //marginBottom: 20,\n    },\n    filterButton: {\n        borderWidth: 1,\n        borderColor: '#007DBC',\n        paddingVertical: 8,\n        paddingHorizontal: 20,\n        borderRadius: 20,\n        marginHorizontal: 5,\n        backgroundColor: 'white',\n    },\n    filterButtonActive: {\n        backgroundColor: '#007DBC',\n    },\n    filterText: {\n        color: '#007DBC',\n        textAlign: 'center',\n    },\n    filterTextActive: {\n        color: 'white',\n        textAlign: 'center',\n    },\n});\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    Image,\n    ScrollView,\n    Switch,\n    StyleSheet,\n    Button,\n} from 'react-native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport RNPickerSelect from 'react-native-picker-select';\nimport * as ImagePicker from 'expo-image-picker'; // For image upload\nimport { RNS3 } from 'react-native-aws3'; // For S3 upload\nimport { useUser } from '../context/UserContext';\nimport axios from 'axios';\nimport Toast from 'react-native-toast-message'; // Import the toast library\nimport API_BASE_URL from '../services/config';\nimport { useNavigation, } from '@react-navigation/native';\nimport { AuthOpen } from '../hooks/useAuth';\n\nexport default function PostAdScreen({ route }) {\n    const navigation = useNavigation();\n    const { userToken, userDetails, userInfo } = useUser();\n    const [images, setImages] = useState([]); // Store image URIs\n    const [location, setLocation] = useState(route.params?.ad?.location || null);\n    const [adTitle, setAdTitle] = useState(route.params?.ad?.adTitle || '');\n    const [adDescription, setAdDescription] = useState(route.params?.ad?.adDescription || '');\n    const [phone, setPhone] = useState(route.params?.ad?.phone || '');\n    const [email, setEmail] = useState(route.params?.ad?.email || '');\n    const [price, setPrice] = useState(route.params?.ad?.price || 0);\n    const [maxResidents, setMaxResidents] = useState(route.params?.ad?.maxResidents || 1);\n    const [preference, setPreference] = useState(route.params?.ad?.preference || null);\n    const [isMaleOnly, setIsMaleOnly] = useState(route.params?.ad?.isMaleOnly || false);\n    const [isFurnished, setIsFurnished] = useState(route.params?.ad?.isFurnished || false);\n    const [hasAttachedBathroom, setHasAttachedBathroom] = useState(\n        route.params?.ad?.hasAttachedBathroom || false\n    );\n    const [isBachelorsAllowed, setIsBachelorsAllowed] = useState(\n        route.params?.ad?.isBachelorsAllowed || false\n    );\n    const [loading, setLoading] = useState(false); // Loading state\n    const handleImageUpload = async () => {\n        const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n        if (permissionResult.granted === false) {\n            alert('Permission to access camera roll is required!');\n            return;\n        }\n\n        const pickerResult = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n            multiple: true, // Allow selecting multiple images\n        });\n        if (!pickerResult.cancelled) {\n            // Create a new array with the selected image URIs\n            const newImages = [...images, pickerResult.assets[0].uri];\n            setImages(newImages);\n        }\n    };\n\n    const uploadImagesToS3 = async () => {\n\n        Toast.show({\n            type: 'error',\n            text1: 'Error Uploading Image',\n            text2: 'Please try again later.',\n        });\n        let s3Images = [];\n\n        for (const imageUri of images) {\n            const options = {\n                keyPrefix: 'uploads/',\n                bucket: 'primecaves',\n                region: 'ap-south-1',\n                accessKey: 'AKIARM6FSFR7MWP7YQUY',\n                secretKey: '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',\n                successActionStatus: 201,\n            };\n            const file = {\n                uri: imageUri,\n                name: `${userToken.toString()}-${Date.now()}.jpeg`,\n                type: 'image/jpeg',\n            };\n\n            try {\n                const response = await RNS3.put(file, options);\n                if (response.status !== 201) {\n                    throw new Error('Failed to upload image to S3');\n                }\n\n                const s3ImageUrl = response.body.postResponse.location;\n                s3Images.push(s3ImageUrl);\n            } catch (error) {\n                console.error('Error uploading image:', error);\n                // Show a toast message for the error\n                Toast.show({\n                    type: 'error',\n                    text1: 'Error Uploading Image',\n                    text2: 'Please try again later.',\n                });\n\n            }\n        }\n\n        return s3Images;\n    };\n\n\n    const handleSubmit = async () => {\n        try {\n            let s3Images = [];\n            // Upload images to S3 and wait for the operation to complete\n            if (images) {\n                s3Images = await uploadImagesToS3();\n            }\n            const postData = {\n                images: s3Images,\n                location,\n                adTitle,\n                adDescription,\n                phone,\n                email,\n                maxResidents,\n                preference,\n                isMaleOnly,\n                isFurnished,\n                hasAttachedBathroom,\n                isBachelorsAllowed,\n                price,\n                userId: userDetails._id,\n                user: {\n                    firebaseId: userInfo.firebaseId,\n                    gender: userDetails.gender,\n                    image: userDetails.image,\n                    name: userDetails.name,\n                    phone: userDetails.phoneNumber\n                }\n            };\n            setLoading(true);\n            if (route.params?.ad) {\n                // If route.params.ad exists, it means we're updating an existing ad\n                const response = await axios.put(\n                    `${API_BASE_URL}/rentpost/update/${route.params.ad._id}`,\n                    postData\n                );\n\n                // Check the response status and show a success or error toast\n                if (response.status === 200) {\n                    // Ad updated successfully\n                    console.log('Rental post updated successfully.');\n                    Toast.show({\n                        type: 'success',\n                        text1: 'Rental Post Updated',\n                        text2: 'Your rental post has been successfully updated.',\n                    });\n                    navigation.navigate('HomeTabNavigator');\n                } else {\n                    console.error('Failed to update rental post.');\n                    Toast.show({\n                        type: 'error',\n                        text1: 'Error Updating Rental Post',\n                        text2: 'Please try again later.',\n                    });\n                }\n            } else {\n                // If route.params.ad does not exist, it means we're creating a new ad\n                const response = await axios.post(`${API_BASE_URL}/rentpost/create`, postData);\n\n                // Check the response status and show a success or error toast\n                if (response.status === 201) {\n                    // Ad created successfully\n                    console.log('Rental post created successfully.');\n                    Toast.show({\n                        type: 'success',\n                        text1: 'Rental Post Created',\n                        text2: 'Your rental post has been successfully created.',\n                    });\n                    // navigation.navigate('HomeTabNavigator')\n                    navigation.goBack()\n                } else {\n                    console.error('Failed to create rental post.');\n                    Toast.show({\n                        type: 'error',\n                        text1: 'Error Creating Rental Post',\n                        text2: 'Please try again later.',\n                    });\n                }\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            // Handle error appropriately (e.g., show an error message to the user)\n            Toast.show({\n                type: 'error',\n                text1: 'Error',\n                text2: 'Please try again later.',\n            });\n        } finally {\n            // Set loading state back to false when done\n            setLoading(false);\n        }\n    };\n\n    return (\n        <ScrollView style={styles.container}>\n            <View style={styles.imageContainer}>\n                {/* Custom back button with Ionicons */}\n                <TouchableOpacity\n                    style={styles.backButton}\n                    onPress={() => navigation.goBack()}\n                >\n                    <Ionicons name=\"arrow-back\" size={24} color=\"#007DBC\" />\n                </TouchableOpacity>\n                {/* ... Your existing JSX ... */}\n            </View>\n            <View style={styles.imageContainer}>\n                <Text style={styles.heading}>Upload Photos</Text>\n                <TouchableOpacity style={styles.imageUploadButton} onPress={handleImageUpload}>\n                    <Text style={styles.uploadButtonText}>Select Images</Text>\n                </TouchableOpacity>\n                <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n                    {images.map((imageUri, index) => (\n                        <Image key={index} source={{ uri: imageUri }} style={styles.image} />\n                    ))}\n                </ScrollView>\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Location</Text>\n                <RNPickerSelect\n                    placeholder={{ label: 'Select Location', value: null }}\n                    onValueChange={(value) => setLocation(value)}\n                    items={[\n                        { label: 'Patia', value: 'Patia' },\n                        { label: 'Nayapali', value: 'Nayapali' },\n                        { label: 'CSpur', value: 'CSpur' },\n                        { label: 'Master Canteen', value: 'Master Canteen' },\n                    ]}\n                    style={pickerSelectStyles}\n                    value={location}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Ad Title</Text>\n                <TextInput\n                    style={styles.input}\n                    value={adTitle}\n                    onChangeText={setAdTitle}\n                    placeholder=\"Enter Ad Title\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Ad Description</Text>\n                <TextInput\n                    style={[styles.input, styles.multilineInput]}\n                    value={adDescription}\n                    onChangeText={setAdDescription}\n                    multiline\n                    placeholder=\"Enter Ad Description\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Phone Number</Text>\n                <TextInput\n                    style={styles.input}\n                    value={phone}\n                    onChangeText={setPhone}\n                    keyboardType=\"numeric\"\n                    placeholder=\"Enter Phone Number\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Email</Text>\n                <TextInput\n                    style={styles.input}\n                    value={email}\n                    onChangeText={setEmail}\n                    keyboardType=\"email-address\"\n                    placeholder=\"Enter Email\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Price</Text>\n                <TextInput\n                    style={styles.input}\n                    value={price}\n                    onChangeText={setPrice}\n                    keyboardType=\"numeric\"\n                    placeholder=\"Enter Price\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Maximum Residents</Text>\n                <View style={styles.stepperContainer}>\n                    <TouchableOpacity\n                        style={styles.stepperButton}\n                        onPress={() => maxResidents > 1 && setMaxResidents(maxResidents - 1)}\n                    >\n                        <Text style={styles.stepperButtonText}>-</Text>\n                    </TouchableOpacity>\n                    <Text style={styles.stepperValue}>{maxResidents}</Text>\n\n                    <TouchableOpacity\n                        style={styles.stepperButton}\n                        onPress={() => setMaxResidents(maxResidents + 1)}\n                    >\n                        <Text style={styles.stepperButtonText}>+</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Preference</Text>\n                <RNPickerSelect\n                    value={preference}\n                    placeholder={{ label: 'Select Preference', value: null }}\n                    onValueChange={(value) => setPreference(value)}\n                    items={[\n                        { label: 'Family', value: 'Family' },\n                        { label: 'Student', value: 'Student' },\n                        { label: 'Working Professional', value: 'Working Professional' },\n                    ]}\n                    style={pickerSelectStyles}\n\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Room for Male Only</Text>\n                <Switch\n                    value={isMaleOnly}\n                    onValueChange={setIsMaleOnly}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Furnishing</Text>\n                <Switch\n                    value={isFurnished}\n                    onValueChange={setIsFurnished}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Attached Bathroom</Text>\n                <Switch\n                    value={hasAttachedBathroom}\n                    onValueChange={setHasAttachedBathroom}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Bachelors Allowed</Text>\n                <Switch\n                    value={isBachelorsAllowed}\n                    onValueChange={setIsBachelorsAllowed}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <TouchableOpacity\n                style={styles.submitButton}\n                onPress={handleSubmit}\n                disabled={loading} // Disable the button while loading\n            >\n                <Text style={styles.submitButtonText}>{loading ? 'Loading...' : 'Submit'}</Text>\n            </TouchableOpacity>\n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16,\n        backgroundColor: '#fff',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        color: '#007DBC',\n    },\n    imageContainer: {\n        marginBottom: 20,\n    },\n    imageUploadButton: {\n        backgroundColor: '#007DBC',\n        padding: 10,\n        borderRadius: 5,\n        alignItems: 'center',\n        bottom: 8,\n    },\n    uploadButtonText: {\n        color: 'white',\n        fontWeight: 'bold',\n    },\n    image: {\n        width: 100,\n        height: 100,\n        marginRight: 10,\n        borderRadius: 5,\n    },\n    fieldContainer: {\n        marginBottom: 20,\n    },\n    label: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginBottom: 5,\n        color: '#007DBC',\n    },\n    input: {\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n        padding: 10,\n    },\n    multilineInput: {\n        minHeight: 100,\n        textAlignVertical: 'top',\n    },\n    stepperContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    stepperButton: {\n        backgroundColor: '#007DBC',\n        padding: 8,\n        borderRadius: 20,\n        marginHorizontal: 5,\n    },\n    stepperButtonText: {\n        color: 'white',\n        fontSize: 18,\n    },\n    stepperValue: {\n        fontSize: 16,\n    },\n    submitButton: {\n        backgroundColor: '#007DBC',\n        padding: 16,\n        borderRadius: 5,\n        alignItems: 'center',\n    },\n    submitButtonText: {\n        color: 'white',\n        fontWeight: 'bold',\n        fontSize: 18,\n    },\n});\n\n\nconst pickerSelectStyles = StyleSheet.create({\n    inputIOS: {\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n        paddingVertical: 12,\n        paddingHorizontal: 10,\n        paddingRight: 30, // to ensure the text is never behind the icon\n        marginBottom: 20,\n    },\n    inputAndroid: {\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n        paddingVertical: 10,\n        paddingHorizontal: 10,\n        paddingRight: 30, // to ensure the text is never behind the icon\n        marginBottom: 20,\n    },\n});\n","import React, { useEffect, useCallback, useState } from 'react';\nimport {\n    View,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    Modal,\n    StyleSheet,\n    Platform,\n    ActivityIndicator,\n    Image,\n    ScrollView\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport { RNS3 } from 'react-native-aws3';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport Toast from 'react-native-toast-message';\nimport Autocomplete from 'react-native-autocomplete-input';\nimport { AuthOpen } from '../hooks/useAuth'\nimport { serverTimestamp, updateDoc, doc, setDoc } from 'firebase/firestore';\nimport { getAuth, updateProfile as updateAuthProfile } from 'firebase/auth';\nimport { db } from '../firebase/firebase';\nimport * as Location from 'expo-location';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport maleIcon from '../assets/images/male.png';\nimport femaleIcon from '../assets/images/female.png';\nimport student from '../assets/images/student.png';\nimport professionals from '../assets/images/professionals.png';\nimport family from '../assets/images/family.png';\nconst domains = ['gmail.com', 'hotmail.com', 'yahoo.com', 'outlook.com'];\n\nconst UpdateProfileModal = ({ isVisible, onDismiss, isUserExists }) => {\n    const { setUserInfoToStore } = useUser()\n    const { userToken, userInfo } = useUser();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [userId, setUserId] = useState('');\n    const [gender, setGender] = useState('');\n    const [tenantType, setTenantType] = useState('');\n    const [image, setImage] = useState(null);\n    const [isLoading, setLoading] = useState(false);\n    const [suggestions, setSuggestions] = useState([]);\n    const [fieldsDisabled, setFieldsDisabled] = useState(true);\n    const [userLocation, setUserLocation] = useState(''); // State variable to store user's location\n    const handleGenderSelect = (selectedGender) => {\n        setGender(selectedGender);\n    };\n\n    const requestLocationPermission = async () => {\n        try {\n            const { status } = await Location.requestForegroundPermissionsAsync();\n            if (status !== 'granted') {\n                // Handle permission denied or other errors\n                console.error('Location permission denied.');\n                return;\n            }\n            const location = await Location.getCurrentPositionAsync({});\n            setUserLocation(location); // Store user's location in state\n        } catch (error) {\n            console.error('Error getting user location:', error);\n        }\n    };\n\n    const updateProfileToFirebase = async ({ name, pic, email, isEdit }) => {\n        try {\n            const newDocRef = doc(db, 'user_profiles', userInfo.firebaseId);\n            const handler = isEdit ? updateDoc : setDoc;\n            await handler(newDocRef, {\n                id: userInfo.firebaseId,\n                name,\n                pic,\n                email,\n                phone: userToken.toString(),\n                timestamp: serverTimestamp(),\n            });\n            const auth = getAuth();\n            await updateAuthProfile(auth.currentUser, {\n                displayName: name,\n                photoURL: pic,\n            });\n            console.log('Updated to Firestore and Firebase Authentication');\n        } catch (error) {\n            console.error('Error updating profile:', error);\n        }\n    };\n\n    const handleTenantTypeSelect = (selectedType) => {\n        setTenantType(selectedType);\n    };\n\n    const handleChooseImage = async () => {\n        const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n        if (permissionResult.granted === false) {\n            alert('Permission to access media library is required!');\n            return;\n        }\n\n        const pickerResult = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n        });\n\n        if (!pickerResult.cancelled) {\n            const selectedImageUri = pickerResult.assets[0].uri;\n            setImage(selectedImageUri);\n        }\n    };\n\n    const handleEmailChange = (text) => {\n        setEmail(text);\n        const query = text.split('@')[1];\n        const filteredDomains = domains.filter((domain) => domain.includes(query));\n        setSuggestions(filteredDomains);\n    };\n\n    const handleUpdate = useCallback(async () => {\n        setLoading(true);\n        let s3ImageUrl = null;\n        const isEdit = userId !== ''\n        try {\n            if (image) {\n                const options = {\n                    keyPrefix: 'uploads/',\n                    bucket: 'primecaves',\n                    region: 'ap-south-1',\n                    accessKey: 'AKIARM6FSFR7MWP7YQUY',\n                    secretKey: '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',\n                    successActionStatus: 201,\n                };\n                let file;\n                if (Platform.OS === 'web') {\n                    const blob = await fetch(image).then((res) => res.blob());\n                    file = {\n                        uri: image,\n                        name: `${userToken.toString()}.jpeg`,\n                        type: 'image/jpeg',\n                        blob,\n                    };\n                } else {\n                    file = {\n                        uri: image,\n                        name: `${userToken.toString()}.jpeg`,\n                        type: 'image/jpeg',\n                    };\n                }\n                const response = await RNS3.put(file, options);\n                if (response.status !== 201) {\n                    throw new Error('Failed to upload image to S3');\n                }\n                s3ImageUrl = response.body.postResponse.location;\n            }\n            const apiEndpoint = isEdit\n                ? `${API_BASE_URL}/user/update/${userId}`\n                : `${API_BASE_URL}/user/register`;\n            const method = isEdit ? 'PUT' : 'POST'\n            const response = await fetch(apiEndpoint, {\n                method,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    tenantType,\n                    image,\n                    name,\n                    email,\n                    gender,\n                    phoneNumber: userToken.toString(),\n                    firebaseId: userInfo.firebaseId,\n                    location: userLocation,\n                }),\n            });\n\n            if (response.ok) {\n                const responseData = await response.json();\n                onDismiss();\n                updateProfileToFirebase({ name, pic: image, email, isEdit })\n                setUserInfoToStore({\n                    name, image, email,\n                    gender,\n                    phone: userToken.toString(),\n                    firebaseId: userInfo.firebaseId,\n                    tenantType,\n                    subscriptionStartDate: isEdit ? userInfo.subscriptionStartDate : 'NA',\n                    location: userLocation,\n                })\n                Toast.show({\n                    type: 'success',\n                    text1: 'Success',\n                    text2: 'Profile saved successfully',\n                });\n\n            } else {\n                console.error('Save failed');\n            }\n        } catch (error) {\n            console.error('Error during save:', error);\n            Toast.show({\n                type: 'error',\n                text1: 'Error',\n                text2: 'Profile failed to save',\n            });\n        } finally {\n            setLoading(false);\n        }\n    }, [userToken, name, email, gender, image, tenantType]);\n\n    useEffect(() => {\n        requestLocationPermission();\n        if (isVisible && isUserExists) {\n            setFieldsDisabled(true);\n            const fetchUserDetails = async () => {\n                try {\n                    const response = await fetch(`${API_BASE_URL}/user/getUserByPhoneNumber/${userToken.toString()}`);\n                    if (response.ok) {\n                        const userData = await response.json();\n                        setName(userData.name || '');\n                        setEmail(userData.email || '');\n                        setGender(userData.gender || '');\n                        setTenantType(userData.tenantType || '');\n                        setUserId(userData._id || '');\n                        setFieldsDisabled(false);\n                    } else {\n                        console.error('Failed to fetch user details');\n                    }\n                } catch (error) {\n                    console.error('Error fetching user details:', error);\n                    setFieldsDisabled(false);\n                }\n            };\n\n            fetchUserDetails();\n        }\n    }, [isVisible, userToken]);\n\n\n    const updateButtonStyle = [\n        styles.actionButton,\n        { backgroundColor: '#007DBC', left: 5 }, // Set background color to #007DBC\n    ];\n\n    return (\n        <Modal visible={isVisible} transparent={true} animationType=\"slide\">\n            <View style={styles.modalContainer}>\n                <LinearGradient // Use LinearGradient for the gradient background\n                    colors={['#007DBC', '#005CA1']} // Gradient colors\n                    style={styles.linearGradient}\n                >\n                    <View style={styles.modalContent}>\n                        {isUserExists && ( // Conditionally render the close icon\n                            <TouchableOpacity\n                                style={styles.closeButton}\n                                onPress={onDismiss}\n                            >\n                                <MaterialCommunityIcons\n                                    name=\"close\"\n                                    size={24}\n                                    color=\"white\" // Set the close icon color to white\n                                />\n                            </TouchableOpacity>\n                        )}\n                        <Text style={styles.modalTitle}>Update Profile</Text>\n                        <View style={styles.chooseImageButton}>\n                            <MaterialCommunityIcons\n                                name=\"camera\"\n                                size={24}\n                                color=\"#007DBC\"\n                                style={{ marginRight: 8 }}\n                            />\n                            <Text style={styles.chooseImageText}>Choose Image</Text>\n                        </View>\n                        {image && (\n                            <Image\n                                source={{ uri: image }}\n                                style={styles.profileImage}\n                            />\n                        )}\n                        <TextInput\n                            style={styles.input}\n                            placeholder=\"Name\"\n                            placeholderTextColor={\"#E7E0C3\"}\n                            value={name}\n                            onChangeText={(text) => setName(text)}\n                        />\n                        <TextInput\n                            style={styles.input}\n                            placeholder=\"Email\"\n                            placeholderTextColor={\"#E7E0C3\"}\n                            value={email}\n                            onChangeText={handleEmailChange}\n                        />\n                        <View style={styles.genderContainer}>\n                            <Text style={styles.label}>Gender</Text>\n                            <View style={styles.radioButtons}>\n                                <TouchableOpacity\n                                    onPress={() => handleGenderSelect('male')}\n                                    style={[\n                                        styles.radioButton,\n                                        gender === 'male' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={maleIcon}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={gender === 'male' ? styles.radioButtonTextSelected : styles.radioButtonText}>Male</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity\n                                    onPress={() => handleGenderSelect('female')}\n                                    style={[\n                                        styles.radioButton,\n                                        gender === 'female' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={femaleIcon}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={gender === 'female' ? styles.radioButtonTextSelected : styles.radioButtonText}>Female</Text>\n                                </TouchableOpacity>\n                            </View>\n                        </View>\n                        <View style={styles.tenantTypeContainer}>\n                            <Text style={styles.label}>I am</Text>\n                            <View style={styles.radioButtonsTenantType}>\n                                <TouchableOpacity\n                                    onPress={() => handleTenantTypeSelect('student')}\n                                    style={[\n                                        styles.radioButtonTenantType,\n                                        tenantType === 'student' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={student}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={tenantType === 'student' ? styles.radioButtonTextSelected : styles.radioButtonText}>Student</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity\n                                    onPress={() => handleTenantTypeSelect('professional')}\n                                    style={[\n                                        styles.radioButtonTenantType,\n                                        tenantType === 'professional' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={professionals}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={tenantType === 'professional' ? styles.radioButtonTextSelected : styles.radioButtonText}>Working Professional</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity\n                                    onPress={() => handleTenantTypeSelect('family')}\n                                    style={[\n                                        styles.radioButtonTenantType,\n                                        tenantType === 'family' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={family}\n                                        style={{ width: 24, height: 24, }}\n                                    />\n                                    <Text style={tenantType === 'family' ? styles.radioButtonTextSelected : styles.radioButtonText}>Family</Text>\n                                </TouchableOpacity>\n                            </View>\n                        </View>\n                        {isLoading ? (\n                            <ActivityIndicator size=\"small\" color=\"#dddddd\" style={styles.loader} />\n                        ) : (\n                            <View style={styles.buttonContainer}>\n                                <TouchableOpacity\n                                    style={updateButtonStyle}\n                                    onPress={handleUpdate}\n                                >\n                                    <Text style={styles.buttonText}>Save</Text>\n                                </TouchableOpacity>\n                            </View>\n                        )}\n                    </View>\n                </LinearGradient>\n            </View>\n        </Modal>\n    );\n};\nconst styles = StyleSheet.create({\n    tenantTypeContainer: {\n        width: '100%',\n        marginBottom: 10,\n    },\n    actionButton: {\n        padding: 10,\n        borderRadius: 5,\n        width: '100%',\n        alignItems: 'center',\n    },\n    loader: {\n        marginTop: 10,\n    },\n    buttonText: {\n        color: 'white',\n        fontFamily: 'open-sans-bold'\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    profileImage: {\n        width: 100,\n        height: 100,\n        borderRadius: 50,\n        marginTop: 10,\n    },\n    scrollViewContent: {\n        flexGrow: 1, // Allow the content to grow vertically\n    },\n    modalContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    },\n    linearGradient: {\n        width: '80%', // Set the width to 100% to cover the entire modal\n    },\n    modalContent: {\n        padding: 20,\n        borderRadius: 10,\n        alignItems: 'center',\n        backgroundColor: 'transparent', // Make the content background transparent\n    },\n    modalTitle: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        color: 'white', // Set the text color to white\n        fontFamily: 'open-sans-regular',\n    },\n    input: {\n        width: '100%',\n        borderWidth: 1,\n        borderColor: 'white', // Set the border color to white\n        borderRadius: 10,\n        padding: 15,\n        marginBottom: 20,\n        fontSize: 16,\n        backgroundColor: 'transparent', // Make the input background transparent\n        color: 'white', // Set the text color to white\n        fontFamily: 'open-sans-light',\n    },\n    closeButton: {\n        position: 'absolute',\n        top: 10,\n        right: 10,\n        zIndex: 1,\n    },\n    chooseImageButton: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: 10,\n    },\n    chooseImageText: {\n        color: '#007DBC',\n        fontFamily: 'open-sans-bold'\n    },\n    genderContainer: {\n        width: '100%',\n        marginBottom: 10,\n    },\n    label: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginBottom: 5,\n        color: 'white'\n    },\n    radioButtons: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n\n    },\n    radioButton: {\n        flexDirection: 'row', // Make it horizontal\n        alignItems: 'center',\n        borderWidth: 0.4,\n        borderRadius: 5,\n        padding: 10,\n        marginRight: 10,\n    },\n    radioButtonSelected: {\n        borderColor: '#dddddd',\n        borderRadius: 5,\n        borderWidth: 1,\n        backgroundColor: '#007DBC', // Set background color to blue on selection\n    },\n    radioButtonText: {\n        color: 'white',\n        fontFamily: 'open-sans-regular',\n        marginLeft: 10,\n    },\n    radioButtonTextSelected: {\n        color: 'white', // Set text color to white on selection\n        marginLeft: 10, // Add margin to separate text from icon\n        fontFamily: 'open-sans-regular'\n\n    },\n    radioButtonsTenantType: { // Center items vertically\n        justifyContent: 'space-between',\n        marginBottom: 20, // Add margin to separate options\n    },\n\n    radioButtonTenantType: {\n        flexDirection: 'row',\n        borderWidth: 0.4,\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10, // Add margin to separate options\n    },\n\n});\n\nexport default UpdateProfileModal;\n\n","const getMatchedUserInfo = (users, userLoggedIn) => {\n  const newUsers = { ...users };\n  delete newUsers[userLoggedIn];\n\n  const [id, user] = Object.entries(newUsers).flat();\n\n  return { id, ...user };\n};\n\nexport default getMatchedUserInfo;\n","const generateId = (id1, id2) => {\n    if (id1 > id2) {\n        return id1 + id2\n    } else {\n        return id2 + id1\n    }\n}\n\nexport default generateId;","\nimport React, { useEffect, useState } from \"react\";\nimport { View, Text, TouchableOpacity, Image, StyleSheet } from \"react-native\";\n\nimport { useNavigation } from '@react-navigation/native';\nimport tw from \"tailwind-rn\";\nimport { collection, onSnapshot, orderBy, query } from \"@firebase/firestore\";\nimport { db } from \"../firebase/firebase\";\nimport getMatchedUserInfo from \"../utils/getMatchedUserInfo\";\nimport { useUser } from \"../context/UserContext\";\nimport generateId from \"../utils/generateIds\";\n\nconst ChatRow = ({ matchDetails }) => {\n  const navigation = useNavigation();\n  const { userInfo } = useUser();\n  const [lastMessage, setLastmessage] = useState(\"\");\n  const [matchedUserInfo, setMatchedUserInfo] = useState(null);\n  useEffect(() => {\n    setMatchedUserInfo(getMatchedUserInfo(matchDetails.users, userInfo.firebaseId));\n  }, [matchDetails, userInfo]);\n\n  useEffect(\n    () => {\n      if (matchedUserInfo) {\n        onSnapshot(\n          query(\n            collection(db, \"matches\",\n              generateId(userInfo.firebaseId, matchedUserInfo.id)\n              , \"messages\"),\n            orderBy(\"timestamp\", \"desc\")\n          ),\n          (snapshot) => setLastmessage(snapshot.docs[0]?.data()?.message)\n        )\n      }\n    },\n    [matchedUserInfo, db]\n  );\n  let userDetails;\n  if (matchedUserInfo) {\n    userDetails = matchDetails.users[matchedUserInfo.id];\n  }\n\n\n  const handleDirectMessage = () => {\n    navigation.navigate('MessagWithData', {\n      userDetails\n    })\n  };\n  return (\n    <TouchableOpacity\n      style={[\n        tw(\"flex-row items-center py-3 px-5 bg-white mx-3 my-1 rounded-lg\"),\n        styles.cardShadow,\n      ]}\n      onPress={handleDirectMessage}\n    >\n      {matchedUserInfo ? (\n        <>\n          <Image\n            style={tw(\"rounded-full h-16 w-16 mr-4\")}\n            source={{\n              uri:\n                matchedUserInfo?.photoUrl ||\n                'https://i.pinimg.com/736x/ff/a0/9a/ffa09aec412db3f54deadf1b3781de2a.jpg',\n            }}\n          />\n          <View>\n            <Text style={tw(\"text-lg font-bold\")}>\n              {matchedUserInfo?.name}\n            </Text>\n            <Text style={tw(\"font-light\")}>\n              {lastMessage?.length > 34\n                ? lastMessage?.substring(0, 34) + '...'\n                : lastMessage || 'Say Hi!'}\n            </Text>\n          </View>\n        </>\n      ) : (\n        <View style={tw('justify-center items-center')}>\n          <Text style={tw('text-lg text-gray-500')}>\n            Yet to have a conversation\n          </Text>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  cardShadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.41,\n    elevation: 2,\n  },\n});\n\n\nexport default ChatRow;\n","import { collection, onSnapshot, query, where } from \"@firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  View,\n  Text,\n  FlatList,\n  StyleSheet,\n} from \"react-native\";\nimport tw from \"tailwind-rn\";\nimport { AuthOpen } from \"../hooks/useAuth\";\nimport ChatRow from \"./ChatRow\";\nimport { db } from \"../firebase/firebase\";\nimport { useUser } from \"../context/UserContext\";\n\nconst ChatList = () => {\n  const [matches, setMatches] = useState([]);\n  const { userInfo } = useUser();\n  const [loading, setLoading] = useState(true);\n  useEffect(\n    () =>\n      onSnapshot(\n        query(\n          collection(db, \"matches\"),\n          where(\"usersMatched\", \"array-contains\", userInfo.firebaseId)\n        ),\n        (snapshot) =>\n          setMatches(\n            snapshot.docs.map(\n              (doc) => ({\n                id: doc.id,\n                ...doc.data(),\n              }),\n              setLoading(false)\n            )\n          )\n      ),\n    [userInfo]\n  );\n\n  return loading ? (\n    <View style={[styles.container, styles.horizontal]}>\n      <ActivityIndicator size=\"large\" color=\"#29325C\" />\n    </View>\n  ) : matches.length > 0 ? (\n    <FlatList\n      style={tw(\"h-full\")}\n      data={matches}\n      keyExtractor={(item) => item.id}\n      renderItem={({ item }) => <ChatRow matchDetails={item} />}\n    />\n  ) : (\n    <View style={tw(\"p-5\")}>\n      <Text style={tw(\"text-center text-lg\")}>No Message at the moment 😢</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n  },\n});\n\nexport default ChatList;\n","import { useNavigation } from \"@react-navigation/core\";\nimport React, { useEffect } from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport ChatList from \"../components/ChatList\";\nimport Header from \"../components/Header\";\n\nconst Chat = () => {\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView>\n      <ChatList />\n    </SafeAreaView>\n  );\n};\n\nexport default Chat;\n","import React, { useState, useEffect } from 'react';\nimport { View, TouchableOpacity, StyleSheet, Modal, Text, TextInput, FlatList, ScrollView } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport axios from 'axios';\nimport API_BASE_URL from '../services/config';\nimport { useUser } from '../context/UserContext';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport { logEvent } from 'firebase/analytics';\nimport { analytics } from '../firebase/firebase';\nconst DEFAULT_LOCATION = {\n  label: 'Patia',\n  value: 'Patia',\n}\nconst CustomHeader = ({ navigation, onSettingPress, showBack = false }) => {\n  const { setUserInfoToStore, useToken } = useUser()\n  const [selectedLocation, setSelectedLocation] = useState(DEFAULT_LOCATION);\n  const [allLocations, setLocations] = useState([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [suggestedLocations, setSuggestedLocations] = useState([]);\n  const [topLocations, setTopLocations] = useState([]);\n\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/user/getAllLocations`); // Replace with your API endpoint\n        const { locations = [] } = response.data;\n        const fetchedLocations = locations.map(location => ({\n          label: location,\n          value: location\n        }));\n        setLocations(fetchedLocations);\n        setTopLocations(fetchedLocations.slice(0, 30));\n      } catch (error) {\n        console.error('Error fetching locations in component:', error);\n      }\n    };\n\n    fetchLocations();\n  }, []);\n\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n    const filteredLocations = allLocations.filter((location) =>\n      location.label.toLowerCase().includes(query.toLowerCase())\n    );\n    setSuggestedLocations(filteredLocations);\n  };\n\n  const clearSearch = () => {\n    setSearchQuery('');\n    setSuggestedLocations([]);\n  };\n\n  const selectLocation = (location) => {\n    logEvent(analytics, \"location changed\", location);\n    setSelectedLocation(location);\n    setModalVisible(false);\n    setSearchQuery('');\n    setSuggestedLocations([]);\n    setUserInfoToStore(location)\n  };\n\n  const renderLocationItem = ({ item }) => (\n    <TouchableOpacity style={styles.locationItem} onPress={() => selectLocation(item)}>\n      <Text style={styles.locationText}>{item.label}</Text>\n    </TouchableOpacity>\n  );\n\n  const renderTag = (item) => (\n    <TouchableOpacity style={styles.tag} onPress={() => selectLocation(item)}>\n      <Text style={styles.tagText}>{item.label}</Text>\n    </TouchableOpacity>\n  );\n\n  return (\n    <SafeAreaView edges={['top']} style={{ flex: 0, backgroundColor: 'transparent' }}>\n      <LinearGradient colors={['#007DBC', '#005AAA']} style={styles.header}>\n        <View style={styles.leftContainer}>\n          {showBack && (\n            <TouchableOpacity onPress={() => navigation.goBack()} style={styles.iconButton}>\n              <Icon name=\"arrow-back\" size={24} color=\"#fff\" />\n            </TouchableOpacity>\n          )}\n          <TouchableOpacity style={styles.selectedLocationContainer} onPress={() => setModalVisible(true)}>\n            <Text style={styles.selectedLocationText}>\n              {selectedLocation ? selectedLocation.label : 'Select Location'}\n            </Text>\n            <Icon name=\"chevron-down\" size={20} color=\"#fff\" style={styles.downIcon} />\n          </TouchableOpacity>\n        </View>\n        <TouchableOpacity onPress={onSettingPress} style={styles.iconButton}>\n          <Icon name=\"settings\" size={24} color=\"#fff\" />\n        </TouchableOpacity>\n      </LinearGradient>\n\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalView}>\n          <LinearGradient colors={['#007DBC', '#dddddd']} style={styles.modalGradient}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalHeaderText}>Select Location</Text>\n              <TouchableOpacity onPress={() => setModalVisible(false)}>\n                <Icon name=\"close\" size={24} color=\"#fff\" />\n              </TouchableOpacity>\n            </View>\n            <View style={styles.searchContainer}>\n              <TextInput\n                style={styles.searchInput}\n                placeholder=\"Search Location\"\n                placeholderTextColor=\"#fff\"\n\n                value={searchQuery}\n                onChangeText={handleSearch}\n              />\n              {searchQuery.length > 0 && (\n                <TouchableOpacity style={styles.clearIcon} onPress={clearSearch}>\n                  <Icon name=\"close-circle\" size={20} color=\"#fff\" />\n                </TouchableOpacity>\n              )}\n            </View>\n            <ScrollView showsHorizontalScrollIndicator={false} contentContainerStyle={styles.tagsContainer}>\n              {searchQuery.length > 0\n                ? suggestedLocations.map((location, index) => (\n                  <React.Fragment key={index}>\n                    {renderTag(location)}\n                  </React.Fragment>\n                ))\n                : topLocations.map((location, index) => (\n                  <React.Fragment key={index}>\n                    {renderTag(location)}\n                  </React.Fragment>\n                ))}\n            </ScrollView>\n          </LinearGradient>\n        </View>\n      </Modal>\n    </SafeAreaView>\n  );\n};\n\nconst tagSize = 90;\n\nconst styles = StyleSheet.create({\n  header: {\n    height: 60,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 10,\n    justifyContent: 'space-between',\n  },\n  leftContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  selectedLocationContainer: {\n    flexDirection: 'row',\n    marginLeft: 10,\n    alignItems: 'center',\n  },\n  downIcon: {\n    marginLeft: 5,\n  },\n  rightContainer: {\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n  iconButton: {\n    padding: 10,\n  },\n  selectedLocationText: {\n    color: '#fff',\n    fontSize: 18,\n    fontFamily: 'open-sans-regular',\n  },\n  modalView: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  modalGradient: {\n    width: '100%',\n    height: '60%',\n    padding: 20,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  modalHeaderText: {\n    color: '#fff',\n    fontSize: 18,\n    fontFamily: 'open-sans-regular',\n  },\n  searchContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    borderRadius: 10,\n    padding: 10,\n    marginTop: 20,\n  },\n  searchInput: {\n    flex: 1,\n    color: '#fff',\n    fontSize: 16,\n    fontFamily: 'open-sans-light',\n  },\n  clearIcon: {\n    marginLeft: 10,\n  },\n  locationList: {\n    marginTop: 20,\n  },\n  locationItem: {\n    padding: 10,\n    borderRadius: 5,\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    marginTop: 10,\n  },\n  locationText: {\n    color: '#fff',\n  },\n  tagsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    marginTop: 10,\n  },\n  tag: {\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    width: 170,\n    height: tagSize,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n    marginBottom: 10,\n  },\n  tagText: {\n    color: '#fff',\n    fontSize: 14,\n    textAlign: 'center',\n    fontFamily: 'open-sans-regular',\n  },\n});\n\nexport default CustomHeader;\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Modal, Pressable, TextInput } from 'react-native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useUser } from '../context/UserContext';\nimport uuid4 from 'uuid4';\nimport Home from './Home';\nimport PostAdScreen from './PostAd';\nimport UpdateProfileModal from '../components/UpdateProfileModal';\nimport API_BASE_URL from '../services/config';\nimport { AuthOpen } from '../hooks/useAuth';\nimport Chat from './Chat';\nimport CustomHeader from '../components/CustomHeader';\nconst Tab = createBottomTabNavigator();\n\nconst HomeTabNavigator = () => {\n    const navigation = useNavigation();\n    const { logout, userToken, fetchUserDetails } = useUser();\n    const { logOut } = AuthOpen();\n    const [isModalVisible, setModalVisible] = React.useState(false);\n    const [isUpdateModalVisible, setUpdateModalVisible] = React.useState(false);\n    const [isUserExists, setIsUserExists] = useState(false);\n    const [userProfileData, setUserProfileData] = React.useState({\n        name: '',\n        email: '',\n        gender: '',\n        phone: '',\n    });\n    const handleMyAds = () => {\n        navigation.navigate('UserAds')\n        setModalVisible(false)\n    }\n    const renderPopover = () => (\n        <Modal\n            visible={isModalVisible}\n            transparent={true}\n            onRequestClose={() => {\n                setModalVisible(false);\n                setUpdateModalVisible(false);\n            }}\n        >\n            <Pressable\n                style={styles.popoverBackground}\n                onPress={() => {\n                    setModalVisible(false);\n                    setUpdateModalVisible(false);\n                }}\n            >\n                <View style={styles.popoverContent}>\n\n                    <TouchableOpacity\n                        style={styles.popoverOption}\n                        onPress={handleUpdateProfile}\n                    >\n                        <Text style={styles.popoverOptionText}>Update Profile</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={styles.popoverOption}\n                        onPress={handleMyAds}\n                    >\n                        <Text style={styles.popoverOptionText}>My Ads</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={styles.popoverOption} onPress={handleLogout}>\n                        <Text style={styles.popoverOptionText}>Logout</Text>\n                    </TouchableOpacity>\n                </View>\n            </Pressable>\n        </Modal>\n    );\n\n    useEffect(() => {\n        fetchUserExistsStatus()\n    }, []);\n\n    const fetchUserExistsStatus = async () => {\n        const checkPhoneResponse = await fetch(`${API_BASE_URL}/user/check-phone/${userToken.toString()}`);\n        const checkPhoneData = await checkPhoneResponse.json();\n        if (checkPhoneData.exists) {\n            fetchUserDetails()\n        }\n        setUpdateModalVisible(!checkPhoneData.exists)\n        setIsUserExists(checkPhoneData.exists)\n    }\n\n    const toggleModal = () => {\n        setModalVisible(!isModalVisible);\n        if (isUpdateModalVisible) {\n            setUpdateModalVisible(false);\n        }\n    };\n\n\n    const handleUpdateProfile = () => {\n        setModalVisible(false);\n        const fetchedProfileData = {\n            name: 'John Doe',\n            email: 'johndoe@example.com',\n            gender: 'Male',\n        };\n\n        setUserProfileData(fetchedProfileData);\n        setUpdateModalVisible(true);\n    };\n\n    const handleLogout = () => {\n        logout();\n        logOut()\n    };\n\n    const handleDismissUpdateModal = () => {\n        setUpdateModalVisible(false)\n        fetchUserExistsStatus()\n    }\n\n    const renderCustomHeader = () => {\n        return (\n            <CustomHeader\n                onBackPress={() => navigation.goBack()}\n                onSettingPress={toggleModal}\n            />\n        );\n    };\n    return (\n        <>\n            <Tab.Navigator\n                tabBarOptions={{\n                    activeTintColor: '#007DBC',\n                    inactiveTintColor: 'gray',\n                    showLabel: true,\n                    style: styles.tabBar,\n                    headerShown: false\n                }}\n                screenOptions={({ route }) => ({\n                    // headerRight: () => (\n                    //     <TouchableOpacity onPress={toggleModal}>\n                    //         <MaterialCommunityIcons\n                    //             name=\"cog\"\n                    //             size={24}\n                    //             color=\"#000\"\n                    //             style={{ marginRight: 16 }}\n                    //         />\n                    //     </TouchableOpacity>\n                    // ),\n                    header: renderCustomHeader\n\n                })}\n            >\n                <Tab.Screen\n                    name=\"HomeTabNavigator\"\n                    component={Home}\n                    options={{\n                        title: 'Home',\n                        tabBarIcon: ({ color, focused }) => (\n                            <MaterialCommunityIcons\n                                name={focused ? 'home' : 'home-outline'}\n                                size={24}\n                                color={color}\n                            />\n                        ),\n                    }}\n                />\n                <Tab.Screen\n                    name=\"PostAdScreen\"\n                    component={PostAdScreen}\n                    options={{\n                        title: '',\n                        tabBarIcon: ({ color, focused }) => (\n                            <MaterialCommunityIcons\n                                name={focused ? 'plus-circle' : 'plus-circle'}\n                                size={55}\n                                color={focused ? '#007DBC' : \"rgb(128, 128, 128)\"}\n                            />\n                        ),\n                    }}\n                />\n                <Tab.Screen\n                    name=\"Message\"\n                    component={Chat}\n                    options={{\n                        tabBarIcon: ({ color, focused }) => (\n                            <MaterialCommunityIcons\n                                name={focused ? 'message' : 'message'}\n                                size={24}\n                                color={color}\n                            />\n                        ),\n                    }}\n                />\n            </Tab.Navigator>\n            {renderPopover()}\n            {isUpdateModalVisible && (<UpdateProfileModal\n                isVisible={isUpdateModalVisible}\n                onDismiss={handleDismissUpdateModal}\n                userProfileData={userProfileData}\n                isUserExists={isUserExists}\n                onUpdateProfile={(updatedData) => {\n                    // Handle updating the user profile here\n                    setUserProfileData(updatedData);\n                }}\n            />)}\n\n        </>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        padding: 16,\n    },\n    tabBar: {\n        backgroundColor: 'white',\n        borderTopWidth: 0,\n        elevation: 2,\n    },\n    addButton: {\n        backgroundColor: '#007DBC',\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        alignItems: 'center',\n        justifyContent: 'center',\n        bottom: 16,\n        elevation: 4,\n    },\n    addButtonText: {\n        color: 'white',\n        fontSize: 32,\n        fontWeight: 'bold',\n    },\n    popoverBackground: {\n        flex: 1,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    popoverContent: {\n        backgroundColor: '#fff',\n        padding: 16,\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: '#ccc',\n    },\n    popoverOption: {\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n    },\n    popoverOptionText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#007DBC',\n    },\n});\n\nexport default HomeTabNavigator;\n","import { Text, View } from 'react-native'\nimport React, { Component } from 'react'\n\nexport default class Default extends Component {\n    render() {\n        return (\n            <View>\n                <Text>Default</Text>\n            </View>\n        )\n    }\n}","// AdCard.js\nimport React from 'react';\nimport { View, Text, Image, TouchableOpacity, StyleSheet } from 'react-native';\n\nconst AdCard = ({ ad, onEdit, onDelete, onClaim }) => {\n    return (\n        <View style={styles.container}>\n            <Image source={{ uri: ad.images[0] }} style={styles.image} />\n            <Text style={styles.title}>{ad.adTitle}</Text>\n            <Text style={styles.location}>{ad.location}</Text>\n            <View style={styles.buttonContainer}>\n                <TouchableOpacity style={styles.button} onPress={() => onEdit(ad)}>\n                    <Text style={styles.buttonText}>Edit</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.button} onPress={() => onDelete(ad._id)}>\n                    <Text style={styles.buttonText}>Delete</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.button} onPress={() => onClaim(ad)}>\n                    <Text style={styles.buttonText}>Claim </Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'white',\n        borderRadius: 10,\n        padding: 10,\n        marginBottom: 20,\n        elevation: 2,\n    },\n    image: {\n        width: '100%',\n        height: 200,\n        borderRadius: 10,\n        marginBottom: 10,\n    },\n    title: {\n        fontSize: 16,\n        fontWeight: 'bold',\n    },\n    location: {\n        fontSize: 14,\n        color: 'gray',\n        marginBottom: 10,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    button: {\n        flex: 1,\n        backgroundColor: '#3182CE',\n        borderRadius: 5,\n        padding: 10,\n        alignItems: 'center',\n        marginHorizontal: 5,\n    },\n    buttonText: {\n        color: 'white',\n        fontWeight: 'bold',\n    },\n});\n\nexport default AdCard;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { View, FlatList, Text, TouchableOpacity, StyleSheet, Image, ActivityIndicator, RefreshControl } from 'react-native';\nimport Modal from 'react-native-modal';\nimport AdCard from '../components/AdCard'; // Import the AdCard component\nimport API_BASE_URL from '../services/config'; // Your API base URL\nimport { FontAwesome } from '@expo/vector-icons'; // Import FontAwesome icons\nimport { useNavigation } from '@react-navigation/native'; // Import the useNavigation hook\nimport { useUser } from '../context/UserContext';\n\nconst UserAds = () => {\n    const { userDetails } = useUser();\n    const [userAds, setUserAds] = useState([]);\n    const [selectedAd, setSelectedAd] = useState(null); // To store the selected ad for the modal\n    const [isModalVisible, setModalVisible] = useState(false);\n    const [isLoading, setIsLoading] = useState(false); // To track delete operation loading state\n    const [isDeleteConfirmationVisible, setDeleteConfirmationVisible] = useState(false); // To show delete confirmation modal\n    const navigation = useNavigation(); // Get the navigation object\n    const [refreshing, setRefreshing] = useState(false);\n\n    useEffect(() => {\n        // Fetch user's posted ads from the backend\n        const fetchUserAds = async () => {\n            try {\n                const response = await fetch(`${API_BASE_URL}/rentpost/user/${userDetails._id}`);\n                if (response.ok) {\n                    const data = await response.json();\n                    setUserAds(data);\n                } else {\n                    console.error('Failed to fetch user ads');\n                }\n            } catch (error) {\n                console.error('Error fetching user ads:', error);\n            }\n        };\n\n        fetchUserAds();\n    }, []);\n\n    const handleEdit = (ad) => {\n        navigation.navigate('PostAd', { ad });\n    };\n\n    const renderEmptyListComponent = () => (\n        <View style={styles.emptyListContainer}>\n            <Text style={styles.emptyListText}>You have no ads posted yet.</Text>\n        </View>\n    );\n\n\n    const handleDelete = async (adId) => {\n        setIsLoading(true);\n\n        try {\n            // Send a request to delete the ad by its ID\n            const response = await fetch(`${API_BASE_URL}/rentpost/delete/${adId}`, {\n                method: 'DELETE',\n            });\n\n            if (response.ok) {\n                // Remove the deleted ad from the userAds state\n                setUserAds((prevAds) => prevAds.filter((ad) => ad._id !== adId));\n            } else {\n                console.error('Failed to delete ad');\n            }\n        } catch (error) {\n            console.error('Error deleting ad:', error);\n        } finally {\n            // Reset loading state\n            setIsLoading(false);\n            // Close the modal\n            setDeleteConfirmationVisible(false);\n        }\n    };\n\n    const handleClaim = (ad) => {\n        // Implement your claim logic here\n    };\n\n    const toggleModal = (ad) => {\n\n        setModalVisible(!isModalVisible);\n    };\n\n\n    const handleDeleteAd = (ad) => {\n        setSelectedAd(ad);\n        setDeleteConfirmationVisible(true)\n    }\n\n    const onRefresh = useCallback(async () => {\n        setRefreshing(true);\n\n        try {\n            // Fetch user's posted ads from the backend\n            const response = await fetch(`${API_BASE_URL}/rentpost/user/${userDetails._id}`);\n            if (response.ok) {\n                const data = await response.json();\n                setUserAds(data);\n            } else {\n                console.error('Failed to fetch user ads');\n            }\n        } catch (error) {\n            console.error('Error fetching user ads:', error);\n        } finally {\n            setRefreshing(false);\n        }\n    }, []);\n\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                {/* Back button */}\n                <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>\n                    <FontAwesome name=\"arrow-left\" size={24} color=\"black\" />\n                </TouchableOpacity>\n                <Text style={styles.headerText}>Your Ads</Text>\n            </View>\n            <FlatList\n                data={userAds}\n                keyExtractor={(item) => item._id}\n                renderItem={({ item }) => (\n                    <TouchableOpacity onPress={() => toggleModal(item)}>\n                        <AdCard ad={item} onEdit={handleEdit} onDelete={() => handleDeleteAd(item)} onClaim={handleClaim} />\n                    </TouchableOpacity>\n                )}\n                ListEmptyComponent={renderEmptyListComponent}\n                refreshControl={\n                    <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n                }\n            />\n            <Modal isVisible={isModalVisible}>\n                <View style={styles.modalContainer}>\n                    <TouchableOpacity onPress={() => setModalVisible(false)} style={styles.closeButton}>\n                        <Text style={styles.closeButtonText}>Close</Text>\n                    </TouchableOpacity>\n                    {/* Display ad details here */}\n                    {selectedAd && (\n                        <View>\n                            <Text>{selectedAd.adTitle}</Text>\n                            <Text>{selectedAd.location}</Text>\n                            <Image source={{ uri: selectedAd.images[0] }} style={styles.image} />\n                            {/* Add other ad details */}\n                        </View>\n                    )}\n                </View>\n            </Modal>\n            {/* Delete confirmation modal */}\n            <Modal isVisible={isDeleteConfirmationVisible}>\n                <View style={styles.deleteConfirmationContainer}>\n                    <Text style={styles.deleteConfirmationText}>Are you sure you want to delete this ad?</Text>\n                    <View style={styles.deleteConfirmationButtons}>\n                        <TouchableOpacity onPress={() => setDeleteConfirmationVisible(false)} style={styles.cancelButton}>\n                            <Text style={styles.cancelButtonText}>Cancel</Text>\n                        </TouchableOpacity>\n                        {isLoading ? (\n                            <ActivityIndicator size=\"small\" color=\"blue\" />\n                        ) : (\n                            <TouchableOpacity onPress={() => handleDelete(selectedAd._id)} style={styles.confirmButton}>\n                                <Text style={styles.confirmButtonText}>Delete</Text>\n                            </TouchableOpacity>\n                        )}\n                    </View>\n                </View>\n            </Modal>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16, // Add padding for the ads\n    },\n    header: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 16, // Add margin at the bottom of the header\n    },\n    backButton: {\n        marginRight: 8,\n    },\n    headerText: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    modalContainer: {\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 10,\n    },\n    image: {\n        width: '100%',\n        height: 200,\n        borderRadius: 10,\n        marginBottom: 10,\n    },\n    deleteConfirmationContainer: {\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 10,\n    },\n    deleteConfirmationText: {\n        fontSize: 18,\n        marginBottom: 20,\n    },\n    deleteConfirmationButtons: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n    },\n    confirmButton: {\n        backgroundColor: 'red',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 5,\n    },\n    emptyListContainer: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 20,\n    },\n    emptyListText: {\n        fontSize: 16,\n        color: '#999',\n    },\n    confirmButtonText: {\n        color: 'white',\n    },\n    cancelButton: {\n        backgroundColor: '#3182CE',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 5,\n        marginRight: 10,\n    },\n    cancelButtonText: {\n        color: 'white',\n    },\n    closeButton: {\n        backgroundColor: '#3182CE',\n        padding: 8,\n        borderRadius: 5,\n    },\n    closeButtonText: {\n        color: 'white',\n    },\n});\n\nexport default UserAds;\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, Image, TouchableOpacity, ScrollView, SafeAreaView, Platform } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { db } from '../firebase/firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useUser } from '../context/UserContext';\nimport { FontAwesome } from '@expo/vector-icons';\nimport CustomHeader from '../components/CustomHeader';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nconst amenitiesMapping = [\n    { key: 'isFurnished', label: 'Furnished', icon: 'bed-outline' },\n    { key: 'hasAttachedBathroom', label: 'Attached Bathroom', icon: 'water-outline' },\n    { key: 'isMaleOnly', label: 'Male Only', icon: 'male-outline' },\n    { key: 'isBachelorsAllowed', label: 'Bachelors Allowed', icon: 'people-outline' },\n    // Add other attributes and their corresponding labels and icons here...\n];\n\nconst AdDetailsScreen = ({ route }) => {\n    const { userInfo } = useUser();\n    const { ad } = route.params;\n    const flatmatesData = ad?.flatmates || []\n    const firebaseId = ad.firebaseId;\n    const navigation = useNavigation();\n    const [userDetails, setUserDetails] = useState(null);\n    const [showDirectMessageButton, setShowDirectMessageButton] = useState(false);\n    const isPostedByCurrentUser = firebaseId === userInfo?.firebaseId;\n    useEffect(() => {\n        const fetchUserDetails = async () => {\n            try {\n                const userDoc = await getDoc(doc(db, 'user_profiles', firebaseId));\n\n                if (userDoc.exists()) {\n                    setUserDetails(userDoc.data());\n                    setShowDirectMessageButton(true);\n                }\n            } catch (error) {\n                console.error('Error fetching user details:', error);\n            }\n        };\n\n        if (firebaseId) {\n            fetchUserDetails();\n        }\n    }, [firebaseId]);\n\n    const handleDirectMessage = () => {\n        navigation.navigate('Message', {\n            userDetails\n        });\n    };\n\n    const handleBackButton = () => {\n        navigation.goBack();\n    };\n\n    return (\n        <SafeAreaView style={styles.flexContainer}>\n            <View style={{ height: \"90%\", backgroundColor: '#f8f9fa', }}>\n                <LinearGradient colors={['#007DBC', '#005AAA']} style={styles.header}>\n                    <TouchableOpacity onPress={handleBackButton}>\n                        <Ionicons name=\"arrow-back\" size={24} color=\"white\" />\n                    </TouchableOpacity>\n                </LinearGradient>\n                <ScrollView contentContainerStyle={styles.scrollViewContent}>\n                    <Image source={{ uri: ad.images[0] }} style={styles.villaImage} />\n                    <Text style={styles.villaName}>{ad.adTitle}</Text>\n                    <Text style={styles.location}>{ad.location}</Text>\n                    <View style={styles.offerContainer}>\n                        <FontAwesome name=\"check\" size={24} color=\"white\" style={styles.trustIcon} />\n\n                        <Text style={styles.offerText}>Verified User</Text>\n                    </View>\n                    <Text style={styles.description}>{ad.adDescription}</Text>\n                    <View style={styles.amenitiesContainer}>\n                        {/* <Text style={styles.amenitiesTitle}>Facilities available</Text> */}\n                        <View style={styles.amenitiesList}>\n                            {amenitiesMapping.map(amenity => {\n                                if (ad[amenity.key]) {\n                                    return (\n                                        <View style={styles.amenityItem} key={amenity.key}>\n                                            <Ionicons name={amenity.icon} size={24} color=\"white\" />\n                                            <Text style={styles.amenityLabel}>{amenity.label}</Text>\n                                        </View>\n                                    );\n                                }\n                                return null;\n                            })}\n                        </View>\n                    </View>\n                    {\n                        flatmatesData.length > 0 &&\n                        (<View style={styles.flatmatesSection}>\n                            <Text style={styles.title}>Flatmates</Text>\n                            <View style={styles.flatmatesGrid}>\n                                {flatmatesData.map((flatmate, index) => (\n                                    <View key={index} style={styles.flatmateCard}>\n                                        <Image source={{ uri: flatmate.image }} style={styles.flatmateImage} />\n                                        <Text style={styles.flatmateName}>{flatmate.name}</Text>\n                                        <Text style={styles.flatmateOccupation}>{flatmate.occupation}</Text>\n                                    </View>\n                                ))}\n                            </View>\n                        </View>)\n                    }\n                </ScrollView>\n            </View>\n            {isPostedByCurrentUser ? (\n                // Display a message indicating that the advertisement is posted by the current user\n                <Text style={styles.postedByCurrentUserMessage}>\n                    This advertisement is posted by you.\n                </Text>\n            ) : showDirectMessageButton && (\n                <View style={styles.footer}>\n                    <View style={styles.priceContainer}>\n                        <Text style={styles.discountedPrice}>₹{ad.price}/month</Text>\n                    </View>\n                    <TouchableOpacity onPress={handleDirectMessage} style={styles.bookNowButton}>\n                        <Text style={styles.bookNowButtonText}>\n                            Direct Message\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n\n            )}\n\n        </SafeAreaView>\n    );\n};\n\n// Styles have been merged from both sections\n\nconst styles = StyleSheet.create({\n    flexContainer: {\n        flex: 1,\n        backgroundColor: '#f8f9fa',\n        fontFamily: 'open-sans-regular'\n    },\n    container: {\n        flex: 1,\n    },\n    footer: {\n        borderTopWidth: 1,\n        borderColor: '#eaecef',\n        backgroundColor: '#fff',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        zIndex: 10,\n        padding: 16,\n        flexDirection: 'row',\n        ...(Platform.OS === 'web' ? {\n            position: 'fixed',\n            bottom: 0,\n            left: 0,\n            right: 0,\n        } : {\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            right: 0,\n        }),\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        padding: 16,\n        alignItems: 'center',\n        borderBottomWidth: 1,\n        borderBottomColor: '#eaecef',\n    },\n    icon: {\n        width: 24,\n        height: 24,\n    },\n    backButton: {\n        fontSize: 18,\n        color: '#007bff',\n    },\n    villaImage: {\n        width: '100%',\n        height: 300,\n        resizeMode: 'cover',\n    },\n    villaName: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginVertical: 8,\n        marginHorizontal: 16,\n        color: '#212529',\n        fontFamily: 'open-sans-bold'\n    },\n    location: {\n        fontSize: 16,\n        color: '#6c757d',\n        marginBottom: 8,\n        marginLeft: 16,\n        fontFamily: 'open-sans-regular'\n    },\n    offerContainer: {\n        flexDirection: 'row',\n        backgroundColor: '#007DBC',\n        padding: 12,\n        marginHorizontal: 16,\n        marginVertical: 8,\n        borderRadius: 4,\n    },\n    offerText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontFamily: 'open-sans-regular'\n    },\n    description: {\n        marginHorizontal: 16,\n        marginVertical: 8,\n        fontSize: 16,\n        color: '#212529',\n        fontFamily: 'open-sans-regular'\n    },\n    hostImage: {\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        margin: 16,\n        borderWidth: 2,\n        borderColor: '#eaecef',\n    },\n    hostName: {\n        fontSize: 18,\n        fontWeight: '500',\n        marginLeft: 16,\n        color: '#212529',\n    },\n    price: {\n        fontSize: 28,\n        fontWeight: 'bold',\n        marginHorizontal: 16,\n        marginVertical: 8,\n        color: '#28a745',\n    },\n    directMessageButton: {\n        backgroundColor: '#28a745',\n        padding: 12,\n        marginHorizontal: 16,\n        marginVertical: 8,\n        borderRadius: 4,\n        alignItems: 'center',\n    },\n    directMessageButtonText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontSize: 18,\n    },\n    postedByCurrentUserMessage: {\n        color: '#dc3545',\n        textAlign: 'center',\n        marginBottom: 10,\n        fontSize: 16,\n    },\n    amenitiesContainer: {\n        padding: 16,\n        borderBottomWidth: 1,\n        borderBottomColor: '#eaecef',\n        backgroundColor: '#fff',\n    },\n    amenitiesTitle: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#212529',\n        marginBottom: 8,\n        fontFamily: 'open-sans-bold'\n    },\n    amenitiesList: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'flex-start',\n    },\n    amenityItem: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        backgroundColor: '#007DBC', // This sets the background color to a blue shade\n        borderRadius: 16,\n        padding: 8,\n        marginRight: 8,\n        marginBottom: 8,\n    },\n    amenityLabel: {\n        marginLeft: 8,\n        fontSize: 14,\n        color: '#FFFFFF', // This sets the text color to white\n        fontFamily: 'open-sans-regular'\n    },\n    priceContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    originalPrice: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        textDecorationLine: 'line-through',\n        marginRight: 8,\n    },\n    discountedPrice: {\n        fontSize: 22,\n        fontWeight: 'bold',\n    },\n    bookNowButton: {\n        backgroundColor: '#28a745',\n        padding: 12,\n        borderRadius: 4,\n        alignItems: 'center',\n    },\n    bookNowButtonText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontSize: 18,\n    },\n    flatmateRow: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    flatmatesSection: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#e9ecef', // Changed background color for better visibility\n    },\n    title: {\n        fontSize: 24,\n        marginBottom: 20,\n        fontFamily: 'open-sans-bold'\n    },\n    flatmatesGrid: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between', // To maintain equal spacing between two cards in a row\n    },\n    flatmateCard: {\n        width: '48%', // Slightly less than half to account for any potential margins or paddings\n        marginBottom: 15,\n        padding: 10, // Added some padding\n        backgroundColor: '#fff', // White background for the card\n        borderRadius: 8, // Rounded corners\n        alignItems: 'center', // Center items horizontally\n    },\n    flatmateImage: {\n        width: 50,\n        height: 50,\n        borderRadius: 25,\n        marginBottom: 10, // Margin below the image\n    },\n    flatmateName: {\n        fontSize: 18,\n        fontWeight: '600',\n        fontFamily: 'open-sans-regular',\n        textAlign: 'center', // Center the text\n    },\n    flatmateOccupation: {\n        fontSize: 14,\n        color: 'gray',\n        fontFamily: 'open-sans-light',\n        textAlign: 'center', // Center the text\n    },\n    trustIcon: {\n        marginRight: 5,  // Some space between the icon and text\n        bottom: 2,\n    },\n    scrollViewContent: {\n        paddingBottom: 20, // Add some bottom padding to accommodate for any absolutely positioned elements\n    },\n});\n\n\n\nexport default AdDetailsScreen;\n","import React from \"react\";\nimport { View, Text, Image, StyleSheet } from \"react-native\";\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\n\nTimeAgo.addLocale(en)\nconst timeAgo = new TimeAgo('en-US')\n\nconst ReceiverMessage = ({ message }) => {\n\n  const date2 = new Date(message.timestamp.toDate());\n  const numericTimestamp = date2.getTime();\n  const x = timeAgo.format(numericTimestamp, 'mini')\n\n  return (\n    <View style={styles.container}>\n      <Image\n        style={styles.image}\n        source={{\n          uri: message.photoURL ||\n            'https://i.pinimg.com/736x/ff/a0/9a/ffa09aec412db3f54deadf1b3781de2a.jpg',\n        }}\n      />\n      <View style={styles.messageBubble}>\n        <Text style={styles.messageText}>{message.message}</Text>\n        <Text style={styles.timestamp}>{x} ago</Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    margin: 5,\n    alignItems: 'flex-end',\n  },\n  image: {\n    height: 40,\n    width: 40,\n    borderRadius: 20,\n    marginRight: 5,\n    borderColor: 'white',\n    borderWidth: 1,\n  },\n  messageBubble: {\n    backgroundColor: '#f0f0f0', // A soft color\n    borderRadius: 20,\n    padding: 10,\n    maxWidth: '80%',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  messageText: {\n    color: '#333', // Darker text color for contrast\n    fontSize: 16,\n  },\n  timestamp: {\n    color: '#888', // Soft color for the timestamp\n    fontSize: 12,\n    marginTop: 5,\n    alignSelf: 'flex-end',\n  }\n});\n\nexport default ReceiverMessage;\n","import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\n\nTimeAgo.addLocale(en)\nconst timeAgo = new TimeAgo('en-US')\n\nconst SenderMessage = ({ message }) => {\n\n  const date2 = new Date(message?.timestamp?.toDate());\n  const numericTimestamp = date2?.getTime();\n  const x = numericTimestamp ? timeAgo.format(numericTimestamp, 'mini') : ''\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.messageText}>{message.message}</Text>\n      <Text style={styles.timestamp}>{x ? x + ' ago' : 'sending...'}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#4D7EA8', // A calm blue tone\n    borderRadius: 15,\n    padding: 10,\n    marginVertical: 5,\n    marginRight: 10,\n    marginLeft: 'auto',\n    maxWidth: '80%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3,\n  },\n  messageText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    marginBottom: 2,\n  },\n  timestamp: {\n    color: '#D3E3F2', // A lighter shade for timestamp\n    fontSize: 12,\n    alignSelf: 'flex-end',\n  }\n});\n\nexport default SenderMessage;\n","import { Image, StyleSheet, Text, View, TouchableOpacity, Platform } from \"react-native\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Ionicons } from '@expo/vector-icons'; // Make sure to install this library\nimport AnimatedNumbers from 'react-native-animated-numbers';\nimport WebAnimatedNumbers from 'react-animated-numbers';\nconst ChatHeader = ({ userDetails, navigation, coins }) => {\n    const handleBackPress = () => {\n        navigation.goBack();\n    };\n    const AnimatedNumberComponent = Platform.select({\n        web: WebAnimatedNumbers,\n        default: AnimatedNumbers,\n    });\n    return (\n        <SafeAreaView>\n            <View style={styles.chatHeaderContainer} >\n\n                <TouchableOpacity onPress={handleBackPress} style={styles.backButton}>\n                    <Ionicons name=\"arrow-back\" size={24} color=\"#FFFFFF\" />\n                </TouchableOpacity>\n                {userDetails?.image && (<Image source={{ uri: userDetails.image }} style={styles.chatHeaderImage} />)}\n                <Text style={styles.chatHeaderText}>{userDetails.name}</Text>\n                <View style={styles.coinsContainer}>\n                    <Text style={styles.coinsTitle}>Message Left</Text>\n                    <AnimatedNumberComponent\n                        animateToNumber={coins}\n                        fontStyle={styles.coinsValue}\n                        includeComma\n                        frameStyle={{ flexDirection: 'row', alignItems: 'flex-end' }}\n                    />\n                </View>\n            </View>\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    chatHeaderContainer: {\n\n        flexDirection: 'row',\n        alignItems: 'center',\n        padding: 10,\n        backgroundColor: '#006699', // A nice shade of blue\n        borderBottomWidth: 1,\n        borderColor: '#006699', // A slightly darker blue for the border\n    },\n    chatHeaderImage: {\n        width: 40,\n        height: 40,\n        borderRadius: 20,\n        marginRight: 10,\n    },\n    chatHeaderText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#FFFFFF', // White text for better contrast and readability\n    },\n    backButton: {\n        marginRight: 10,\n    },\n    coinsTitle: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        color: '#FFFFFF', // Assuming the title is also white\n        marginRight: 8, // Add some space between the title and the number\n    },\n    coinsValue: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#FFD700', // A gold-like color for the coins value\n    },\n    coinsContainer: {\n        marginLeft: 'auto', // This pushes the coins container to the extreme right\n        flexDirection: 'row',\n        alignItems: 'center',\n        right: 15\n    },\n});\n\nexport default ChatHeader;","import React from 'react'; // Basic React import\nimport { View, Text, TouchableOpacity, StyleSheet, ScrollView } from 'react-native'; // React Native components\n\n\nconst MessageSuggestion = ({ onSelectSuggestion }) => {\n    const suggestions = [\n        \"Hi, How are you ?\",\n        \"Hi, I am looking for this house, is it available?\",\n    ];\n\n    return (\n        <ScrollView\n\n            horizontal={true}\n            contentContainerStyle={styles.messageSuggestionContainer}>\n            {suggestions.map((text, index) => (\n                <TouchableOpacity\n                    key={index}\n                    style={styles.messageSuggestion}\n                    onPress={() => onSelectSuggestion(text)}\n                >\n                    <Text style={styles.messageSuggestionText}>{text}</Text>\n                </TouchableOpacity>\n            ))}\n        </ScrollView>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    // ... other styles\n    messageSuggestionContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        paddingVertical: 10,\n    },\n    messageSuggestion: {\n        backgroundColor: '#FFFFFF', // Blue background\n        borderRadius: 20,\n        paddingVertical: 10,\n        paddingHorizontal: 15,\n        marginHorizontal: 5,\n    },\n    messageSuggestionText: {\n        // color: '#FFFFFF', // White text\n        fontSize: 16,\n    },\n});\n\nexport default MessageSuggestion;","import React from 'react';\nimport { Modal, View, Text, TouchableOpacity, StyleSheet, Platform } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport AnimatedNumbers from 'react-native-animated-numbers';\nimport WebAnimatedNumbers from 'react-animated-numbers';\nimport { Ionicons } from '@expo/vector-icons';\n\nconst CoinModal = ({ isVisible, onTakePremium, coins, onClose }) => {\n    const AnimatedNumberComponent = Platform.select({\n        web: WebAnimatedNumbers,\n        default: AnimatedNumbers,\n    });\n    return (\n        <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={isVisible}\n            onRequestClose={onClose}\n        >\n            <View style={styles.centeredView}>\n                <LinearGradient\n                    colors={['#005AAA', '#dddddd',]}\n                    style={styles.gradient}\n                >\n                    <TouchableOpacity style={styles.closeButton} onPress={onClose}>\n                        <Ionicons name=\"close-circle\" size={30} color=\"white\" />\n                    </TouchableOpacity>\n                    <View style={styles.modalView}>\n\n                        <Text style={styles.modalText}>You have only one coin left!</Text>\n                        <AnimatedNumberComponent\n                            animateToNumber={coins}\n                            fontStyle={styles.animatedNumbers}\n                        />\n                        <TouchableOpacity style={styles.premiumButton} onPress={onTakePremium}>\n                            <Text style={styles.premiumButtonText}>Buy Premium</Text>\n                        </TouchableOpacity>\n                    </View>\n                </LinearGradient>\n            </View>\n        </Modal>\n    );\n};\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    gradient: {\n        width: '80%',\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 5\n    },\n    modalView: {\n        width: '100%',\n        alignItems: \"center\",\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: \"center\",\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: 'white',\n    },\n    animatedNumbers: {\n        fontSize: 50,\n        fontWeight: 'bold',\n        color: '#FFD700',\n    },\n    premiumButton: {\n        marginTop: 15,\n        backgroundColor: '#005AAA',\n        borderRadius: 5,\n        padding: 10,\n        elevation: 2\n    },\n    premiumButtonText: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n    },\n    closeButton: {\n        position: 'absolute',\n        top: 10,\n        right: 10,\n    },\n});\n\nexport default CoinModal;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  KeyboardAvoidingView,\n  Platform,\n  FlatList,\n  Button,\n  Keyboard,\n  TouchableOpacity,\n  Pressable,\n  Modal,\n  StyleSheet,\n  ActivityIndicator,\n  Alert,\n} from \"react-native\";\nimport { WebView } from 'react-native-webview';\nimport axios from \"axios\"; // Import Axios for making API requests\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\nimport tw from \"tailwind-rn\";\nimport ReceiverMessage from \"../components/ReceiverMessage\";\nimport SenderMessage from \"../components/SenderMessage\";\nimport {\n  addDoc,\n  collection,\n  onSnapshot,\n  orderBy,\n  query,\n  serverTimestamp,\n} from \"@firebase/firestore\";\nimport { analytics, db } from \"../firebase/firebase\";\nimport { useUser } from \"../context/UserContext\";\nimport generateId from \"../utils/generateIds\";\nimport API_BASE_URL from \"../services/config\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport ChatHeader from \"../components/ChatHeader\";\nimport MessageSuggestion from \"../components/MessageSuggestion\";\nimport { logEvent } from \"firebase/analytics\";\nimport CoinModal from \"../components/CoinModal\";\nconst MessageScreen = ({ route, navigation }) => {\n  const flatListRef = useRef();\n  const [userInfo, setUserInfo] = useState({ coins: 2 });\n  const { userInfo: userInfoFromAsync, setUserInfoToStore, fetchUserDetails } = useUser();\n  const { params: { userDetails } } = route;\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [isConversationStarter, setConversationStarter] = useState(undefined);\n  const [combinedUid, setCombinedUid] = useState([]);\n  const [scrollToEnd, setScrollToEnd] = useState(false); // To scroll to the end of the chat\n  const [showModal, setShowModal] = useState(false); // State for the modal\n  const [showOneCointModal, setOneCointModal] = useState(false);\n\n  const [webviewUrl, setWebviewUrl] = useState(\n    \"https://subham-routray.mojo.page/odicult-subscription\"\n  );\n  const [isLoading, setIsLoading] = useState(true);\n  const isWeb = Platform.OS === 'web';\n\n  useEffect(() => {\n    fetchUserInitialDetails();\n  }, [db, combinedUid]);\n\n  useEffect(() => {\n    if (userInfo?.coins === 1) {\n      setOneCointModal(true)\n    }\n    if (userInfo?.coins === 0) {\n      setShowModal(true)\n    }\n  }, [userInfo?.coins]);\n\n  useEffect(() => {\n    if (messages && messages.length > 0) {\n      const firstMessage = messages[messages.length - 1]; // Since it's an inverted list, the first message will be the last element in the array.\n      setConversationStarter(firstMessage.userId === userInfo.firebaseId);\n    }\n  }, [messages]);\n\n\n  const fetchUserInitialDetails = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/user/getUserByFirebaseId/${userInfoFromAsync.firebaseId}`);\n      if (response.ok) {\n        const userInfo = await response.json();\n        const combinedUid = generateId(userInfo.firebaseId, userDetails.id);\n        setCombinedUid(combinedUid)\n        setUserInfo(userInfo)\n        setMatchUsers(combinedUid)\n      } else {\n        console.error('Failed to fetch user details');\n        setIsLoading(false); // Set loading to false even if there is an error\n      }\n    } catch (error) {\n      console.error('Error fetching user details:', error);\n      setIsLoading(false); // Set loading to false even if there is an error\n    }\n  };\n\n  const setMatchUsers = (combinedUid) => {\n    const matchDocRef = doc(db, \"matches\", combinedUid);\n    getDoc(matchDocRef)\n      .then((docSnapshot) => {\n        if (!docSnapshot.exists()) {\n          const sanitizedUserInto = {\n            image: userInfo.image || null,\n            email: userInfo.email,\n            phone: userInfo.phoneNumber,\n            id: userInfo.firebaseId,\n            name: userInfo.name,\n          };\n          setDoc(doc(db, \"matches\", combinedUid), {\n            users: {\n              [userInfo.firebaseId]: sanitizedUserInto,\n              [userDetails.id]: userDetails,\n            },\n            usersMatched: [userInfo.firebaseId, userDetails.id],\n            timestamp: serverTimestamp(),\n          });\n\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error checking document existence:\", error);\n      });\n    fetchMessages()\n  }\n\n  const fetchMessages = () => {\n    onSnapshot(\n      query(\n        collection(db, \"matches\", combinedUid, \"messages\"),\n        orderBy(\"timestamp\", \"desc\")\n      ),\n      (snapshot) => {\n        const fetchedMessages = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setMessages(fetchedMessages);\n        setIsLoading(false);\n        // if (scrollToEnd) {\n        //   scrollFlatListToEnd();\n        // }\n      }\n    );\n  }\n\n  const scrollFlatListToEnd = () => {\n    // setScrollToEnd(true);\n    // setTimeout(() => setScrollToEnd(false), 200); // Delay to ensure scrolling to end works\n    flatListRef.current?.scrollToEnd({ animated: true });\n  };\n\n  const handleSendMessage = async () => {\n    if (input === \"\") {\n      return; // Do nothing if the input is empty\n    }\n\n    // If user is the conversation starter and doesn't have coins or subscription, show the modal\n    if (isConversationStarter && userInfo.coins === 0 && userInfo.subscriptionStartDate === \"NA\") {\n      setShowModal(true);\n      return;\n    }\n\n    // Process to send message\n    try {\n      await addDoc(collection(db, \"matches\", combinedUid, \"messages\"), {\n        timestamp: serverTimestamp(),\n        userId: userInfo.firebaseId,\n        name: userInfo.name,\n        photoURL: userInfo.pic || null,\n        message: input,\n      });\n      setInput('')\n      // If the user is the conversation starter, deduct a coin after sending a message\n      if (isConversationStarter) {\n        // Check if the user has enough coins to send the message\n        if (userInfo.coins > 0) {\n          const updatedCoins = Math.max(userInfo.coins - 1, 0);  // Deduct one coin\n          await axios.put(`${API_BASE_URL}/user/updateUserCoins/${userInfo.phoneNumber}`, {\n            coins: userInfo.coins,\n          });\n\n          // Update the local state with the new coins value\n          setUserInfo((prevUserInfo) => ({\n            ...prevUserInfo,\n            coins: updatedCoins,\n          }));\n\n          // Assuming setUserInfoToStore is to update the AsyncStorage or similar storage,\n          // it's important to ensure that it is successful and handle the case where it's not.\n          // For brevity, I'm not including error handling here.\n          setUserInfoToStore({\n            ...userInfo,\n            coins: updatedCoins,\n          });\n        } else {\n          // Handle the case when the user does not have enough coins.\n          Alert.alert(\"You do not have enough coins to send a message.\");\n          return;\n        }\n      }\n\n      fetchMessages();\n      setInput(\"\");\n      scrollFlatListToEnd(); // Scroll to the end after sending a message\n\n    } catch (error) {\n      console.error(\"Error sending message or updating coins:\", error);\n      Alert.alert(\"Message sending failed\");\n    }\n  };\n\n  const handleModalClose = () => {\n    logEvent(analytics, \"purchase banner changed\");\n    fetchUserDetails()\n    setShowModal(false)\n  }\n\n  const handleSelectSuggestion = (text) => {\n    setInput(text);\n  };\n\n  if (isLoading) {\n    return (\n      <LinearGradient colors={['#dddddd', '#005AAA']} style={styles.loaderContainer}>\n        <ActivityIndicator size=\"large\" color=\"white\" />\n      </LinearGradient>\n    );\n  }\n\n  const handleTakePremium = () => {\n    setOneCointModal(false)\n    setShowModal(true)\n\n  }\n  return (\n    <>\n      <ChatHeader coins={userInfo?.coins} userDetails={userDetails} navigation={navigation} />\n      <LinearGradient colors={['#dddddd', '#005AAA']} style={styles.container}>\n        <Pressable onPress={Keyboard.dismiss}>\n          <FlatList\n            ref={flatListRef}\n            data={messages}\n            inverted={true}\n            style={styles.flatList}\n            keyExtractor={(item) => item.id}\n            renderItem={({ item: message }) =>\n              message.userId === userInfo.firebaseId ? (\n                <SenderMessage key={message.id} message={message} />\n              ) : (\n                <ReceiverMessage key={message.id} message={message} />\n              )\n            }\n            onContentSizeChange={scrollFlatListToEnd}\n          />\n        </Pressable>\n      </LinearGradient>\n      <LinearGradient colors={['#005AAA', '#dddddd',]} style={styles.inputSection}>\n        <KeyboardAvoidingView\n          behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n          style={styles.keyboardAvoidingView}\n          keyboardVerticalOffset={10}\n        >\n          {\n            messages.length === 0 && (\n              <View style={styles.suggestionsContainer}>\n                <MessageSuggestion onSelectSuggestion={handleSelectSuggestion} />\n              </View>\n            )\n          }\n          <View style={[styles.messageInputContainer, isWeb && styles.messageInputContainerWeb]}>\n            <TextInput\n              multiline={true}\n              style={styles.textInput}\n              placeholder=\"Send a message\"\n              onChangeText={(value) => {\n                setInput(value)\n                logEvent(analytics, \"message changed\", value);\n              }}\n              value={input}\n            />\n            <TouchableOpacity onPress={handleSendMessage} style={styles.sendButton}>\n              <Text style={styles.sendButtonText}>Send</Text>\n            </TouchableOpacity>\n          </View>\n        </KeyboardAvoidingView>\n      </LinearGradient>\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={showModal}\n        onRequestClose={handleModalClose}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>Subscribe Now</Text>\n              <TouchableOpacity onPress={handleModalClose}>\n                <Text style={styles.modalCloseText}>Close</Text>\n              </TouchableOpacity>\n            </View>\n            {Platform.OS !== 'web' ?\n              <WebView source={{ uri: webviewUrl }} style={styles.webView} /> :\n              <iframe src={webviewUrl} height={'100%'} width={'100%'} />}\n          </View>\n        </View>\n      </Modal>\n      <CoinModal\n        coins={userInfo?.coins}\n        onTakePremium={handleTakePremium}\n        isVisible={showOneCointModal}\n        onClose={() => setOneCointModal(false)}\n\n      />\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  keyboardAvoidingView: {\n    flex: 1,\n  },\n  messageInputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderTopWidth: 1,\n    borderColor: '#E2E8F0',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n  },\n  textInput: {\n    flex: 1,\n    minHeight: 40,\n    padding: 10,\n    borderRadius: 20,\n    backgroundColor: '#FFFFFF',\n    fontSize: 16,\n  },\n  sendButton: {\n    marginLeft: 10,\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    backgroundColor: '#63B3ED',\n    borderRadius: 20,\n  },\n  sendButtonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    width: '80%',\n    height: '80%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    overflow: 'hidden',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderColor: '#E2E8F0',\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  modalCloseText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#3182CE',\n  },\n  webView: {\n    flex: 1,\n  },\n  messageInputContainerWeb: {\n    position: 'fixed', // Fix position to bottom on web\n    bottom: 0,\n    left: 0,\n    right: 0,\n    borderTopWidth: 1,\n    borderColor: '#E2E8F0',\n    backgroundColor: 'white', // or any desired color\n  },\n  suggestionsContainer: {\n    position: 'fixed',\n    bottom: 80, // You should adjust this value based on the height of messageInputContainer + some offset\n    width: '100%',\n    zIndex: 2,  // Ensure the suggestions are above the FlatList\n  },\n  loaderContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  inputSection: {\n    position: 'absolute', // Input section will be positioned absolutely\n    bottom: 0, // Sticks to the bottom\n    width: '100%', // Full width of the screen\n    padding: 10, // Optional padding\n  },\n\n  flatList: {\n    // Removed paddingLeft and added flex: 1\n    flex: 1, // Takes all available space except for the input section\n  },\n});\n\nexport default MessageScreen;","// src/navigation/AuthStack.js\n\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeTabNavigator from '../screens/HomeTabNavigator';\nimport PostAdScreen from '../screens/PostAd';\nimport Default from '../screens/Default';\nimport UserAds from '../screens/UserAds';\nimport AdDetailsScreen from '../screens/AdDetails';\nimport Message from '../screens/Message';\nimport Chat from '../screens/Chat';\nimport ChatRow from '../components/ChatRow';\nimport CustomHeader from '../components/CustomHeader';\n\nconst Stack = createStackNavigator();\n\nconst AppStack = () => {\n    return (\n        <Stack.Navigator\n            screenOptions={{\n                headerShown: false\n            }}\n            initialRouteName='HomeTabNavigator'\n        >\n            <Stack.Screen name=\"HomeTabNavigator\" component={HomeTabNavigator} />\n            <Stack.Screen name=\"PostAd\" component={PostAdScreen} />\n            <Stack.Screen name=\"UserAds\" component={UserAds} />\n            <Stack.Screen name=\"SingleScreenAd\" component={AdDetailsScreen} />\n            <Stack.Screen name=\"Chat\" component={Chat} />\n            <Stack.Screen name=\"Location\" component={CustomHeader} />\n            <Stack.Screen name=\"Message\" component={Message} />\n            <Stack.Screen name=\"MessagWithData\" component={Message} />\n        </Stack.Navigator>\n    );\n};\n\nexport default AppStack;\n","import React from 'react';\nimport { View, Text, TouchableOpacity } from 'react-native';\nimport Modal from 'react-native-modal';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nconst UpdateAppModal = ({ isVisible, onAppUpdate }) => {\n    return (\n        <Modal isVisible={isVisible} backdropColor=\"rgba(0, 0, 0, 0.5)\" backdropOpacity={1}>\n            <LinearGradient\n                colors={['#007DBC', '#005AAA']}\n                style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}\n            >\n                <View style={{ backgroundColor: 'white', borderRadius: 10, padding: 20 }}>\n                    <Text style={{ color: '#007DBC', fontSize: 18, marginBottom: 20 }}>Please update the app now.</Text>\n                    <TouchableOpacity\n                        style={{ backgroundColor: '#007DBC', padding: 10, borderRadius: 5 }}\n                        onPress={onAppUpdate}\n                    >\n                        <Text style={{ color: 'white', textAlign: 'center', fontSize: 16 }}>Click Here to Update</Text>\n                    </TouchableOpacity>\n                </View>\n            </LinearGradient>\n        </Modal>\n    );\n};\n\nexport default UpdateAppModal;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AuthStack from './navigation/AuthStack';\nimport AppStack from './navigation/AppStack';\nimport { UserProvider, useUser } from './context/UserContext';\nimport Toast from 'react-native-toast-message';\nimport { AuthProvider } from './hooks/useAuth';\nimport UpdateAppModal from './components/UpdateAppModal'; // Import the modal component\nimport API_BASE_URL from './services/config';\nimport { Linking, Platform } from 'react-native';\n\nimport * as Font from 'expo-font';\n\nconst App = () => {\n  const { userToken } = useUser();\n  const [showUpdateModal, setShowUpdateModal] = useState(false); // State for modal visibility\n  const [action, setAction] = useState('');\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  useEffect(() => {\n    Font.loadAsync({\n      'open-sans-regular': require('./assets/fonts/OpenSans-Regular.ttf'),\n      'open-sans-light': require('./assets/fonts/OpenSans-Light.ttf'),\n      'open-sans-bold': require('./assets/fonts/OpenSans-Bold.ttf'),\n      'argon': require('./assets/fonts/argon.ttf'),\n    });\n    setFontsLoaded(true)\n  }, []);\n  useEffect(() => {\n    const fetchAppUpdateStatus = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/user/getAppUpdateStatus`); // Replace with your API endpoint\n        const { blockApp, action } = response.data;\n        if (blockApp) {\n          setShowUpdateModal(true);\n          setAction(action)\n        }\n      } catch (error) {\n        console.error('Error fetching app update status:', error);\n      }\n    };\n    if (Platform.OS !== 'web') {\n      fetchAppUpdateStatus();\n    }\n  }, []);\n\n  const handleAppUpdate = () => {\n    Linking.canOpenURL(action)\n      .then((supported) => {\n        if (supported) {\n          Linking.openURL(action);\n        } else {\n          console.error('Cannot open Play Store link');\n        }\n      })\n      .catch((error) => {\n        console.error('Error opening Play Store link:', error);\n      });\n  };\n\n  return (\n    <>\n      <Toast />\n      <AuthProvider>\n        <NavigationContainer>\n          {userToken ? <AppStack /> : <AuthStack />}\n        </NavigationContainer>\n      </AuthProvider>\n      <UpdateAppModal\n        isVisible={showUpdateModal}\n        onClose={() => setShowUpdateModal(false)}\n        onAppUpdate={handleAppUpdate}\n      />\n    </>\n  );\n};\n\nexport default () => {\n  return (\n    <UserProvider>\n      <App />\n    </UserProvider>\n  );\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [210], () => (__webpack_require__(5530)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","analytics","getStorage","getAnalytics","AuthContext","createContext","AuthProvider","_ref","children","setUserInfoToStore","useUser","_useState","useState","_useState2","_slicedToArray","user","_useState3","_useState4","loadingLogin","setLoadingLogin","useEffect","unsubscribe","onAuthStateChanged","_ref2","_asyncToGenerator","authUser","_x","apply","arguments","signUpWithEmailPassword","_ref3","email","password","createUserWithEmailAndPassword","then","userCredential","uid","firebaseId","catch","error","console","log","_x2","_x3","logOut","_ref4","signOut","_jsx","Provider","value","signInWithEmailPassword","signInWithEmailAndPassword","LinearGradient","colors","style","flex","justifyContent","alignItems","height","width","ActivityIndicator","size","color","AuthOpen","useContext","UserContext","UserProvider","userToken","setUserToken","userDetails","setUserDetails","_useState5","_useState6","userInfo","setUserInfo","loadUserToken","storedToken","AsyncStorage","getItem","fetchUserDetails","response","fetch","API_BASE_URL","toString","ok","userData","json","gender","image","name","phoneNumber","_id","tenantType","rentPosts","coins","subscriptionStartDate","location","phone","id","statusText","login","token","setItem","logout","_ref5","removeUserInfoFromStore","removeItem","_ref6","_ref8","_ref7","rentPost","_ref7$subscriptionSta","_ref7$location","locationMarked","existingUserInfo","JSON","parse","length","_objectSpread","stringify","TextAnimator","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","animate","toValue","undefined","animations","state","textArr","map","_","i","Animated","timing","animatedValues","duration","useNativeDriver","stagger","reverse","start","setTimeout","onFinish","content","trim","split","forEach","Value","_createClass","key","this","prevProps","_this2","setState","_this3","View","styles","textWrapper","word","index","_jsxs","Text","textStyle","opacity","transform","translateY","multiply","React","StyleSheet","create","flexDirection","flexWrap","_Dimensions$get","Dimensions","get","Authentication","_AuthOpen","formattedValue","setFormattedValue","isUserExists","setIsUserExists","screen","setScreen","_useState7","_useState8","setPhoneNumber","_useState9","_useState10","otp","setOtp","_useState11","_useState12","assignedOtp","setAssignedOtp","_useState13","_useState14","isLoading","setIsLoading","_useState15","_useState16","isTextInputFocused","setIsTextInputFocused","_useState17","_useState18","currentTextIndex","setCurrentTextIndex","animatedTexts","_useClearByFocusCell","useClearByFocusCell","setValue","_useClearByFocusCell2","getCellOnLayoutHandler","handleAnimationComplete","generateOtp","Math","floor","random","fetchUserExistsStatus","checkPhoneResponse","checkPhoneData","exists","sendOTP","postData","axios","post","headers","data","status","alert","_error$response","message","verifyOTP","handleTextInputFocus","handleTextInputBlur","gradient","x","y","end","lottie","Platform","OS","LottieView","source","require","autoPlay","loop","KeyboardAvoidingView","behavior","keyboardVerticalOffset","ScrollView","contentContainerStyle","container","keyboardShouldPersistTaps","header","subheader","PhoneNumberInput","defaultCode","onChangeText","text","logEvent","onChangeFormattedText","placeholder","withDarkTheme","withShadow","onFocus","onBlur","TouchableOpacity","button","onPress","buttonText","iconContainer","Ionicons","CodeField","caretHidden","cellCount","rootStyle","codeFieldRoot","keyboardType","textContentType","renderCell","symbol","isFocused","onLayout","cell","focusCell","cellText","Cursor","buttonContainer","_Fragment","resendText","renderScreen","fontSize","fontWeight","marginBottom","fontFamily","top","backgroundColor","paddingVertical","paddingHorizontal","borderRadius","resendButton","marginTop","backButton","countryPickerContainer","borderColor","borderWidth","countryPicker","resizeMode","marginLeft","marginRight","lineHeight","textAlign","position","left","zIndex","OnboardingScreen","navigation","useNavigation","handleDone","navigate","Onboarding","onDone","onSkip","DoneButtonComponent","Object","assign","_objectDestructuringEmpty","doneButton","containerStyles","pages","Lottie","title","subtitle","padding","Stack","createStackNavigator","showOnboarding","setShowOnboarding","checkIfAlreadyOnboarded","onboarded","Navigator","initialRouteName","Screen","options","headerShown","component","screenOptions","BannerWidth","bannerImage","Carousel","autoplay","autoplayTimeout","pageSize","Image","uri","renderPage","_worklet_4122753321172_init_data","code","_worklet_10469424627174_init_data","AnimatedCard","item","scale","useSharedValue","lastPress","useRef","Date","now","animatedStyles","useAnimatedStyle","_f","_closure","__initData","__workletHash","animatedImageStyles","perspective","rotateY","card","activeOpacity","current","onPressIn","withSpring","onPressOut","delayPressIn","touchable","images","adImage","adDetails","adTitle","numberOfLines","ellipsizeMode","adInfo","adPrice","price","adBedrooms","bedrooms","adList","margin","overflow","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","backfaceVisibility","borderTopLeftRadius","borderTopRightRadius","adLocation","filterButtonsContainer","filterButton","marginHorizontal","filterButtonActive","filterText","filterTextActive","_useUser","ads","setAds","banners","setBanners","refreshing","setRefreshing","bannersLoading","setBannersLoading","genderFilter","setGenderFilter","filteredAds","setFilteredAds","fetchAds","fetchBanners","handleGenderFilterChange","newFilter","bannersQuery","query","collection","fetchedBanners","getDocs","docs","doc","link","handleAdPress","ad","onRefresh","useCallback","filtered","filter","isMaleOnly","filterAds","SkeletonLoader","boneColor","highlightColor","marginVertical","BannerCarousel","FlatList","keyExtractor","renderItem","numColumns","refreshControl","RefreshControl","tintColor","PostAdScreen","_route$params","_route$params$ad","_route$params2","_route$params2$ad","_route$params3","_route$params3$ad","_route$params4","_route$params4$ad","_route$params5","_route$params5$ad","_route$params6","_route$params6$ad","_route$params7","_route$params7$ad","_route$params8","_route$params8$ad","_route$params9","_route$params9$ad","_route$params10","_route$params10$ad","_route$params11","_route$params11$ad","_route$params12","_route$params12$ad","route","setImages","params","setLocation","setAdTitle","adDescription","setAdDescription","setPhone","setEmail","setPrice","maxResidents","setMaxResidents","preference","setPreference","_useState19","_useState20","setIsMaleOnly","_useState21","isFurnished","_useState22","setIsFurnished","_useState23","hasAttachedBathroom","_useState24","setHasAttachedBathroom","_useState25","isBachelorsAllowed","_useState26","setIsBachelorsAllowed","_useState27","_useState28","loading","setLoading","handleImageUpload","ImagePicker","requestMediaLibraryPermissionsAsync","granted","pickerResult","launchImageLibraryAsync","mediaTypes","Images","allowsEditing","aspect","quality","multiple","cancelled","newImages","concat","_toConsumableArray","assets","uploadImagesToS3","Toast","show","type","text1","text2","s3Images","imageUri","file","RNS3","put","keyPrefix","bucket","region","accessKey","secretKey","successActionStatus","Error","s3ImageUrl","body","postResponse","push","handleSubmit","_route$params13","userId","goBack","imageContainer","heading","imageUploadButton","uploadButtonText","horizontal","showsHorizontalScrollIndicator","fieldContainer","label","RNPickerSelect","onValueChange","items","pickerSelectStyles","TextInput","input","multilineInput","multiline","stepperContainer","stepperButton","stepperButtonText","stepperValue","Switch","trackColor","false","true","submitButton","disabled","submitButtonText","bottom","minHeight","textAlignVertical","inputIOS","paddingRight","inputAndroid","domains","tenantTypeContainer","actionButton","loader","profileImage","scrollViewContent","flexGrow","modalContainer","linearGradient","modalContent","modalTitle","closeButton","right","chooseImageButton","chooseImageText","genderContainer","radioButtons","radioButton","radioButtonSelected","radioButtonText","radioButtonTextSelected","radioButtonsTenantType","radioButtonTenantType","isVisible","onDismiss","_useUser2","setName","setUserId","setGender","setTenantType","setImage","setSuggestions","setFieldsDisabled","userLocation","setUserLocation","handleGenderSelect","selectedGender","requestLocationPermission","Location","requestForegroundPermissionsAsync","getCurrentPositionAsync","updateProfileToFirebase","pic","isEdit","newDocRef","handler","updateDoc","setDoc","timestamp","serverTimestamp","updateAuthProfile","currentUser","displayName","photoURL","handleTenantTypeSelect","selectedType","handleUpdate","selectedImageUri","blob","res","apiEndpoint","method","updateButtonStyle","Modal","visible","transparent","animationType","MaterialCommunityIcons","placeholderTextColor","filteredDomains","domain","includes","maleIcon","femaleIcon","student","professionals","family","users","userLoggedIn","newUsers","_Object$entries$flat","entries","flat","_Object$entries$flat2","id1","id2","cardShadow","matchDetails","lastMessage","setLastmessage","matchedUserInfo","setMatchedUserInfo","getMatchedUserInfo","onSnapshot","generateId","orderBy","snapshot","_snapshot$docs$","_snapshot$docs$$data","tw","photoUrl","substring","matches","setMatches","where","ChatRow","SafeAreaView","ChatList","DEFAULT_LOCATION","leftContainer","selectedLocationContainer","downIcon","rightContainer","iconButton","selectedLocationText","modalView","modalGradient","modalHeader","modalHeaderText","searchContainer","searchInput","clearIcon","locationList","locationItem","locationText","tagsContainer","tag","tagText","onSettingPress","_ref$showBack","showBack","useToken","selectedLocation","setSelectedLocation","allLocations","setLocations","modalVisible","setModalVisible","searchQuery","setSearchQuery","suggestedLocations","setSuggestedLocations","topLocations","setTopLocations","fetchLocations","_response$data$locati","locations","fetchedLocations","slice","selectLocation","renderTag","edges","Icon","onRequestClose","filteredLocations","toLowerCase","Tab","createBottomTabNavigator","tabBar","borderTopWidth","addButton","addButtonText","popoverBackground","popoverContent","popoverOption","popoverOptionText","_React$useState","_React$useState2","isModalVisible","_React$useState3","_React$useState4","isUpdateModalVisible","setUpdateModalVisible","_React$useState5","_React$useState6","userProfileData","setUserProfileData","handleMyAds","toggleModal","handleUpdateProfile","handleLogout","renderCustomHeader","CustomHeader","onBackPress","tabBarOptions","activeTintColor","inactiveTintColor","showLabel","Home","tabBarIcon","focused","Chat","Pressable","UpdateProfileModal","onUpdateProfile","updatedData","_Component","Default","Component","onEdit","onDelete","onClaim","headerText","deleteConfirmationContainer","deleteConfirmationText","deleteConfirmationButtons","confirmButton","emptyListContainer","emptyListText","confirmButtonText","cancelButton","cancelButtonText","closeButtonText","userAds","setUserAds","selectedAd","setSelectedAd","isDeleteConfirmationVisible","setDeleteConfirmationVisible","fetchUserAds","handleEdit","handleDelete","adId","prevAds","handleClaim","FontAwesome","AdCard","ListEmptyComponent","amenitiesMapping","icon","flexContainer","footer","borderBottomWidth","borderBottomColor","villaImage","villaName","offerContainer","offerText","description","hostImage","hostName","directMessageButton","directMessageButtonText","postedByCurrentUserMessage","amenitiesContainer","amenitiesTitle","amenitiesList","amenityItem","amenityLabel","priceContainer","originalPrice","textDecorationLine","discountedPrice","bookNowButton","bookNowButtonText","flatmateRow","flatmatesSection","flatmatesGrid","flatmateCard","flatmateImage","flatmateName","flatmateOccupation","trustIcon","paddingBottom","flatmatesData","flatmates","showDirectMessageButton","setShowDirectMessageButton","isPostedByCurrentUser","userDoc","getDoc","amenity","flatmate","occupation","TimeAgo","addLocale","en","timeAgo","messageBubble","maxWidth","messageText","alignSelf","numericTimestamp","toDate","getTime","format","_message$timestamp","date2","chatHeaderContainer","chatHeaderImage","chatHeaderText","coinsTitle","coinsValue","coinsContainer","AnimatedNumberComponent","select","web","WebAnimatedNumbers","default","AnimatedNumbers","animateToNumber","fontStyle","includeComma","frameStyle","messageSuggestionContainer","messageSuggestion","messageSuggestionText","onSelectSuggestion","centeredView","modalText","animatedNumbers","premiumButton","premiumButtonText","onTakePremium","onClose","keyboardAvoidingView","messageInputContainer","textInput","sendButton","sendButtonText","modalCloseText","webView","messageInputContainerWeb","suggestionsContainer","loaderContainer","inputSection","flatList","flatListRef","userInfoFromAsync","setInput","messages","setMessages","isConversationStarter","setConversationStarter","combinedUid","setCombinedUid","showModal","setShowModal","showOneCointModal","setOneCointModal","webviewUrl","isWeb","fetchUserInitialDetails","firstMessage","setMatchUsers","matchDocRef","docSnapshot","_users","sanitizedUserInto","_defineProperty","usersMatched","fetchMessages","fetchedMessages","scrollFlatListToEnd","_flatListRef$current","scrollToEnd","animated","handleSendMessage","addDoc","Alert","updatedCoins","max","prevUserInfo","handleModalClose","ChatHeader","Keyboard","dismiss","ref","inverted","SenderMessage","ReceiverMessage","onContentSizeChange","MessageSuggestion","WebView","src","CoinModal","HomeTabNavigator","UserAds","AdDetailsScreen","Message","onAppUpdate","backdropColor","backdropOpacity","App","showUpdateModal","setShowUpdateModal","action","setAction","setFontsLoaded","Font","loadAsync","fetchAppUpdateStatus","_response$data","blockApp","NavigationContainer","AppStack","AuthStack","UpdateAppModal","Linking","canOpenURL","supported","openURL","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","amdO","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","ns","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}