{"version":3,"file":"static/js/main.d3447112.js","mappings":"yTAmBMA,GAAMC,EAAAA,EAAAA,eAXW,CACnBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,oDACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIbC,GAAOC,EAAAA,EAAAA,SAAQX,GAKfY,GAAKC,EAAAA,EAAAA,gBAELC,IADUC,EAAAA,EAAAA,eACEC,EAAAA,EAAAA,cAAahB,I,UCdzBiB,GAAcC,EAAAA,EAAAA,eAAc,CAClC,GAEMC,EAAe,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SACdC,EAAuBC,IAAvBD,mBACRE,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA/BI,EAAIF,EAAA,GACXG,GADoBH,EAAA,IACoBD,EAAAA,EAAAA,WAAS,IAAKK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAA/CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,IACpCG,EAAAA,EAAAA,YAAU,WACR,IAAMC,GAAcC,EAAAA,EAAAA,oBAAmBzB,EAAK,WAAD,IAAA0B,GAAAC,EAAAA,EAAAA,UAAE,UAAOC,GAMhDN,GAAgB,EAKpB,IAAG,OAAF,SAAAO,GAAA,OAAAH,EAAAI,MAAA,KAAAC,UAAE,CAAF,CAX2C,IAa5C,OAAO,WAELP,GACF,CACF,GAAG,IAEH,IAaMQ,EAAuB,eAAAC,GAAAN,EAAAA,EAAAA,UAAG,UAAOO,EAAOC,SACtCC,EAAAA,EAAAA,gCAA+BpC,EAAMkC,EAAOC,GAC/CE,MAAK,SAACC,GAEL,IAAMC,EAAMD,EAAepB,KAAKqB,IAChC3B,EAAmB,CAAE4B,WAAYD,GACnC,IACCE,OAAM,SAACC,GACNC,QAAQC,IAAI,wBAAyBF,EACvC,GACJ,IAAC,gBAV4BG,EAAAC,GAAA,OAAAb,EAAAH,MAAA,KAAAC,UAAA,KAYvBgB,EAAM,eAAAC,GAAArB,EAAAA,EAAAA,UAAG,YACbL,GAAgB,SACV2B,EAAAA,EAAAA,SAAQjD,GACdsB,GAAgB,EAClB,IAAC,kBAJW,OAAA0B,EAAAlB,MAAA,KAAAC,UAAA,KAMZ,OACEmB,EAAAA,EAAAA,KAAC3C,EAAY4C,SAAQ,CACnBC,MAAO,CACLlC,KAAAA,EACAmC,wBAnC0B,SAACnB,EAAOC,IACtCmB,EAAAA,EAAAA,4BAA2BtD,EAAMkC,EAAOC,GACrCE,MAAK,SAACC,GAEL,IAAMC,EAAMD,EAAepB,KAAKqB,IAChC3B,EAAmB,CAAE4B,WAAYD,GAEnC,IACCE,OAAM,SAACC,GACNC,QAAQC,IAAI,wBAAyBF,EACvC,GACJ,EAyBMV,wBAAAA,EACAX,aAAAA,EACA0B,OAAAA,GACApC,SAEDU,GAAe6B,EAAAA,EAAAA,KAACK,EAAAA,QAAiB,IAAM5C,GAG9C,EACM6C,EAAW,WACf,OAAOC,EAAAA,EAAAA,YAAWlD,EACpB,ECrFA,QAFqB,qC,2kBCOrB,IAAMmD,GAAclD,EAAAA,EAAAA,iBAEPmD,EAAe,SAAHjD,GAAsB,IAAhBC,EAAQD,EAARC,SAC3BG,GAAkCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAzC8C,EAAS5C,EAAA,GAAE6C,EAAY7C,EAAA,GAC9BG,GAAsCJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAA7C2C,EAAW1C,EAAA,GAAE2C,EAAc3C,EAAA,GAClC4C,GAAgCjD,EAAAA,EAAAA,UAAS,MAAKkD,GAAAhD,EAAAA,EAAAA,SAAA+C,EAAA,GAAvCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,IAC5B1C,EAAAA,EAAAA,YAAU,WACN,IAAM6C,EAAa,eAAA1C,GAAAC,EAAAA,EAAAA,UAAG,YAClB,IACI,IAAM0C,QAAoBC,EAAAA,QAAaC,QAAQ,aAC3CF,GACAR,EAAaQ,EAGrB,CAAE,MAAO3B,GACLC,QAAQD,MAAM,4BAA6BA,EAC/C,CACJ,IAAC,kBAVkB,OAAAhB,EAAAI,MAAA,KAAAC,UAAA,KAWnBqC,GACJ,GAAG,IAEH,IAAMI,EAAgB,eAAAvC,GAAAN,EAAAA,EAAAA,UAAG,YACrB,IAAM8C,QAAiBC,MAAO,GAAEC,+BAA0Cf,EAAUgB,cACpF,GAAIH,EAASI,GAAI,CACb,IAAMC,QAAiBL,EAASM,OACxB7C,EAAgH4C,EAAhH5C,MAAO8C,EAAyGF,EAAzGE,OAAQC,EAAiGH,EAAjGG,MAAOC,EAA0FJ,EAA1FI,KAAMC,EAAoFL,EAApFK,YAAaC,EAAuEN,EAAvEM,IAAKC,EAAkEP,EAAlEO,WAAYC,EAAsDR,EAAtDQ,UAAWC,EAA2CT,EAA3CS,MAAOC,EAAoCV,EAApCU,sBAAuBC,EAAaX,EAAbW,SAC3G1B,EAAee,GACflE,EAAmB,CAAEsB,MAAAA,EAAO8C,OAAAA,EAAQC,MAAAA,EAAOC,KAAAA,EAAMQ,MAAOP,EAAaQ,GAAIP,EAAKC,WAAAA,EAAYC,UAAAA,EAAWC,MAAAA,EAAOC,sBAAAA,EAAuBC,SAAAA,GACvI,MACI9C,QAAQD,MAAM,+BAAgC+B,EAASmB,WAE/D,IAAC,kBAVqB,OAAA3D,EAAAH,MAAA,KAAAC,UAAA,KAWhB8D,EAAK,eAAA7C,GAAArB,EAAAA,EAAAA,UAAG,UAAOmE,GACjBjC,EAAaiC,GACb,UAEUxB,EAAAA,QAAayB,QAAQ,YAAaD,EAC5C,CAAE,MAAOpD,GACLC,QAAQD,MAAM,4BAA6BA,EAC/C,CACJ,IAAC,gBARUb,GAAA,OAAAmB,EAAAlB,MAAA,KAAAC,UAAA,KAULiE,EAAM,eAAAC,GAAAtE,EAAAA,EAAAA,UAAG,YACXkC,EAAa,MACbqC,IACA,UAEU5B,EAAAA,QAAa6B,WAAW,YAClC,CAAE,MAAOzD,GACLC,QAAQD,MAAM,6BAA8BA,EAChD,CACJ,IAAC,kBATW,OAAAuD,EAAAnE,MAAA,KAAAC,UAAA,KAYNmE,EAAuB,eAAAE,GAAAzE,EAAAA,EAAAA,UAAG,YAC5B,UAEU2C,EAAAA,QAAa6B,WAAW,YAE9BhC,EAAY,CAAC,EACjB,CAAE,MAAOzB,GACLC,QAAQD,MAAM,4BAA6BA,EAC/C,CACJ,IAAC,kBAT4B,OAAA0D,EAAAtE,MAAA,KAAAC,UAAA,KAWvBnB,EAAkB,eAAAyF,GAAA1E,EAAAA,EAAAA,UAAG,UAAA2E,GAcpB,IAbHpB,EAAIoB,EAAJpB,KACAS,EAAEW,EAAFX,GACAnD,EAAU8D,EAAV9D,WACAkD,EAAKY,EAALZ,MACAV,EAAMsB,EAANtB,OACAuB,EAAQD,EAARC,SACArE,EAAKoE,EAALpE,MACA+C,EAAKqB,EAALrB,MACAI,EAAUiB,EAAVjB,WACAE,EAAKe,EAALf,MAAKiB,EAAAF,EACLd,sBAAAA,OAAqB,IAAAgB,EAAG,KAAIA,EAAAC,EAAAH,EAC5Bb,SAAAA,OAAQ,IAAAgB,EAAG,CAAC,EAACA,EACbC,EAAcJ,EAAdI,eAEA,IAEI,IAAMC,QAAyBrC,EAAAA,QAAaC,QAAQ,YAChDL,EAAWyC,EAAmBC,KAAKC,MAAMF,GAAoB,CAAC,EAG7DzC,EAAS1B,YAAe0B,EAAS1B,WAAWsE,SAC7C5C,EAAQ6C,EAAAA,EAAA,GACD7C,GAAQ,IACX1B,WAAAA,KAKR0B,EAAQ6C,EAAAA,EAAA,GACD7C,GAAQ,IACXgB,KAAAA,EACAS,GAAAA,EACAD,MAAAA,EACAV,OAAAA,EACAuB,SAAAA,EACArE,MAAAA,EACA+C,MAAAA,EACAI,WAAAA,EACAE,MAAAA,EACAC,sBAAAA,EACAC,SAAAA,EACAiB,eAAAA,UAGEpC,EAAAA,QAAayB,QAAQ,WAAYa,KAAKI,UAAU9C,IACtDC,EAAYD,EAChB,CAAE,MAAOxB,GACLC,QAAQD,MAAM,oCAAqCA,EACvD,CACJ,IAAC,gBAlDuBG,GAAA,OAAAwD,EAAAvE,MAAA,KAAAC,UAAA,KAoDxB,OACImB,EAAAA,EAAAA,KAACQ,EAAYP,SAAQ,CAACC,MAAO,CACzBQ,UAAAA,EACAiC,MAAAA,EACAG,OAAAA,EACAlC,YAAAA,EACAU,iBAAAA,EACA5D,mBAAAA,EACAsD,SAAAA,GACFvD,SACGA,GAGb,EAEaE,EAAU,WACnB,OAAO4C,EAAAA,EAAAA,YAAWC,EACtB,E,qiBC7I+B,IAGVuD,EAAY,SAAAC,IAAAC,EAAAA,EAAAA,SAAAF,EAAAC,GAAA,IAAAE,EAAAC,EAAAJ,GAC7B,SAAAA,EAAYK,GAAQ,IAADC,EAQZ,OARYC,EAAAA,EAAAA,SAAA,KAAAP,IACfM,EAAAH,EAAAK,KAAA,KAAMH,IAyBVI,QAAU,WAAkB,IAAjBC,EAAO5F,UAAA+E,OAAA,QAAAc,IAAA7F,UAAA,GAAAA,UAAA,GAAG,EACX8F,EAAaN,EAAKO,MAAMC,QAAQC,KAAI,SAACC,EAAGC,GAC1C,OAAOC,EAAAA,QAASC,OAAOb,EAAKO,MAAMO,eAAeH,GAAI,CACjDP,QAAAA,EACAW,SAAUf,EAAKD,MAAMgB,SACrBC,iBAAiB,GAEzB,IAEAJ,EAAAA,QAASK,QACLjB,EAAKD,MAAMgB,SAAW,EACV,IAAZX,EAAgBE,EAAWY,UAAYZ,GACzCa,OAAM,WACJC,YAAW,kBAAMpB,EAAKG,QAAoB,IAAZC,EAAgB,EAAI,EAAE,GAAE,KAClDJ,EAAKD,MAAMsB,UACXrB,EAAKD,MAAMsB,UAEnB,GACJ,EA1CIrB,EAAKO,MAAQ,CACTC,QAAST,EAAMuB,QAAQC,OAAOC,MAAM,KACpCV,eAAgB,IAEpBd,EAAKO,MAAMC,QAAQiB,SAAQ,SAACf,EAAGC,GAC3BX,EAAKO,MAAMO,eAAeH,GAAK,IAAIC,EAAAA,QAASc,MAAM,EACtD,IAAG1B,CACP,CAkEC,OAlEA2B,EAAAA,EAAAA,SAAAjC,EAAA,EAAAkC,IAAA,oBAAA/F,MAED,WACIgG,KAAK1B,SACT,GAAC,CAAAyB,IAAA,qBAAA/F,MAED,SAAmBiG,GAAY,IAADC,EAAA,KACtBD,EAAUR,UAAYO,KAAK9B,MAAMuB,SACjCO,KAAKG,SAAS,CACVxB,QAASqB,KAAK9B,MAAMuB,QAAQC,OAAOC,MAAM,KACzCV,eAAgBe,KAAK9B,MAAMuB,QAAQC,OAAOC,MAAM,KAAKf,KAAI,kBAAM,IAAIG,EAAAA,QAASc,MAAM,EAAE,MACrF,WACCK,EAAK5B,SACT,GAER,GAAC,CAAAyB,IAAA,SAAA/F,MAsBD,WAAU,IAADoG,EAAA,KACL,OACItG,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAO,CAACN,KAAK9B,MAAMoC,MAAOC,EAAOC,aAAajJ,SAC/CyI,KAAKtB,MAAMC,QAAQC,KAAI,SAAC6B,EAAMC,GAC3B,OACIC,EAAAA,EAAAA,MAAC5B,EAAAA,QAAS6B,KAAI,CAEVN,MAAO,CACHF,EAAKlC,MAAM2C,UACX,CACIC,QAASV,EAAK1B,MAAMO,eAAeyB,GACnCK,UAAW,CACP,CACIC,WAAYjC,EAAAA,QAASkC,SACjBb,EAAK1B,MAAMO,eAAeyB,GAC1B,IAAI3B,EAAAA,QAASc,OAAO,QAKtCtI,SAAA,CAEDkJ,EACC,IAAEC,EAAQN,EAAK1B,MAAMC,QAAQjB,OAAS,EAAI,IAAM,MAjB5C,GAAE+C,KAAQC,IAoB5B,KAGZ,KAAC7C,CAAA,CA5E4B,CAASqD,EAAAA,WA+EpCX,EAASY,EAAAA,QAAWC,OAAO,CAC7BZ,YAAa,CACTa,cAAe,MACfC,SAAU,OACVC,eAAgB,Y,4kBCzDxB,IAAAC,GAA0BC,EAAAA,QAAWC,IAAI,UAAjCC,GAAKH,GAALG,MAAaH,GAANI,OAEA,SAASC,KACpB,IAAAC,EAA6D1H,IAArDH,EAAuB6H,EAAvB7H,wBAAyBrB,EAAuBkJ,EAAvBlJ,wBACjClB,GAA4CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAjDqK,EAAcnK,EAAA,GAAEoK,EAAiBpK,EAAA,GAChC6E,EAAUhF,IAAVgF,MACR1E,GAAwCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAAhDkK,EAAYjK,EAAA,GAAEkK,EAAelK,EAAA,GACpC4C,GAA4BjD,EAAAA,EAAAA,UAAS,GAAEkD,GAAAhD,EAAAA,EAAAA,SAAA+C,EAAA,GAAhCuH,EAAMtH,EAAA,GAAEuH,EAASvH,EAAA,GACxBwH,GAAsC1K,EAAAA,EAAAA,UAAS,IAAG2K,GAAAzK,EAAAA,EAAAA,SAAAwK,EAAA,GAA3CtG,EAAWuG,EAAA,GAAEC,EAAcD,EAAA,GAClCE,GAAsB7K,EAAAA,EAAAA,UAAS,IAAG8K,GAAA5K,EAAAA,EAAAA,SAAA2K,EAAA,GAA3BE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAClBG,GAAsCjL,EAAAA,EAAAA,UAAS,IAAGkL,GAAAhL,EAAAA,EAAAA,SAAA+K,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAkCrL,EAAAA,EAAAA,WAAS,GAAMsL,GAAApL,EAAAA,EAAAA,SAAAmL,EAAA,GAA1CE,EAASD,EAAA,GAAEE,GAAYF,EAAA,GAC9BG,IAAoDzL,EAAAA,EAAAA,WAAS,GAAM0L,IAAAxL,EAAAA,EAAAA,SAAAuL,GAAA,GAA5DE,GAAkBD,GAAA,GAAEE,GAAqBF,GAAA,GAChDG,IAAgD7L,EAAAA,EAAAA,UAAS,GAAE8L,IAAA5L,EAAAA,EAAAA,SAAA2L,GAAA,GAApDE,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,GACtCG,GAAgB,CAClB,oCACA,iCACA,yCAEJC,IAAwCC,EAAAA,EAAAA,qBAAoB,CACxD9J,MAAO0I,EACPqB,SAAUpB,IACZqB,IAAAnM,EAAAA,EAAAA,SAAAgM,GAAA,GAHK3F,GAAK8F,GAAA,GAAEC,GAAsBD,GAAA,GAK9BE,GAA0B,WACxBR,GAAmBE,GAAclG,OAAS,GAC1CiG,GAAoBD,GAAmB,EAE/C,EAsBMS,GAAc,WAChB,IAAMzB,EACc,eAAhB3G,EACM,OACAqI,KAAKC,MAAM,IAAyB,IAAhBD,KAAKE,UAEnC,OADAvB,EAAeL,GACRA,CACX,EAEM6B,GAAqB,eAAAjN,GAAAiB,EAAAA,EAAAA,UAAG,YAC1B,IAAMiM,QAA2BlJ,MAC5B,GAAEC,sBAAiCQ,KAElC0I,QAAuBD,EAAmB7I,OAChDuG,EAAgBuC,EAAeC,OACnC,IAAC,kBAN0B,OAAApN,EAAAoB,MAAA,KAAAC,UAAA,KAQrBgM,GAAO,eAAArM,GAAAC,EAAAA,EAAAA,UAAG,YACZ,IACI4K,IAAa,GAEb,IAAM9H,QAAiBC,MAAM,6CAA8C,CACvEsJ,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMtH,KAAKI,UAAU,CACjBmH,OAAQ,mBACRC,SAAU,SACVC,OAAQlD,EACRmD,QAAU,kCAAiCf,kEAC3CgB,OAAQ,WAII,cADD9J,EAASM,QACnByJ,QACLb,KACAnC,EAAU,IAGViD,MAAM,wCAEd,CAAE,MAAO/L,GACLC,QAAQC,IAAI,QAASF,GACrB+L,MAAM,2DACV,CAAC,QACGlC,IAAa,EACjB,CACJ,IAAC,kBA/BY,OAAA7K,EAAAI,MAAA,KAAAC,UAAA,KAiCP2M,GAAY,WACd,IACInC,IAAa,GACTT,IAAQI,EAAYtH,YACpBiB,EAAMV,GACFkG,EACAhI,EAAyB,GAAE8B,cAAyBA,GAEpDnD,EAAyB,GAAEmD,cAAyBA,IAIxDsJ,MAAM,iCAEd,CAAE,MAAO/L,GACL+L,MAAM,0CACN9L,QAAQC,IAAI,QAASF,EACzB,CAAC,QACG6J,IAAa,EACjB,CACJ,EAEMoC,GAAuB,WACzBhC,IAAsB,EAC1B,EAEMiC,GAAsB,WACxBjC,IAAsB,EAC1B,EAwIA,OAtIqB,WACjB,OAAQpB,GACJ,KAAK,EACD,OACIxB,EAAAA,EAAAA,MAAC8E,EAAAA,eAAc,CACXC,OAAQ,CAAC,UAAW,UAAW,WAC/BpF,MAAOC,GAAOoF,SACdrG,MAAO,CAAEsG,EAAG,EAAGC,EAAG,GAClBC,IAAK,CAAEF,EAAG,EAAGC,EAAG,GAAItO,SAAA,EAEjB+L,KAAwB3C,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOwF,OAAOxO,SAAA,EA7GlEyO,EAAAA,QAASC,IAELnM,EAAAA,EAAAA,KAACoM,EAAAA,QAAU,CACPC,OAAQC,EAAQ,MAChBC,UAAQ,EACRC,MAAI,MA0GIxM,EAAAA,EAAAA,KAAC+D,EAAY,CACT4B,QAASmE,GAAcF,IACvB7C,UAAWN,GAAOM,UAClB3B,SAAU,IACVM,SAAU0E,SAGlBpK,EAAAA,EAAAA,KAACyM,EAAAA,QAAoB,CACjBC,SAA0B,QAAhBR,EAAAA,QAASC,GAAe,UAAY,SAC9C3F,MAAO,CAAEmG,KAAM,GACfC,uBAAwC,QAAhBV,EAAAA,QAASC,IAAgB,IAAM,EAAE1O,UAEzDoJ,EAAAA,EAAAA,MAACgG,EAAAA,QAAU,CACPC,sBAAuBrG,GAAOsG,UAC9BC,0BAA0B,UAASvP,SAAA,EAEnCuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOwG,OAAOxP,SAAC,8BAC5BuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOyG,UAAUzP,SAAC,0CAI/BuC,EAAAA,EAAAA,KAACmN,EAAAA,QAAgB,CACbC,YAAY,KACZlN,MAAO+B,EACPoL,aAAc,SAACC,IACXC,EAAAA,EAAAA,UAASrQ,EAAW,uBAAwBoQ,GAC5C7E,EAAe6E,EACnB,EACAE,sBAAuB,SAACF,GACpBpF,EAAkBoF,EACtB,EACAG,YAAY,qBACZC,eAAa,EACbC,YAAU,EACVC,QAASnC,GACToC,OAAQnC,KAGXtC,GACGpJ,EAAAA,EAAAA,KAACK,EAAAA,QAAiB,CAACyN,KAAK,QAAQC,MAAM,aAEtC/N,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CACbxH,MAAOC,GAAOwH,OACdC,QAASrD,GAAQpN,UAEjBuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO0H,WAAW1Q,SAAC,qBAO5D,KAAK,EAED,OACIoJ,EAAAA,EAAAA,MAAC8E,EAAAA,eAAc,CACXC,OAAQ,CAAC,UAAW,UAAW,WAC/BpF,MAAOC,GAAOoF,SACdrG,MAAO,CAAEsG,EAAG,EAAGC,EAAG,GAClBC,IAAK,CAAEF,EAAG,EAAGC,EAAG,GAAItO,SAAA,EAEpBuC,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAOC,GAAO2H,cAAc3Q,UAC9BuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACE,QAAS,kBAAM5F,EAAU,EAAE,EAAC7K,UAC1CuC,EAAAA,EAAAA,KAACqO,EAAAA,QAAQ,CAACrM,KAAK,aAAa8L,KAAM,GAAIC,MAAM,iBAGpDlH,EAAAA,EAAAA,MAACgG,EAAAA,QAAU,CACPC,sBAAuBrG,GAAOsG,UAC9BC,0BAA0B,UAASvP,SAAA,EAEnCuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOwG,OAAOxP,SAAC,6BAC5BuC,EAAAA,EAAAA,KAACsO,EAAAA,UAASzK,GAAAA,GAAA,GACFO,IAAK,IACTmK,aAAa,EACbrO,MAAO0I,EACPyE,aAAcxE,EACd2F,UAzNb,EA0NaC,UAAWhI,GAAOiI,cAClBC,aAAa,aACbC,gBAAgB,cAChBC,WAAY,SAAA9P,GAAA,IAAG6H,EAAK7H,EAAL6H,MAAOkI,EAAM/P,EAAN+P,OAAQC,EAAShQ,EAATgQ,UAAS,OACnC/O,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CACDyI,SAAU7E,GAAuBvD,GAEjCJ,MAAO,CAACC,GAAOwI,KAAMF,GAAatI,GAAOyI,WAAWzR,UAEpDuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO0I,SAAS1R,SACxBqR,IAAWC,GAAY/O,EAAAA,EAAAA,KAACoP,EAAAA,OAAM,IAAM,SAJpCxI,EAMF,MAGf5G,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAOC,GAAO4I,gBAAgB5R,SAC/B2L,GACGpJ,EAAAA,EAAAA,KAACK,EAAAA,QAAiB,CAACyN,KAAK,QAAQC,MAAM,aAEtClH,EAAAA,EAAAA,MAAAyI,EAAAA,SAAA,CAAA7R,SAAA,EACIuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CACbxH,MAAOC,GAAOwH,OACdC,QAAS1C,GAAU/N,UAEnBuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO0H,WAAW1Q,SAAC,kBAEpCuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CACbE,QAASrD,GAAQpN,UAEjBuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO8I,WAAW9R,SAAC,4BAWhE,QACI,OAAOuC,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,IAExB,CAEOiJ,EACX,CAEA,IAAM/I,GAASY,EAAAA,QAAWC,OAAO,CAC7ByF,UAAW,CACPJ,KAAM,EAEN8C,WAAY,SACZhI,eAAgB,UAEpBwF,OAAQ,CACJyC,SAAU,GACV3B,MAAO,UACP4B,WAAY,OACZC,aAAc,GACdC,WAAY,qBAEhB3C,UAAW,CACPwC,SAAU,GACV3B,MAAO,UACP6B,aAAc,GACdC,WAAY,qBAEhB5B,OAAQ,CACJ6B,IAAK,GACLC,gBAAiB,UACjBC,gBAAiB,GACjBC,kBAAmB,GACnBC,aAAc,GAGlBC,aAAc,CACVJ,gBAAiB,UACjBC,gBAAiB,GACjBC,kBAAmB,GACnBC,aAAc,EACdE,UAAW,IAEfC,WAAY,CACRN,gBAAiB,UACjBC,gBAAiB,GACjBC,kBAAmB,GACnBC,aAAc,EACdN,aAAc,IAElBzB,WAAY,CACRJ,MAAO,UACP8B,WAAY,kBAEhBR,gBAAiB,CACbe,UAAW,GACXX,WAAY,UAEhBa,uBAAwB,CACpB/I,cAAe,MACfkI,WAAY,SACZG,aAAc,GACd/H,MAAO,IACP0I,YAAa,UACbC,YAAa,EACbN,aAAc,GAElBO,cAAe,CACX9D,KAAM,EACN7E,OAAQ,GACRiG,MAAO,WAEX9B,OAAQ,CACJpE,MAAOA,GACPC,OAAQD,GACR4H,WAAY,SACZhI,eAAgB,SAChBqI,IAAK,IAET/N,MAAO,CACH8F,MAAO,IACPC,OAAQ,IACR4I,WAAY,WAEhBhC,cAAe,CACX0B,UAAW,GACXvI,MAAO,IACP8I,WAAY,OACZC,YAAa,QAEjB3B,KAAM,CACFpH,MAAO,GACPC,OAAQ,GACR+I,WAAY,GACZnB,SAAU,GACVc,YAAa,EACbD,YAAa,UACbO,UAAW,SACXF,YAAa,GAEjB1B,UAAW,CACPqB,YAAa,QAEjBpB,SAAU,CACNpB,MAAO,UACP2B,SAAU,GACVoB,UAAW,UAEfjF,SAAU,CACNc,KAAM,EACN8C,WAAY,SACZhI,eAAgB,UAEpB2G,cAAe,CACX2C,SAAU,WACVjB,IAAK,GACLkB,KAAM,GACNC,OAAQ,IAEZ1B,WAAY,CACRxB,MAAO,UACP+C,UAAW,SACXV,UAAW,GACXV,SAAU,GACVI,IAAK,IAET/I,UAAW,CACP2I,SAAU,GACVG,WAAY,oBACZD,aAAc,GACd7B,MAAO,UACP+B,IAAK,O,iCCjaAjN,GAAO,eAAArF,GAAAiB,EAAAA,EAAAA,UAAG,UAAOwH,EAAK/F,GACjC,UACQkB,EAAAA,QAAayB,QAAQoD,EAAK/F,EAClC,CAAE,MAAOV,GACPC,QAAQC,IAAI,wBAAyBF,EACvC,CACF,IAAC,gBANmBb,EAAAgB,GAAA,OAAAnC,EAAAoB,MAAA,KAAAC,UAAA,KASPwC,GAAO,eAAA7C,GAAAC,EAAAA,EAAAA,UAAG,UAAOwH,GAC5B,IAEE,aADoB7E,EAAAA,QAAaC,QAAQ4E,EAE3C,CAAE,MAAOzG,GACPC,QAAQC,IAAI,2BAA4BF,EAC1C,CACF,IAAC,gBAPmBI,GAAA,OAAApB,EAAAI,MAAA,KAAAC,UAAA,MASG,eAAAE,GAAAN,EAAAA,EAAAA,UAAG,UAAOwH,GAC/B,UACQ7E,EAAAA,QAAa6B,WAAWgD,EAChC,CAAE,MAAOzG,GACPC,QAAQC,IAAI,yBAA0BF,EACxC,CACF,GANuB,I,+kBCbvB,IAAAkI,GAA0BC,EAAAA,QAAWC,IAAI,UAAjCC,GAAKH,GAALG,MAAaH,GAANI,OAEA,SAASoJ,KACpB,IAAMC,GAAaC,EAAAA,GAAAA,iBAEbC,EAAa,WACfF,EAAWG,SAAS,QACpBzO,GAAQ,YAAa,IACzB,EAUA,OACI7C,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAOC,GAAOsG,UAAUtP,UAC1BuC,EAAAA,EAAAA,KAACuR,GAAAA,QAAU,CACPC,OAAQH,EACRI,OAAQJ,EAERK,oBAdO,SAAHlU,GAAsB,IAAb4G,EAAKuN,OAAAC,OAAA,KAAAC,EAAAA,GAAAA,SAAArU,GAAAA,IAC1B,OACIwC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgBnK,GAAAA,GAAA,CAAC2C,MAAOC,GAAOqL,YAAgB1N,GAAK,IAAA3G,UACjDuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAAArJ,SAAC,WAIlB,EAQYsU,gBAAiB,CAAE9B,kBAAmB,IACtC+B,MAAO,CACH,CACIjC,gBAAiB,UAEjBhO,OACI/B,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAOC,GAAOwF,OAAOxO,UACvBuC,EAAAA,EAAAA,KAACiS,EAAAA,QAAM,CAAC5F,OAAQC,EAAQ,KAA0CC,UAAQ,EAACC,MAAI,MAGvF0F,MAAO,eACPC,SAAU,yDAEd,CACIpC,gBAAiB,UACjBhO,OACI/B,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAOC,GAAOwF,OAAOxO,UACvBuC,EAAAA,EAAAA,KAACiS,EAAAA,QAAM,CAAC5F,OAAQC,EAAQ,MAAqDC,UAAQ,EAACC,MAAI,MAGlG0F,MAAO,0BACPC,SAAU,qDAEd,CACIpC,gBAAiB,UACjBhO,OACI/B,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAOC,GAAOwF,OAAOxO,UACvBuC,EAAAA,EAAAA,KAACiS,EAAAA,QAAM,CAAC5F,OAAQC,EAAQ,MAA+CC,UAAQ,EAACC,MAAI,MAG5F0F,MAAO,oBACPC,SAAU,qDAMlC,CAEA,IAAM1L,GAASY,EAAAA,QAAWC,OAAO,CAC7ByF,UAAW,CACPJ,KAAM,EACNoD,gBAAiB,SAErB9D,OAAQ,CACJpE,MAAe,GAARA,GACPC,OAAQD,IAEZiK,WAAY,CACRM,QAAS,MCxEXC,IAAQC,EAAAA,EAAAA,WAwCd,SAtCkB,WACd,IAAA1U,GAA4CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAnD2U,EAAczU,EAAA,GAAE0U,EAAiB1U,EAAA,IAExCO,EAAAA,EAAAA,YAAU,WACNoU,GACJ,GAAG,IAEH,IAAMA,EAAuB,eAAAjV,GAAAiB,EAAAA,EAAAA,UAAG,YAC5B,IAAIiU,QAAkBrR,GAAQ,aAE1BmR,EADa,GAAbE,EAKR,IAAC,kBAP4B,OAAAlV,EAAAoB,MAAA,KAAAC,UAAA,KAS7B,OAAI0T,GAAkC,QAAhBrG,EAAAA,QAASC,IAEvBtF,EAAAA,EAAAA,MAACwL,GAAMM,UAAS,CAACC,iBAAiB,aAAYnV,SAAA,EAC1CuC,EAAAA,EAAAA,KAACqS,GAAMQ,OAAM,CAAC7Q,KAAK,aAAa8Q,QAAS,CAAEC,aAAa,GAASC,UAAW9B,MAC5ElR,EAAAA,EAAAA,KAACqS,GAAMQ,OAAM,CAAC7Q,KAAK,OAAO8Q,QAAS,CAAEC,aAAa,GAASC,UAAWjL,QAK5D,MAAlBwK,EAA+B,MAG/BvS,EAAAA,EAAAA,KAACqS,GAAMM,UAAS,CACZM,cAAe,CACXF,aAAa,GACftV,UAEFuC,EAAAA,EAAAA,KAACqS,GAAMQ,OAAM,CAAC7Q,KAAK,iBAAiBgR,UAAWjL,MAG3D,E,4JCzCMmL,GAAcvL,EAAAA,QAAWC,IAAI,UAAUC,MAqBvCpB,GAASY,EAAAA,QAAWC,OAAO,CAC7B6L,YAAa,CACTtL,MAAOqL,GACPpL,OAvBa,OA6BrB,SA3BuB,SAAHtK,GAAkB,IAAZ4V,EAAI5V,EAAJ4V,KAKtB,OACIpT,EAAAA,EAAAA,KAACqT,GAAAA,QAAQ,CACLC,UAAQ,EACRC,gBAAiB,IACjB/G,MAAI,EACJ5F,MAAO,EACP4M,SAAUN,GAAYzV,SAErB2V,EAAKtO,KAAI,SAAC/C,EAAO6E,GAAK,OAZZ,SAAC7E,EAAO6E,GAAK,OAC5B5G,EAAAA,EAAAA,KAACyT,GAAAA,QAAK,CAAapH,OAAQ,CAAEqH,IAAK3R,GAASyE,MAAOC,GAAO0M,aAA7CvM,EAA4D,CAWxC+M,CAAW5R,EAAO6E,EAAM,KAGhE,ECbkBe,EAAAA,QAAWC,IAAI,UAAzBC,MAAR,IAgFE+L,GAAA,CAAAC,KAAA,4FAAAtR,SAAA,2EAAAuR,GAAA,CAAAD,KAAA,yHAAAtR,SAAA,2EAoBIwR,GAAe,SAAHjU,GAA2B,IAArBkU,EAAIlU,EAAJkU,KAAM9F,EAAOpO,EAAPoO,QACpB+F,GAAQC,EAAAA,GAAAA,gBAAe,GACvBC,GAAYC,EAAAA,EAAAA,QAAOC,KAAKC,OAExBC,GAAiBC,EAAAA,GAAAA,kBAAiB,WAAD,IAAAC,EAAA,WACnC,MAAO,CACHxN,UAAW,CAAC,CAAEgN,MAAOA,EAAM/T,QAEnC,EArHc,OAqHbuU,EAAAC,SAAA,CAAAT,MArHQA,GAAKQ,EAAAE,WAAAf,GAAAa,EAAAG,cAAA,cAAAH,CAAA,CAiH0B,IAMlCI,GAAsBL,EAAAA,GAAAA,kBAAiB,WAAD,IAAAC,EAAA,WACxC,MAAO,CACHxN,UAAW,CACP,CAAE6N,YAAa,KACf,CAAEC,QAA0B,EAAdd,EAAM/T,MAAR,QAGxB,EA5HmB,OA4HlBuU,EAAAC,SAAA,CAAAT,MA5HaA,GAAKQ,EAAAE,WAAAb,GAAAW,EAAAG,cAAA,cAAAH,CAAA,CAqH0B,IAyB7C,OACIzU,EAAAA,EAAAA,KAACiF,GAAAA,QAAa,CAACuB,MAAO,CAACC,GAAOuO,KAAMT,GAAgB9W,UAChDuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CACbiH,cAAe,EACf/G,QApBQ,WAChB,IAAMoG,EAAMD,KAAKC,MACbA,EAAMH,EAAUe,QAAU,MAC1Bf,EAAUe,QAAUZ,EACpBpG,EAAQ8F,GAEhB,EAeYmB,UAbU,WAClBlB,EAAM/T,OAAQkV,EAAAA,GAAAA,YAAW,KAC7B,EAYYC,WAVW,WACnBpB,EAAM/T,OAAQkV,EAAAA,GAAAA,YAAW,EAC7B,EASYE,aAAc,IACd9O,MAAOC,GAAO8O,UAAU9X,UAExBoJ,EAAAA,EAAAA,MAAC8E,EAAAA,eAAc,CAACC,OAAQ,CAAC,UAAW,WAAYpF,MAAOC,GAAOoF,SAASpO,SAAA,EACnEuC,EAAAA,EAAAA,KAACiF,GAAAA,QAAc,CAACoH,OAAQ,CAAEqH,IAAKM,EAAKwB,OAAO,IAAMhP,MAAO,CAACC,GAAOgP,QAASZ,MACzEhO,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOiP,UAAUjY,SAAA,EAC1BuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOkP,QAAQlY,SAAEuW,EAAK2B,WACnC9O,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOmP,OAAOnY,SAAA,EACvBoJ,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACN,MAAOC,GAAOoP,QAAQpY,SAAA,CAAC,gBAASuW,EAAK8B,UAC3CjP,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACN,MAAOC,GAAOsP,WAAWtY,SAAA,CAAEuW,EAAKgC,SAAS,IAAEhC,EAAKzR,wBAOlF,EAGMkE,GAASY,EAAAA,QAAWC,OAAO,CAC7ByF,UAAW,CACPJ,KAAM,EACNoD,gBAAiB,QAErBoD,YAAa,CACTtL,MAAO,OACPC,OAAQ,KAEZmO,OAAQ,CACJ7D,QAAS,GAEbmD,UAAW,CACP5I,KAAM,GAEVqI,KAAM,CACFrI,KAAM,GACNuJ,OAAQ,EACRhG,aAAc,GACdiG,SAAU,SACVpG,gBAAiB,OACjBqG,UAAW,EACXC,YAAa,mBACbC,aAAc,CAAEzO,MAAO,EAAGC,OAAQ,GAClCyO,cAAe,EACfC,aAAc,EACdjG,YAAa,UACbC,YAAa,EACbX,WAAY,qBAEhB4F,QAAS,CACL5N,MAAO,OACPC,OAAQ,IACR2O,mBAAoB,SACpBC,oBAAqB,GACrBC,qBAAsB,IAE1BjB,UAAW,CACP/I,KAAM,EACNyF,QAAS,IAEbuD,QAAS,CACLjG,SAAU,GAEVE,aAAc,EACd7B,MAAO,QACP8B,WAAY,kBAEhB+G,WAAY,CACRlH,SAAU,GACV3B,MAAO,QACP6B,aAAc,GAElBgG,OAAQ,CACJrO,cAAe,MACfE,eAAgB,iBAEpBoO,QAAS,CACLnG,SAAU,GACV3B,MAAO,UACP8B,WAAY,kBAEhBkG,WAAY,CACRrG,SAAU,GACV3B,MAAO,UAIf,SAnOa,WACT,IAAA8I,EAAgClZ,IAChCC,GADiBiZ,EAATnW,UAAmBmW,EAAR7V,UACGnD,EAAAA,EAAAA,UAAS,KAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA3BkZ,EAAGhZ,EAAA,GAAEiZ,EAAMjZ,EAAA,GAClBG,GAA8BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAAnC+Y,EAAO9Y,EAAA,GAAE+Y,EAAU/Y,EAAA,GAC1B4C,GAAoCjD,EAAAA,EAAAA,WAAS,GAAMkD,GAAAhD,EAAAA,EAAAA,SAAA+C,EAAA,GAA5CoW,EAAUnW,EAAA,GAAEoW,EAAapW,EAAA,GAC1BoQ,GAAaC,EAAAA,GAAAA,iBACnB7I,GAA4C1K,EAAAA,EAAAA,WAAS,GAAK2K,GAAAzK,EAAAA,EAAAA,SAAAwK,EAAA,GAAnD6O,EAAc5O,EAAA,GAAE6O,EAAiB7O,EAAA,IACxCnK,EAAAA,EAAAA,YAAU,WACNiZ,IACAC,GAEJ,GAAG,IAEH,IAAMD,EAAQ,eAAA9Z,GAAAiB,EAAAA,EAAAA,UAAG,YACb,IACI,IAAM8C,QAAiBC,MAAO,GAAEC,0BAChC,GAAIF,EAASI,GAAI,CACb,IAAMyR,QAAa7R,EAASM,OAC5BkV,EAAO3D,EACX,MACI3T,QAAQD,MAAM,2BAEtB,CAAE,MAAOA,GACLC,QAAQD,MAAM,2BAA4BA,EAC9C,CAAC,QACG2X,GAAc,EAClB,CACJ,IAAC,kBAda,OAAA3Z,EAAAoB,MAAA,KAAAC,UAAA,KAgBR0Y,EAAY,eAAA/Y,GAAAC,EAAAA,EAAAA,UAAG,YACjB,IACI4Y,GAAkB,GAClB,IAAMG,GAAeC,EAAAA,EAAAA,QAAMC,EAAAA,EAAAA,YAAW1a,EAAI,YAEpC2a,SADwBC,EAAAA,EAAAA,SAAQJ,IACCK,KAAK/S,KAAI,SAAAgT,GAAG,OAAIA,EAAI1E,OAAO2E,IAAI,IACtEd,EAAWU,EACf,CAAE,MAAOnY,GACLC,QAAQD,MAAM,0BAA2BA,EAC7C,CAAC,QACG6X,GAAkB,EACtB,CACJ,IAAC,kBAZiB,OAAA7Y,EAAAI,MAAA,KAAAC,UAAA,KAkBZmZ,EAAgB,SAACC,IACnB1K,EAAAA,EAAAA,UAASrQ,EAAW,eAAiB+a,GACrC9G,EAAWG,SAAS,iBAAkB,CAAE2G,GAAAA,GAC5C,EAEMC,GAAYC,EAAAA,EAAAA,cAAY,WAC1BhB,GAAc,GACdG,GACJ,GAAG,IAEH,OACItX,EAAAA,EAAAA,KAAAsP,EAAAA,SAAA,CAAA7R,UACIoJ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOsG,UAAUtP,SAAA,EACxB2Z,GAAkBJ,EAAQpT,OAAS,IAAK5D,EAAAA,EAAAA,KAACoY,GAAc,CAAChF,KAAM4D,KAChEhX,EAAAA,EAAAA,KAACqY,GAAAA,QAAQ,CACLjF,KAAM0D,EACNwB,aAAc,SAACtE,GAAI,OAAKA,EAAK9R,GAAG,EAChCqW,WArBK,SAAHxZ,GAAA,IAAMiV,EAAIjV,EAAJiV,KAAI,OACxBhU,EAAAA,EAAAA,KAAC+T,GAAY,CAACC,KAAMA,EAAM9F,QAAS8J,GAAiB,EAqBxClL,sBAAuBrG,GAAOwP,OAC9BuC,WAAY,EACZC,gBACIzY,EAAAA,EAAAA,KAAC0Y,GAAAA,QAAc,CACXxB,WAAYA,EACZgB,UAAWA,EACXS,UAAU,kBAOtC,E,4FCrEe,SAASC,GAAYpb,GAAa,IAADqb,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAATC,EAAK7c,EAAL6c,MAC7BlJ,GAAaC,EAAAA,GAAAA,iBACnByF,EAA6ClZ,IAArC+C,EAASmW,EAATnW,UAAWE,EAAWiW,EAAXjW,YAAaI,EAAQ6V,EAAR7V,SAChCpD,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAjC4X,EAAM1X,EAAA,GAAEwc,EAASxc,EAAA,GACxBG,GAAgCJ,EAAAA,EAAAA,WAAqB,OAAZgb,EAAAwB,EAAME,SAAU,OAAJzB,EAAZD,EAAcZ,SAAF,EAAZa,EAAkBvW,WAAY,MAAKrE,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAArEsE,EAAQrE,EAAA,GAAEsc,EAAWtc,EAAA,GAC5B4C,GAA8BjD,EAAAA,EAAAA,WAAqB,OAAZkb,EAAAsB,EAAME,SAAU,OAAJvB,EAAZD,EAAcd,SAAF,EAAZe,EAAkBrD,UAAW,IAAG5U,GAAAhD,EAAAA,EAAAA,SAAA+C,EAAA,GAAhE6U,EAAO5U,EAAA,GAAE0Z,GAAU1Z,EAAA,GAC1BwH,IAA0C1K,EAAAA,EAAAA,WAAqB,OAAZob,EAAAoB,EAAME,SAAU,OAAJrB,EAAZD,EAAchB,SAAF,EAAZiB,EAAkBwB,gBAAiB,IAAGlS,IAAAzK,EAAAA,EAAAA,SAAAwK,GAAA,GAAlFmS,GAAalS,GAAA,GAAEmS,GAAgBnS,GAAA,GACtCE,IAA0B7K,EAAAA,EAAAA,WAAqB,OAAZsb,EAAAkB,EAAME,SAAU,OAAJnB,EAAZD,EAAclB,SAAF,EAAZmB,EAAkB5W,QAAS,IAAGmG,IAAA5K,EAAAA,EAAAA,SAAA2K,GAAA,GAA1DlG,GAAKmG,GAAA,GAAEiS,GAAQjS,GAAA,GACtBG,IAA0BjL,EAAAA,EAAAA,WAAqB,OAAZwb,EAAAgB,EAAME,SAAU,OAAJjB,EAAZD,EAAcpB,SAAF,EAAZqB,EAAkBta,QAAS,IAAG+J,IAAAhL,EAAAA,EAAAA,SAAA+K,GAAA,GAA1D9J,GAAK+J,GAAA,GAAE8R,GAAQ9R,GAAA,GACtBG,IAA0BrL,EAAAA,EAAAA,WAAqB,OAAZ0b,EAAAc,EAAME,SAAU,OAAJf,EAAZD,EAActB,SAAF,EAAZuB,EAAkB1D,QAAS,GAAE3M,IAAApL,EAAAA,EAAAA,SAAAmL,GAAA,GAAzD4M,GAAK3M,GAAA,GAAE2R,GAAQ3R,GAAA,GACtBG,IAAwCzL,EAAAA,EAAAA,WAAqB,OAAZ4b,EAAAY,EAAME,SAAU,OAAJb,EAAZD,EAAcxB,SAAF,EAAZyB,EAAkBqB,eAAgB,GAAExR,IAAAxL,EAAAA,EAAAA,SAAAuL,GAAA,GAA9EyR,GAAYxR,GAAA,GAAEyR,GAAezR,GAAA,GACpCG,IAAoC7L,EAAAA,EAAAA,WAAqB,OAAZ8b,EAAAU,EAAME,SAAU,OAAJX,EAAZD,EAAc1B,SAAF,EAAZ2B,EAAkBqB,aAAc,MAAKtR,IAAA5L,EAAAA,EAAAA,SAAA2L,GAAA,GAA3EuR,GAAUtR,GAAA,GAAEuR,GAAavR,GAAA,GAChCwR,IAAoCtd,EAAAA,EAAAA,WAAqB,OAAZgc,EAAAQ,EAAME,SAAU,OAAJT,EAAZD,EAAc5B,SAAF,EAAZ6B,EAAkBsB,cAAc,GAAMC,IAAAtd,EAAAA,EAAAA,SAAAod,GAAA,GAA5EC,GAAUC,GAAA,GAAEC,GAAaD,GAAA,GAChCE,IAAsC1d,EAAAA,EAAAA,WAAqB,OAAZkc,EAAAM,EAAME,SAAU,OAAJP,EAAZD,EAAc9B,SAAF,EAAZ+B,EAAkBwB,eAAe,GAAMC,IAAA1d,EAAAA,EAAAA,SAAAwd,GAAA,GAA/EC,GAAWC,GAAA,GAAEC,GAAcD,GAAA,GAClCE,IAAsD9d,EAAAA,EAAAA,WACtC,OAAZoc,EAAAI,EAAME,SAAU,OAAJL,EAAZD,EAAchC,SAAF,EAAZiC,EAAkB0B,uBAAuB,GAC5CC,IAAA9d,EAAAA,EAAAA,SAAA4d,GAAA,GAFMC,GAAmBC,GAAA,GAAEC,GAAsBD,GAAA,GAGlDE,IAAoDle,EAAAA,EAAAA,WACpC,OAAZsc,EAAAE,EAAME,SAAU,OAAJH,EAAZD,EAAclC,SAAF,EAAZmC,EAAkB4B,sBAAsB,GAC3CC,IAAAle,EAAAA,EAAAA,SAAAge,GAAA,GAFMC,GAAkBC,GAAA,GAAEC,GAAqBD,GAAA,GAGhDE,IAA8Bte,EAAAA,EAAAA,WAAS,GAAMue,IAAAre,EAAAA,EAAAA,SAAAoe,GAAA,GAAtCE,GAAOD,GAAA,GAAEE,GAAUF,GAAA,GACpBG,GAAiB,eAAA/d,GAAAC,EAAAA,EAAAA,UAAG,YAGtB,IAAiC,WAFF+d,GAAYC,uCAEtBC,QAArB,CAKA,IAAMC,QAAqBH,GAAYI,wBAAwB,CAC3DC,WAAYL,GAAAA,iBAA6BM,OACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,EACTC,UAAU,IAEd,IAAKP,EAAaQ,UAAW,CAEzB,IAAMC,EAAS,GAAAC,QAAAC,EAAAA,GAAAA,SAAO9H,GAAM,CAAEmH,EAAaY,OAAO,GAAG7J,MACrD4G,EAAU8C,EACd,CAbA,MAFI7R,MAAM,gDAgBd,IAAC,kBApBsB,OAAA/M,EAAAI,MAAA,KAAAC,UAAA,KAsBjB2e,GAAgB,eAAAze,GAAAN,EAAAA,EAAAA,UAAG,YAErBgf,GAAAA,QAAMC,KAAK,CACPC,KAAM,QACNC,MAAO,wBACPC,MAAO,4BAEX,IAAIC,EAAW,GAEf,IAAK,IAAMC,KAAYvI,EAAQ,CAC3B,IAQMwI,EAAO,CACTtK,IAAKqK,EACL/b,KAAO,GAAEtB,EAAUgB,cAAc2S,KAAKC,aACtCqJ,KAAM,cAGV,IACI,IAAMpc,QAAiB0c,GAAAA,KAAKC,IAAIF,EAfpB,CACZG,UAAW,WACXC,OAAQ,aACRC,OAAQ,aACRC,UAAW,uBACXC,UAAW,2CACXC,oBAAqB,MAUrB,GAAwB,MAApBjd,EAAS+J,OACT,MAAM,IAAImT,MAAM,gCAGpB,IAAMC,EAAand,EAASyJ,KAAK2T,aAAapc,SAC9Cub,EAASc,KAAKF,EAClB,CAAE,MAAOlf,GACLC,QAAQD,MAAM,yBAA0BA,GAExCie,GAAAA,QAAMC,KAAK,CACPC,KAAM,QACNC,MAAO,wBACPC,MAAO,2BAGf,CACJ,CAEA,OAAOC,CACX,IAAC,kBA7CqB,OAAA/e,EAAAH,MAAA,KAAAC,UAAA,KAgDhBggB,GAAY,eAAA/e,GAAArB,EAAAA,EAAAA,UAAG,YACjB,IAAK,IAADqgB,EACIhB,EAAW,GAEXtI,IACAsI,QAAiBN,MAErB,IAAMuB,EAAW,CACbvJ,OAAQsI,EACRvb,SAAAA,EACAoT,QAAAA,EACA+E,cAAAA,GACAlY,MAAAA,GACAxD,MAAAA,GACA+b,aAAAA,GACAE,WAAAA,GACAG,WAAAA,GACAI,YAAAA,GACAI,oBAAAA,GACAI,mBAAAA,GACAlG,MAAAA,GACAkJ,OAAQpe,EAAYsB,IACpBlE,KAAM,CACFsB,WAAY0B,EAAS1B,WACrBwC,OAAQlB,EAAYkB,OACpBC,MAAOnB,EAAYmB,MACnBC,KAAMpB,EAAYoB,KAClBQ,MAAO5B,EAAYqB,cAI3B,GADAqa,IAAW,GACK,OAAhBwC,EAAIzE,EAAME,SAANuE,EAAc7G,GAQU,aANDgH,EAAAA,QAAMf,IACxB,GAAEzc,qBAAgC4Y,EAAME,OAAOtC,GAAG/V,MACnD6c,IAISzT,QAET7L,QAAQC,IAAI,qCACZ+d,GAAAA,QAAMC,KAAK,CACPC,KAAM,UACNC,MAAO,sBACPC,MAAO,oDAEX1M,EAAWG,SAAS,sBAEpB7R,QAAQD,MAAM,iCACdie,GAAAA,QAAMC,KAAK,CACPC,KAAM,QACNC,MAAO,6BACPC,MAAO,kCAQS,aAHDoB,EAAAA,QAAMC,KAAM,GAAEzd,oBAAgCsd,IAGxDzT,QAET7L,QAAQC,IAAI,qCACZ+d,GAAAA,QAAMC,KAAK,CACPC,KAAM,UACNC,MAAO,sBACPC,MAAO,oDAGX1M,EAAWgO,WAEX1f,QAAQD,MAAM,iCACdie,GAAAA,QAAMC,KAAK,CACPC,KAAM,QACNC,MAAO,6BACPC,MAAO,4BAIvB,CAAE,MAAOre,GACLC,QAAQD,MAAM,SAAUA,GAExBie,GAAAA,QAAMC,KAAK,CACPC,KAAM,QACNC,MAAO,QACPC,MAAO,2BAEf,CAAC,QAEGvB,IAAW,EACf,CACJ,IAAC,kBA5FiB,OAAAxc,EAAAlB,MAAA,KAAAC,UAAA,KA8FlB,OACIgI,EAAAA,EAAAA,MAACgG,EAAAA,QAAU,CAACrG,MAAOC,GAAOsG,UAAUtP,SAAA,EAChCuC,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAOC,GAAO2Y,eAAe3hB,UAE/BuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CACbxH,MAAOC,GAAO4J,WACdnC,QAAS,kBAAMiD,EAAWgO,QAAQ,EAAC1hB,UAEnCuC,EAAAA,EAAAA,KAACqO,EAAAA,QAAQ,CAACrM,KAAK,aAAa8L,KAAM,GAAIC,MAAM,iBAIpDlH,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAO2Y,eAAe3hB,SAAA,EAC/BuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO4Y,QAAQ5hB,SAAC,mBAC7BuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACxH,MAAOC,GAAO6Y,kBAAmBpR,QAASqO,GAAkB9e,UAC1EuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO8Y,iBAAiB9hB,SAAC,qBAE1CuC,EAAAA,EAAAA,KAAC6M,EAAAA,QAAU,CAAC2S,YAAU,EAACC,gCAAgC,EAAMhiB,SACxD+X,EAAO1Q,KAAI,SAACiZ,EAAUnX,GAAK,OACxB5G,EAAAA,EAAAA,KAACyT,GAAAA,QAAK,CAAapH,OAAQ,CAAEqH,IAAKqK,GAAYvX,MAAOC,GAAO1E,OAAhD6E,EAAyD,UAIjFC,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOiZ,eAAejiB,SAAA,EAC/BuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOkZ,MAAMliB,SAAC,cAC3BuC,EAAAA,EAAAA,KAAC4f,GAAAA,QAAc,CACXnS,YAAa,CAAEkS,MAAO,kBAAmBzf,MAAO,MAChD2f,cAAe,SAAC3f,GAAK,OAAKsa,EAAYta,EAAM,EAC5C4f,MAAO,CACH,CAAEH,MAAO,QAASzf,MAAO,SACzB,CAAEyf,MAAO,WAAYzf,MAAO,YAC5B,CAAEyf,MAAO,QAASzf,MAAO,SACzB,CAAEyf,MAAO,iBAAkBzf,MAAO,mBAEtCsG,MAAOuZ,GACP7f,MAAOqC,QAGfsE,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOiZ,eAAejiB,SAAA,EAC/BuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOkZ,MAAMliB,SAAC,cAC3BuC,EAAAA,EAAAA,KAACggB,GAAAA,QAAS,CACNxZ,MAAOC,GAAOwZ,MACd/f,MAAOyV,EACPtI,aAAcoN,GACdhN,YAAY,uBAGpB5G,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOiZ,eAAejiB,SAAA,EAC/BuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOkZ,MAAMliB,SAAC,oBAC3BuC,EAAAA,EAAAA,KAACggB,GAAAA,QAAS,CACNxZ,MAAO,CAACC,GAAOwZ,MAAOxZ,GAAOyZ,gBAC7BhgB,MAAOwa,GACPrN,aAAcsN,GACdwF,WAAS,EACT1S,YAAY,6BAGpB5G,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOiZ,eAAejiB,SAAA,EAC/BuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOkZ,MAAMliB,SAAC,kBAC3BuC,EAAAA,EAAAA,KAACggB,GAAAA,QAAS,CACNxZ,MAAOC,GAAOwZ,MACd/f,MAAOsC,GACP6K,aAAcuN,GACdjM,aAAa,UACblB,YAAY,2BAGpB5G,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOiZ,eAAejiB,SAAA,EAC/BuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOkZ,MAAMliB,SAAC,WAC3BuC,EAAAA,EAAAA,KAACggB,GAAAA,QAAS,CACNxZ,MAAOC,GAAOwZ,MACd/f,MAAOlB,GACPqO,aAAcwN,GACdlM,aAAa,gBACblB,YAAY,oBAGpB5G,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOiZ,eAAejiB,SAAA,EAC/BuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOkZ,MAAMliB,SAAC,WAC3BuC,EAAAA,EAAAA,KAACggB,GAAAA,QAAS,CACNxZ,MAAOC,GAAOwZ,MACd/f,MAAO4V,GACPzI,aAAcyN,GACdnM,aAAa,UACblB,YAAY,oBAGpB5G,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOiZ,eAAejiB,SAAA,EAC/BuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOkZ,MAAMliB,SAAC,uBAC3BoJ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAO2Z,iBAAiB3iB,SAAA,EACjCuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CACbxH,MAAOC,GAAO4Z,cACdnS,QAAS,kBAAM6M,GAAe,GAAKC,GAAgBD,GAAe,EAAE,EAACtd,UAErEuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO6Z,kBAAkB7iB,SAAC,SAE3CuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO8Z,aAAa9iB,SAAEsd,MAEnC/a,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CACbxH,MAAOC,GAAO4Z,cACdnS,QAAS,kBAAM8M,GAAgBD,GAAe,EAAE,EAACtd,UAEjDuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO6Z,kBAAkB7iB,SAAC,eAInDoJ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOiZ,eAAejiB,SAAA,EAC/BuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOkZ,MAAMliB,SAAC,gBAC3BuC,EAAAA,EAAAA,KAAC4f,GAAAA,QAAc,CACX1f,MAAO+a,GACPxN,YAAa,CAAEkS,MAAO,oBAAqBzf,MAAO,MAClD2f,cAAe,SAAC3f,GAAK,OAAKgb,GAAchb,EAAM,EAC9C4f,MAAO,CACH,CAAEH,MAAO,SAAUzf,MAAO,UAC1B,CAAEyf,MAAO,UAAWzf,MAAO,WAC3B,CAAEyf,MAAO,uBAAwBzf,MAAO,yBAE5CsG,MAAOuZ,SAIflZ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOiZ,eAAejiB,SAAA,EAC/BuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOkZ,MAAMliB,SAAC,wBAC3BuC,EAAAA,EAAAA,KAACwgB,GAAAA,QAAM,CACHtgB,MAAOkb,GACPyE,cAAevE,GACfmF,WAAY,CAAEC,MAAO,OAAQC,KAAM,iBAG3C9Z,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOiZ,eAAejiB,SAAA,EAC/BuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOkZ,MAAMliB,SAAC,gBAC3BuC,EAAAA,EAAAA,KAACwgB,GAAAA,QAAM,CACHtgB,MAAOsb,GACPqE,cAAenE,GACf+E,WAAY,CAAEC,MAAO,OAAQC,KAAM,iBAG3C9Z,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOiZ,eAAejiB,SAAA,EAC/BuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOkZ,MAAMliB,SAAC,uBAC3BuC,EAAAA,EAAAA,KAACwgB,GAAAA,QAAM,CACHtgB,MAAO0b,GACPiE,cAAe/D,GACf2E,WAAY,CAAEC,MAAO,OAAQC,KAAM,iBAG3C9Z,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOiZ,eAAejiB,SAAA,EAC/BuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOkZ,MAAMliB,SAAC,uBAC3BuC,EAAAA,EAAAA,KAACwgB,GAAAA,QAAM,CACHtgB,MAAO8b,GACP6D,cAAe3D,GACfuE,WAAY,CAAEC,MAAO,OAAQC,KAAM,iBAG3C3gB,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CACbxH,MAAOC,GAAOma,aACd1S,QAAS2Q,GACTgC,SAAUxE,GAAQ5e,UAElBuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOqa,iBAAiBrjB,SAAE4e,GAAU,aAAe,eAIhF,CAEA,IAAM5V,GAASY,EAAAA,QAAWC,OAAO,CAC7ByF,UAAW,CACPJ,KAAM,EACNyF,QAAS,GACTrC,gBAAiB,QAErBsP,QAAS,CACL3P,SAAU,GACVC,WAAY,OACZC,aAAc,GACd7B,MAAO,WAEXqR,eAAgB,CACZxP,aAAc,IAElB0P,kBAAmB,CACfvP,gBAAiB,UACjBqC,QAAS,GACTlC,aAAc,EACdT,WAAY,SACZsR,OAAQ,GAEZxB,iBAAkB,CACdxR,MAAO,QACP4B,WAAY,QAEhB5N,MAAO,CACH8F,MAAO,IACPC,OAAQ,IACR8I,YAAa,GACbV,aAAc,GAElBwP,eAAgB,CACZ9P,aAAc,IAElB+P,MAAO,CACHjQ,SAAU,GACVC,WAAY,OACZC,aAAc,EACd7B,MAAO,WAEXkS,MAAO,CACHzP,YAAa,EACbD,YAAa,OACbL,aAAc,EACdkC,QAAS,IAEb8N,eAAgB,CACZc,UAAW,IACXC,kBAAmB,OAEvBb,iBAAkB,CACd7Y,cAAe,MACfkI,WAAY,UAEhB4Q,cAAe,CACXtQ,gBAAiB,UACjBqC,QAAS,EACTlC,aAAc,GACdgR,iBAAkB,GAEtBZ,kBAAmB,CACfvS,MAAO,QACP2B,SAAU,IAEd6Q,aAAc,CACV7Q,SAAU,IAEdkR,aAAc,CACV7Q,gBAAiB,UACjBqC,QAAS,GACTlC,aAAc,EACdT,WAAY,UAEhBqR,iBAAkB,CACd/S,MAAO,QACP4B,WAAY,OACZD,SAAU,MAKZqQ,GAAqB1Y,EAAAA,QAAWC,OAAO,CACzC6Z,SAAU,CACN3Q,YAAa,EACbD,YAAa,OACbL,aAAc,EACdF,gBAAiB,GACjBC,kBAAmB,GACnBmR,aAAc,GACdxR,aAAc,IAElByR,aAAc,CACV7Q,YAAa,EACbD,YAAa,OACbL,aAAc,EACdF,gBAAiB,GACjBC,kBAAmB,GACnBmR,aAAc,GACdxR,aAAc,M,+SCxbtB,IAAM0R,GAAU,CAAC,YAAa,cAAe,YAAa,eAoWpD7a,GAASY,EAAAA,QAAWC,OAAO,CAC7Bia,oBAAqB,CACjB1Z,MAAO,OACP+H,aAAc,IAElB4R,aAAc,CACVpP,QAAS,GACTlC,aAAc,EACdrI,MAAO,OACP4H,WAAY,UAEhBgS,OAAQ,CACJrR,UAAW,IAEfjC,WAAY,CACRJ,MAAO,QACP8B,WAAY,kBAEhBR,gBAAiB,CACb9H,cAAe,MACfE,eAAgB,iBAEpBia,aAAc,CACV7Z,MAAO,IACPC,OAAQ,IACRoI,aAAc,GACdE,UAAW,IAEfuR,kBAAmB,CACfC,SAAU,GAEdC,eAAgB,CACZlV,KAAM,EACNlF,eAAgB,SAChBgI,WAAY,SACZM,gBAAiB,sBAErB+R,eAAgB,CACZja,MAAO,OAEXka,aAAc,CACV3P,QAAS,GACTlC,aAAc,GACdT,WAAY,SACZM,gBAAiB,eAErBiS,WAAY,CACRtS,SAAU,GACVC,WAAY,OACZC,aAAc,GACd7B,MAAO,QACP8B,WAAY,qBAEhBoQ,MAAO,CACHpY,MAAO,OACP2I,YAAa,EACbD,YAAa,QACbL,aAAc,GACdkC,QAAS,GACTxC,aAAc,GACdF,SAAU,GACVK,gBAAiB,cACjBhC,MAAO,QACP8B,WAAY,mBAEhBoS,YAAa,CACTlR,SAAU,WACVjB,IAAK,GACLoS,MAAO,GACPjR,OAAQ,GAEZkR,kBAAmB,CACf5a,cAAe,MACfkI,WAAY,SACZhI,eAAgB,SAChB2I,UAAW,IAEfgS,gBAAiB,CACbrU,MAAO,UACP8B,WAAY,kBAEhBwS,gBAAiB,CACbxa,MAAO,OACP+H,aAAc,IAElB+P,MAAO,CACHjQ,SAAU,GACVC,WAAY,OACZC,aAAc,EACd7B,MAAO,SAEXuU,aAAc,CACV/a,cAAe,MACfkI,WAAY,SACZhI,eAAgB,iBAGpB8a,YAAa,CACThb,cAAe,MACfkI,WAAY,SACZe,YAAa,GACbN,aAAc,EACdkC,QAAS,GACTxB,YAAa,IAEjB4R,oBAAqB,CACjBjS,YAAa,UACbL,aAAc,EACdM,YAAa,EACbT,gBAAiB,WAErB0S,gBAAiB,CACb1U,MAAO,QACP8B,WAAY,oBACZc,WAAY,IAEhB+R,wBAAyB,CACrB3U,MAAO,QACP4C,WAAY,GACZd,WAAY,qBAGhB8S,uBAAwB,CACpBlb,eAAgB,gBAChBmI,aAAc,IAGlBgT,sBAAuB,CACnBrb,cAAe,MACfiJ,YAAa,GACbN,aAAc,EACdkC,QAAS,GACTxC,aAAc,MAKtB,SA3e2B,SAAHpS,GAAgD,IAA1CqlB,EAASrlB,EAATqlB,UAAWC,EAAStlB,EAATslB,UAAW3a,EAAY3K,EAAZ2K,aACxCzK,EAAuBC,IAAvBD,mBACRqlB,EAAgCplB,IAAxB+C,EAASqiB,EAATriB,UAAWM,EAAQ+hB,EAAR/hB,SACnBpD,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA7BoE,EAAIlE,EAAA,GAAEklB,EAAOllB,EAAA,GACpBG,GAA0BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAA/Be,EAAKd,EAAA,GAAE2c,EAAQ3c,EAAA,GACtB4C,GAA4BjD,EAAAA,EAAAA,UAAS,IAAGkD,GAAAhD,EAAAA,EAAAA,SAAA+C,EAAA,GAAjCke,EAAMje,EAAA,GAAEkiB,EAASliB,EAAA,GACxBwH,GAA4B1K,EAAAA,EAAAA,UAAS,IAAG2K,GAAAzK,EAAAA,EAAAA,SAAAwK,EAAA,GAAjCzG,EAAM0G,EAAA,GAAE0a,EAAS1a,EAAA,GACxBE,GAAoC7K,EAAAA,EAAAA,UAAS,IAAG8K,GAAA5K,EAAAA,EAAAA,SAAA2K,EAAA,GAAzCvG,EAAUwG,EAAA,GAAEwa,EAAaxa,EAAA,GAChCG,GAA0BjL,EAAAA,EAAAA,UAAS,MAAKkL,GAAAhL,EAAAA,EAAAA,SAAA+K,EAAA,GAAjC/G,EAAKgH,EAAA,GAAEqa,EAAQra,EAAA,GACtBG,GAAgCrL,EAAAA,EAAAA,WAAS,GAAMsL,GAAApL,EAAAA,EAAAA,SAAAmL,EAAA,GAAxCE,EAASD,EAAA,GAAEmT,EAAUnT,EAAA,GAC5BG,GAAsCzL,EAAAA,EAAAA,UAAS,IAAG0L,GAAAxL,EAAAA,EAAAA,SAAAuL,EAAA,GAA9B+Z,GAAF9Z,EAAA,GAAgBA,EAAA,IAClCG,IAA4C7L,EAAAA,EAAAA,WAAS,GAAK8L,IAAA5L,EAAAA,EAAAA,SAAA2L,GAAA,GAAnC4Z,IAAF3Z,GAAA,GAAmBA,GAAA,IACxCwR,IAAwCtd,EAAAA,EAAAA,UAAS,IAAGwd,IAAAtd,EAAAA,EAAAA,SAAAod,GAAA,GAA7CoI,GAAYlI,GAAA,GAAEmI,GAAenI,GAAA,GAC9BoI,GAAqB,SAACC,GACxBR,EAAUQ,EACd,EAEMC,GAAyB,eAAAnlB,GAAAC,EAAAA,EAAAA,UAAG,YAC9B,IAEI,GAAe,mBADUmlB,GAASC,qCAA1BvY,OAIJ,YADA7L,QAAQD,MAAM,+BAGlB,IAAM+C,QAAiBqhB,GAASE,wBAAwB,CAAC,GACzDN,GAAgBjhB,EACpB,CAAE,MAAO/C,GACLC,QAAQD,MAAM,+BAAgCA,EAClD,CACJ,IAAC,kBAb8B,OAAAhB,EAAAI,MAAA,KAAAC,UAAA,KAezBklB,GAAuB,eAAAjkB,GAAArB,EAAAA,EAAAA,UAAG,UAAAM,GAAyC,IAAhCiD,EAAIjD,EAAJiD,KAAMgiB,EAAGjlB,EAAHilB,IAAKhlB,EAAKD,EAALC,MAAOilB,EAAMllB,EAANklB,OACvD,IACI,IAAMC,GAAYpM,EAAAA,EAAAA,KAAI9a,EAAI,gBAAiBgE,EAAS1B,YAC9C6kB,EAAUF,EAASG,EAAAA,UAAYC,EAAAA,aAC/BF,EAAQD,EAAW,CACrBzhB,GAAIzB,EAAS1B,WACb0C,KAAAA,EACAgiB,IAAAA,EACAhlB,MAAAA,EACAwD,MAAO9B,EAAUgB,WACjB4iB,WAAWC,EAAAA,EAAAA,qBAEf,IAAMznB,GAAOC,EAAAA,EAAAA,iBACPynB,EAAAA,EAAAA,eAAkB1nB,EAAK2nB,YAAa,CACtCC,YAAa1iB,EACb2iB,SAAUX,IAEdvkB,QAAQC,IAAI,mDAChB,CAAE,MAAOF,GACLC,QAAQD,MAAM,0BAA2BA,EAC7C,CACJ,IAAC,gBArB4Bb,GAAA,OAAAmB,EAAAlB,MAAA,KAAAC,UAAA,KAuBvB+lB,GAAyB,SAACC,GAC5B1B,EAAc0B,EAClB,EA8BMC,IA5BiB,eAAA/hB,GAAAtE,EAAAA,EAAAA,UAAG,YAGtB,IAAiC,WAFF+d,GAAYC,uCAEtBC,QAArB,CAKA,IAAMC,QAAqBH,GAAYI,wBAAwB,CAC3DC,WAAYL,GAAAA,iBAA6BM,OACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,IAGb,IAAKN,EAAaQ,UAAW,CACzB,IAAM4H,EAAmBpI,EAAaY,OAAO,GAAG7J,IAChD0P,EAAS2B,EACb,CAZA,MAFIxZ,MAAM,kDAed,GAnBuB,KA4BF4M,EAAAA,EAAAA,cAAW1Z,EAAAA,EAAAA,UAAC,YAC7B6d,GAAW,GACX,IACM2H,EAAoB,KAAXjF,EACf,IACI,GAAIjd,EAAO,CACP,IAQIic,EACJ,GAAoB,QAAhB9R,EAAAA,QAASC,GAAc,CACvB,IAAM6Y,QAAaxjB,MAAMO,GAAO5C,MAAK,SAAC8lB,GAAG,OAAKA,EAAID,MAAM,IACxDhH,EAAO,CACHtK,IAAK3R,EACLC,KAAO,GAAEtB,EAAUgB,kBACnBic,KAAM,aACNqH,KAAAA,EAER,MACIhH,EAAO,CACHtK,IAAK3R,EACLC,KAAO,GAAEtB,EAAUgB,kBACnBic,KAAM,cAGd,IAAMpc,QAAiB0c,GAAAA,KAAKC,IAAIF,EAxBhB,CACZG,UAAW,WACXC,OAAQ,aACRC,OAAQ,aACRC,UAAW,uBACXC,UAAW,2CACXC,oBAAqB,MAmBzB,GAAwB,MAApBjd,EAAS+J,OACT,MAAM,IAAImT,MAAM,gCAEPld,EAASyJ,KAAK2T,aAAapc,QAC5C,CACA,IAAM2iB,EAAcjB,EACb,GAAExiB,iBAA4Bud,IAC9B,GAAEvd,kBACHqJ,EAASmZ,EAAS,MAAQ,OAC1B1iB,QAAiBC,MAAM0jB,EAAa,CACtCpa,OAAAA,EACAC,QAAS,CACL,eAAgB,oBAEpBC,KAAMtH,KAAKI,UAAU,CACjB3B,WAAAA,EACAJ,MAAAA,EACAC,KAAAA,EACAhD,MAAAA,EACA8C,OAAAA,EACAG,YAAavB,EAAUgB,WACvBpC,WAAY0B,EAAS1B,WACrBiD,SAAUghB,OAIlB,GAAIhiB,EAASI,GAAI,OACcJ,EAASM,OACpCihB,IACAiB,GAAwB,CAAE/hB,KAAAA,EAAMgiB,IAAKjiB,EAAO/C,MAAAA,EAAOilB,OAAAA,IACnDvmB,EAAmB,CACfsE,KAAAA,EAAMD,MAAAA,EAAO/C,MAAAA,EACb8C,OAAAA,EAAQU,MAAOP,YACf3C,WAAY0B,EAAS1B,WACrB6C,WAAAA,EACAG,sBAAuB2hB,EAASjjB,EAASsB,sBAAwB,KACjEC,SAAUghB,KAEd9F,GAAAA,QAAMC,KAAK,CACPC,KAAM,UACNC,MAAO,UACPC,MAAO,8BAGf,MACIpe,QAAQD,MAAM,cAEtB,CAAE,MAAOA,GACLC,QAAQD,MAAM,qBAAsBA,GACpCie,GAAAA,QAAMC,KAAK,CACPC,KAAM,QACNC,MAAO,QACPC,MAAO,0BAEf,CAAC,QACGvB,GAAW,EACf,CACJ,IAAG,CAAC5b,EAAWsB,EAAMhD,EAAO8C,EAAQC,EAAOI,MAE3C9D,EAAAA,EAAAA,YAAU,WAEN,GADAslB,KACId,GAAa1a,EAAc,CAC3Bmb,IAAkB,GAClB,IAAMhiB,EAAgB,eAAA8B,GAAA3E,EAAAA,EAAAA,UAAG,YACrB,IACI,IAAM8C,QAAiBC,MAAO,GAAEC,+BAA0Cf,EAAUgB,cACpF,GAAIH,EAASI,GAAI,CACb,IAAMC,QAAiBL,EAASM,OAChCmhB,EAAQphB,EAASI,MAAQ,IACzB6Y,EAASjZ,EAAS5C,OAAS,IAC3BkkB,EAAUthB,EAASE,QAAU,IAC7BqhB,EAAcvhB,EAASO,YAAc,IACrC8gB,EAAUrhB,EAASM,KAAO,IAC1BohB,IAAkB,EACtB,MACI7jB,QAAQD,MAAM,+BAEtB,CAAE,MAAOA,GACLC,QAAQD,MAAM,+BAAgCA,GAC9C8jB,IAAkB,EACtB,CACJ,IAAC,kBAlBqB,OAAAlgB,EAAAxE,MAAA,KAAAC,UAAA,KAoBtByC,GACJ,CACJ,GAAG,CAACuhB,EAAWniB,IAGf,IAAMykB,GAAoB,CACtB1e,GAAO+a,aACP,CAAEzR,gBAAiB,UAAWiB,KAAM,IAGxC,OACIhR,EAAAA,EAAAA,KAAColB,GAAAA,QAAK,CAACC,QAASxC,EAAWyC,aAAa,EAAMC,cAAc,QAAO9nB,UAC/DuC,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAOC,GAAOob,eAAepkB,UAC/BuC,EAAAA,EAAAA,KAAC2L,EAAAA,eAAc,CACXC,OAAQ,CAAC,UAAW,WACpBpF,MAAOC,GAAOqb,eAAerkB,UAE7BoJ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOsb,aAAatkB,SAAA,CAC5B0K,IACGnI,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CACbxH,MAAOC,GAAOwb,YACd/T,QAAS4U,EAAUrlB,UAEnBuC,EAAAA,EAAAA,KAACwlB,GAAAA,QAAsB,CACnBxjB,KAAK,QACL8L,KAAM,GACNC,MAAM,aAIlB/N,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOub,WAAWvkB,SAAC,oBAChCoJ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAO0b,kBAAkB1kB,SAAA,EAClCuC,EAAAA,EAAAA,KAACwlB,GAAAA,QAAsB,CACnBxjB,KAAK,SACL8L,KAAM,GACNC,MAAM,UACNvH,MAAO,CAAEoK,YAAa,MAE1B5Q,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO2b,gBAAgB3kB,SAAC,oBAExCsE,IACG/B,EAAAA,EAAAA,KAACyT,GAAAA,QAAK,CACFpH,OAAQ,CAAEqH,IAAK3R,GACfyE,MAAOC,GAAOib,gBAGtB1hB,EAAAA,EAAAA,KAACggB,GAAAA,QAAS,CACNxZ,MAAOC,GAAOwZ,MACdxS,YAAY,OACZgY,qBAAsB,UACtBvlB,MAAO8B,EACPqL,aAAc,SAACC,GAAI,OAAK0V,EAAQ1V,EAAK,KAEzCtN,EAAAA,EAAAA,KAACggB,GAAAA,QAAS,CACNxZ,MAAOC,GAAOwZ,MACdxS,YAAY,QACZgY,qBAAsB,UACtBvlB,MAAOlB,EACPqO,aAnLE,SAACC,GACvBuN,EAASvN,GACT,IAAMmK,EAAQnK,EAAKzH,MAAM,KAAK,GACxB6f,EAAkBpE,GAAQqE,QAAO,SAACC,GAAM,OAAKA,EAAOC,SAASpO,EAAM,IACzE4L,EAAeqC,EACnB,KAgLoB7e,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAO4b,gBAAgB5kB,SAAA,EAChCuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOkZ,MAAMliB,SAAC,YAC3BoJ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAO6b,aAAa7kB,SAAA,EAC7BoJ,EAAAA,EAAAA,MAACmH,EAAAA,QAAgB,CACbE,QAAS,kBAAMuV,GAAmB,OAAO,EACzCjd,MAAO,CACHC,GAAO8b,YACI,SAAXzgB,EAAoB2E,GAAO+b,oBAAsB,MACnD/kB,SAAA,EAEFuC,EAAAA,EAAAA,KAACyT,GAAAA,QAAK,CACFpH,OAAQyZ,GACRtf,MAAO,CAAEqB,MAAO,GAAIC,OAAQ,OAEhC9H,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAkB,SAAX1E,EAAoB2E,GAAOic,wBAA0Bjc,GAAOgc,gBAAgBhlB,SAAC,aAE9FoJ,EAAAA,EAAAA,MAACmH,EAAAA,QAAgB,CACbE,QAAS,kBAAMuV,GAAmB,SAAS,EAC3Cjd,MAAO,CACHC,GAAO8b,YACI,WAAXzgB,EAAsB2E,GAAO+b,oBAAsB,MACrD/kB,SAAA,EAEFuC,EAAAA,EAAAA,KAACyT,GAAAA,QAAK,CACFpH,OAAQ0Z,GACRvf,MAAO,CAAEqB,MAAO,GAAIC,OAAQ,OAEhC9H,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAkB,WAAX1E,EAAsB2E,GAAOic,wBAA0Bjc,GAAOgc,gBAAgBhlB,SAAC,qBAIxGoJ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAO8a,oBAAoB9jB,SAAA,EACpCuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOkZ,MAAMliB,SAAC,UAC3BoJ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOkc,uBAAuBllB,SAAA,EACvCoJ,EAAAA,EAAAA,MAACmH,EAAAA,QAAgB,CACbE,QAAS,kBAAM0W,GAAuB,UAAU,EAChDpe,MAAO,CACHC,GAAOmc,sBACQ,YAAfzgB,EAA2BsE,GAAO+b,oBAAsB,MAC1D/kB,SAAA,EAEFuC,EAAAA,EAAAA,KAACyT,GAAAA,QAAK,CACFpH,OAAQ2Z,GACRxf,MAAO,CAAEqB,MAAO,GAAIC,OAAQ,OAEhC9H,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAsB,YAAfrE,EAA2BsE,GAAOic,wBAA0Bjc,GAAOgc,gBAAgBhlB,SAAC,gBAErGoJ,EAAAA,EAAAA,MAACmH,EAAAA,QAAgB,CACbE,QAAS,kBAAM0W,GAAuB,eAAe,EACrDpe,MAAO,CACHC,GAAOmc,sBACQ,iBAAfzgB,EAAgCsE,GAAO+b,oBAAsB,MAC/D/kB,SAAA,EAEFuC,EAAAA,EAAAA,KAACyT,GAAAA,QAAK,CACFpH,OAAQ4Z,GACRzf,MAAO,CAAEqB,MAAO,GAAIC,OAAQ,OAEhC9H,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAsB,iBAAfrE,EAAgCsE,GAAOic,wBAA0Bjc,GAAOgc,gBAAgBhlB,SAAC,6BAE1GoJ,EAAAA,EAAAA,MAACmH,EAAAA,QAAgB,CACbE,QAAS,kBAAM0W,GAAuB,SAAS,EAC/Cpe,MAAO,CACHC,GAAOmc,sBACQ,WAAfzgB,EAA0BsE,GAAO+b,oBAAsB,MACzD/kB,SAAA,EAEFuC,EAAAA,EAAAA,KAACyT,GAAAA,QAAK,CACFpH,OAAQ6Z,GACR1f,MAAO,CAAEqB,MAAO,GAAIC,OAAQ,OAEhC9H,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAsB,WAAfrE,EAA0BsE,GAAOic,wBAA0Bjc,GAAOgc,gBAAgBhlB,SAAC,oBAI3G2L,GACGpJ,EAAAA,EAAAA,KAACK,EAAAA,QAAiB,CAACyN,KAAK,QAAQC,MAAM,UAAUvH,MAAOC,GAAOgb,UAE9DzhB,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAOC,GAAO4I,gBAAgB5R,UAChCuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CACbxH,MAAO2e,GACPjX,QAAS4W,GAAarnB,UAEtBuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO0H,WAAW1Q,SAAC,qBASpE,E,+nBCzXA,SAT2B,SAAC0oB,EAAOC,GACjC,IAAMC,EAAQxiB,GAAA,GAAQsiB,UACfE,EAASD,GAEhB,IAAAE,EAAmB3U,OAAO4U,QAAQF,GAAUG,OAAMC,GAAA1oB,EAAAA,EAAAA,SAAAuoB,EAAA,GAElD,OAAAziB,GAAA,CAASpB,GAFAgkB,EAAA,IAAMA,EAAA,GAGjB,ECCA,SARmB,SAACC,EAAKC,GACrB,OAAID,EAAMC,EACCD,EAAMC,EAENA,EAAMD,CAErB,ECMA,IA4EMjgB,GAASY,EAAAA,QAAWC,OAAO,CAC/Bsf,WAAY,CACVvQ,YAAa,OACbC,aAAc,CACZzO,MAAO,EACPC,OAAQ,GAEVyO,cAAe,GACfC,aAAc,KACdJ,UAAW,KAKf,SA1FgB,SAAH5Y,GAA0B,IAyBjCoD,EAzBaimB,EAAYrpB,EAAZqpB,aACX1V,GAAaC,EAAAA,GAAAA,iBACXpQ,EAAarD,IAAbqD,SACRpD,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA3CkpB,EAAWhpB,EAAA,GAAEipB,EAAcjpB,EAAA,GAClCG,GAA8CJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAArD+oB,EAAe9oB,EAAA,GAAE+oB,EAAkB/oB,EAAA,IAC1CG,EAAAA,EAAAA,YAAU,WACR4oB,EAAmBC,GAAmBL,EAAaV,MAAOnlB,EAAS1B,YACrE,GAAG,CAACunB,EAAc7lB,KAElB3C,EAAAA,EAAAA,YACE,WACM2oB,IACFG,EAAAA,GAAAA,aACE1P,EAAAA,GAAAA,QACEC,EAAAA,GAAAA,YAAW1a,EAAI,UACboqB,GAAWpmB,EAAS1B,WAAY0nB,EAAgBvkB,IAC9C,aACJ4kB,EAAAA,GAAAA,SAAQ,YAAa,UAEvB,SAACC,GAAQ,IAAAC,EAAAC,EAAA,OAAKT,EAA+B,OAAjBQ,EAACD,EAASzP,KAAK,KAAU,OAAR2P,EAAhBD,EAAkBnU,aAAF,EAAhBoU,EAA0Bpc,QAAQ,GAGrE,GACA,CAAC4b,EAAiBhqB,IAGhBgqB,IACFpmB,EAAcimB,EAAaV,MAAMa,EAAgBvkB,KASnD,OACEzC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CACfxH,MAAO,CACLihB,KAAG,iEACHhhB,GAAOmgB,YAET1Y,QAXwB,WAC1BiD,EAAWG,SAAS,iBAAkB,CACpC1Q,YAAAA,GAEJ,EAOiCnD,SAE5BupB,GACCngB,EAAAA,EAAAA,MAAAyI,EAAAA,SAAA,CAAA7R,SAAA,EACEuC,EAAAA,EAAAA,KAACyT,GAAAA,QAAK,CACJjN,MAAOihB,KAAG,+BACVpb,OAAQ,CACNqH,KACiB,MAAfsT,OAAe,EAAfA,EAAiBU,WACjB,8EAGN7gB,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAAA9I,SAAA,EACHuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOihB,KAAG,qBAAqBhqB,SACnB,MAAfupB,OAAe,EAAfA,EAAiBhlB,QAEpBhC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOihB,KAAG,cAAchqB,UAChB,MAAXqpB,OAAW,EAAXA,EAAaljB,QAAS,IACR,MAAXkjB,OAAW,EAAXA,EAAaa,UAAU,EAAG,KAAM,MAChCb,GAAe,mBAKzB9mB,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAOihB,KAAG,+BAA+BhqB,UAC7CuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOihB,KAAG,yBAAyBhqB,SAAC,kCAOpD,E,+NCvEA,IA2CMgJ,GAASY,EAAAA,QAAWC,OAAO,CAC/ByF,UAAW,CACTJ,KAAM,EACNlF,eAAgB,UAElB+X,WAAY,CACVjY,cAAe,MACfE,eAAgB,eAChB2K,QAAS,MAIb,SAvDiB,WACf,IAAAxU,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAnCgqB,EAAO9pB,EAAA,GAAE+pB,EAAU/pB,EAAA,GAClBkD,EAAarD,IAAbqD,SACR/C,GAA8BJ,EAAAA,EAAAA,WAAS,GAAKK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAArCoe,EAAOne,EAAA,GAAEoe,EAAUpe,EAAA,GAsB1B,OArBAG,EAAAA,EAAAA,YACE,kBACE8oB,EAAAA,GAAAA,aACE1P,EAAAA,GAAAA,QACEC,EAAAA,GAAAA,YAAW1a,EAAI,YACf8qB,EAAAA,GAAAA,OAAM,eAAgB,iBAAkB9mB,EAAS1B,cAEnD,SAACgoB,GAAQ,OACPO,EACEP,EAASzP,KAAK/S,KACZ,SAACgT,GAAG,O,6WAAAjU,CAAA,CACFpB,GAAIqV,EAAIrV,IACLqV,EAAI1E,OAAM,GAEfkJ,GAAW,IAEd,GACJ,GACH,CAACtb,IAGIqb,GACLrc,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAO,CAACC,GAAOsG,UAAWtG,GAAO+Y,YAAY/hB,UACjDuC,EAAAA,EAAAA,KAACK,EAAAA,QAAiB,CAACyN,KAAK,QAAQC,MAAM,cAEtC6Z,EAAQhkB,OAAS,GACnB5D,EAAAA,EAAAA,KAACqY,GAAAA,QAAQ,CACP7R,MAAOihB,KAAG,UACVrU,KAAMwU,EACNtP,aAAc,SAACtE,GAAI,OAAKA,EAAKvR,EAAE,EAC/B8V,WAAY,SAAA/a,GAAA,IAAGwW,EAAIxW,EAAJwW,KAAI,OAAOhU,EAAAA,EAAAA,KAAC+nB,GAAO,CAAClB,aAAc7S,GAAQ,KAG3DhU,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAOihB,KAAG,OAAOhqB,UACrBuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOihB,KAAG,uBAAuBhqB,SAAC,2CAG9C,E,uBCxCA,SAVa,YACQ2T,EAAAA,GAAAA,iBAEnB,OACEpR,EAAAA,EAAAA,KAACgoB,GAAAA,QAAY,CAAAvqB,UACXuC,EAAAA,EAAAA,KAACioB,GAAQ,KAGf,E,eCmIMxhB,GAASY,EAAAA,QAAWC,OAAO,CAC/B2F,OAAQ,CACNnF,OAAQ,GACRP,cAAe,MACfkI,WAAY,SACZQ,kBAAmB,GACnBxI,eAAgB,iBAElBygB,cAAe,CACb3gB,cAAe,MACfkI,WAAY,UAEd0Y,0BAA2B,CACzB5gB,cAAe,MACfoJ,WAAY,GACZlB,WAAY,UAEd2Y,SAAU,CACRzX,WAAY,GAEd0X,eAAgB,CACd5gB,eAAgB,SAChBgI,WAAY,YAEd6Y,WAAY,CACVlW,QAAS,IAEXmW,qBAAsB,CACpBxa,MAAO,OACP2B,SAAU,GACVG,WAAY,qBAEd2Y,UAAW,CACT7b,KAAM,EACNlF,eAAgB,WAChBgI,WAAY,UAEdgZ,cAAe,CACb5gB,MAAO,OACPC,OAAQ,MACRsK,QAAS,IAEXsW,YAAa,CACXnhB,cAAe,MACfE,eAAgB,gBAChBgI,WAAY,UAEdkZ,gBAAiB,CACf5a,MAAO,OACP2B,SAAU,GACVG,WAAY,qBAEd+Y,gBAAiB,CACfrhB,cAAe,MACfkI,WAAY,SACZM,gBAAiB,2BACjBG,aAAc,GACdkC,QAAS,GACThC,UAAW,IAEbyY,YAAa,CACXlc,KAAM,EACNoB,MAAO,OACP2B,SAAU,GACVG,WAAY,mBAEdiZ,UAAW,CACTnY,WAAY,IAEdoY,aAAc,CACZ3Y,UAAW,IAEb4Y,aAAc,CACZ5W,QAAS,GACTlC,aAAc,EACdH,gBAAiB,2BACjBK,UAAW,IAEb6Y,aAAc,CACZlb,MAAO,QAETmb,cAAe,CACb3hB,cAAe,MACfC,SAAU,OACVC,eAAgB,eAChB2I,UAAW,IAEb+Y,IAAK,CACHpZ,gBAAiB,2BACjBlI,MAAO,IACPC,OA5FY,GA6FZL,eAAgB,SAChBgI,WAAY,SACZS,aAAc,EACdN,aAAc,IAEhBwZ,QAAS,CACPrb,MAAO,OACP2B,SAAU,GACVoB,UAAW,SACXjB,WAAY,uBAIhB,SA/OqB,SAAHrS,GAA0D,IAApD2T,EAAU3T,EAAV2T,WAAYkY,EAAc7rB,EAAd6rB,eAAcC,EAAA9rB,EAAE+rB,SAAAA,OAAQ,IAAAD,GAAQA,EAClEzS,EAAyClZ,IAAjCD,EAAkBmZ,EAAlBnZ,mBACRE,GADoCiZ,EAAR2S,UACoB3rB,EAAAA,EAAAA,UAAS,OAAKC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAvD6rB,EAAgB3rB,EAAA,GAAE4rB,EAAmB5rB,EAAA,GAC5CG,GAAqCJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAA1C0rB,EAAYzrB,EAAA,GAAE0rB,EAAY1rB,EAAA,GACjC4C,GAAwCjD,EAAAA,EAAAA,WAAS,GAAMkD,GAAAhD,EAAAA,EAAAA,SAAA+C,EAAA,GAAhD+oB,EAAY9oB,EAAA,GAAE+oB,EAAe/oB,EAAA,GACpCwH,GAAsC1K,EAAAA,EAAAA,UAAS,IAAG2K,GAAAzK,EAAAA,EAAAA,SAAAwK,EAAA,GAA3CwhB,EAAWvhB,EAAA,GAAEwhB,EAAcxhB,EAAA,GAClCE,GAAoD7K,EAAAA,EAAAA,UAAS,IAAG8K,GAAA5K,EAAAA,EAAAA,SAAA2K,EAAA,GAAzDuhB,EAAkBthB,EAAA,GAAEuhB,EAAqBvhB,EAAA,GAChDG,GAAwCjL,EAAAA,EAAAA,UAAS,IAAGkL,GAAAhL,EAAAA,EAAAA,SAAA+K,EAAA,GAA7CqhB,EAAYphB,EAAA,GAAEqhB,EAAerhB,EAAA,IAEpC1K,EAAAA,EAAAA,YAAU,WACR,IAAMgsB,EAAc,eAAA7rB,GAAAC,EAAAA,EAAAA,UAAG,YACrB,IACE,IACA6rB,SADuBrL,EAAAA,QAAMrX,IAAK,GAAEnG,2BACA2R,KAA5BmX,UACFC,QADW,IAAAF,EAAG,GAAEA,GACaxlB,KAAI,SAAAvC,GAAQ,MAAK,CAClDod,MAAOpd,EACPrC,MAAOqC,EACR,IACDqnB,EAAaY,GACbJ,EAAgBI,EAAiBC,MAAM,EAAG,IAC5C,CAAE,MAAOjrB,GACPC,QAAQD,MAAM,yCAA0CA,EAC1D,CACF,IAAC,kBAbmB,OAAAhB,EAAAI,MAAA,KAAAC,UAAA,KAepBwrB,GACF,GAAG,IAEH,IAaMK,EAAiB,SAACnoB,IACtBgL,EAAAA,EAAAA,UAASrQ,EAAW,mBAAoBqF,GACxCmnB,EAAoBnnB,GACpBunB,GAAgB,GAChBE,EAAe,IACfE,EAAsB,IACtBxsB,EAAmB6E,EACrB,EAQMooB,EAAY,SAAC3W,GAAI,OACrBhU,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACxH,MAAOC,GAAO0iB,IAAKjb,QAAS,kBAAMwc,EAAe1W,EAAK,EAACvW,UACvEuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO2iB,QAAQ3rB,SAAEuW,EAAK2L,SAClB,EAGrB,OACE9Y,EAAAA,EAAAA,MAACmhB,GAAAA,aAAY,CAAC4C,MAAO,CAAC,OAAQpkB,MAAO,CAAEmG,KAAM,EAAGoD,gBAAiB,eAAgBtS,SAAA,EAC/EoJ,EAAAA,EAAAA,MAAC8E,EAAAA,eAAc,CAACC,OAAQ,CAAC,UAAW,WAAYpF,MAAOC,GAAOwG,OAAOxP,SAAA,EACnEoJ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOyhB,cAAczqB,SAAA,CAC/B8rB,IACCvpB,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACE,QAAS,kBAAMiD,EAAWgO,QAAQ,EAAE3Y,MAAOC,GAAO6hB,WAAW7qB,UAC7EuC,EAAAA,EAAAA,KAAC6qB,EAAAA,QAAI,CAAC7oB,KAAK,aAAa8L,KAAM,GAAIC,MAAM,YAG5ClH,EAAAA,EAAAA,MAACmH,EAAAA,QAAgB,CAACxH,MAAOC,GAAO0hB,0BAA2Bja,QAAS,kBAAM4b,GAAgB,EAAK,EAACrsB,SAAA,EAC9FuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO8hB,qBAAqB9qB,SACtCgsB,EAAmBA,EAAiB9J,MAAQ,qBAE/C3f,EAAAA,EAAAA,KAAC6qB,EAAAA,QAAI,CAAC7oB,KAAK,eAAe8L,KAAM,GAAIC,MAAM,OAAOvH,MAAOC,GAAO2hB,kBAGnEpoB,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACE,QAASmb,EAAgB7iB,MAAOC,GAAO6hB,WAAW7qB,UAClEuC,EAAAA,EAAAA,KAAC6qB,EAAAA,QAAI,CAAC7oB,KAAK,WAAW8L,KAAM,GAAIC,MAAM,eAK1C/N,EAAAA,EAAAA,KAAColB,GAAAA,QAAK,CACJG,cAAc,QACdD,aAAa,EACbD,QAASwE,EACTiB,eAAgB,kBAAMhB,GAAgB,EAAM,EAACrsB,UAE7CuC,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAOC,GAAO+hB,UAAU/qB,UAC5BoJ,EAAAA,EAAAA,MAAC8E,EAAAA,eAAc,CAACC,OAAQ,CAAC,UAAW,WAAYpF,MAAOC,GAAOgiB,cAAchrB,SAAA,EAC1EoJ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOiiB,YAAYjrB,SAAA,EAC9BuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOkiB,gBAAgBlrB,SAAC,qBACrCuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACE,QAAS,kBAAM4b,GAAgB,EAAM,EAACrsB,UACtDuC,EAAAA,EAAAA,KAAC6qB,EAAAA,QAAI,CAAC7oB,KAAK,QAAQ8L,KAAM,GAAIC,MAAM,eAGvClH,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOmiB,gBAAgBnrB,SAAA,EAClCuC,EAAAA,EAAAA,KAACggB,GAAAA,QAAS,CACRxZ,MAAOC,GAAOoiB,YACdpb,YAAY,kBACZgY,qBAAqB,OAErBvlB,MAAO6pB,EACP1c,aA7EO,SAACoK,GACpBuS,EAAevS,GACf,IAAMsT,EAAoBpB,EAAahE,QAAO,SAACpjB,GAAQ,OACrDA,EAASod,MAAMqL,cAAcnF,SAASpO,EAAMuT,cAAc,IAE5Dd,EAAsBa,EACxB,IAyEahB,EAAYnmB,OAAS,IACpB5D,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACxH,MAAOC,GAAOqiB,UAAW5a,QAxErC,WAClB8b,EAAe,IACfE,EAAsB,GACxB,EAqE8EzsB,UAC9DuC,EAAAA,EAAAA,KAAC6qB,EAAAA,QAAI,CAAC7oB,KAAK,eAAe8L,KAAM,GAAIC,MAAM,eAIhD/N,EAAAA,EAAAA,KAAC6M,EAAAA,QAAU,CAAC4S,gCAAgC,EAAO3S,sBAAuBrG,GAAOyiB,cAAczrB,SAC5FssB,EAAYnmB,OAAS,EAClBqmB,EAAmBnlB,KAAI,SAACvC,EAAUqE,GAAK,OACvC5G,EAAAA,EAAAA,KAACoH,EAAAA,SAAc,CAAA3J,SACZktB,EAAUpoB,IADQqE,EAEJ,IAEjBujB,EAAarlB,KAAI,SAACvC,EAAUqE,GAAK,OACjC5G,EAAAA,EAAAA,KAACoH,EAAAA,SAAc,CAAA3J,SACZktB,EAAUpoB,IADQqE,EAEJ,eAQnC,EC/HA,IAAMqkB,IAAMC,EAAAA,GAAAA,WAgMNzkB,GAASY,EAAAA,QAAWC,OAAO,CAC7ByF,UAAW,CACPJ,KAAM,GAEVM,OAAQ,CACJ1F,cAAe,MACfE,eAAgB,WAChB2K,QAAS,IAEb+Y,OAAQ,CACJpb,gBAAiB,QACjBqb,eAAgB,EAChBhV,UAAW,GAEfiV,UAAW,CACPtb,gBAAiB,UACjBlI,MAAO,GACPC,OAAQ,GACRoI,aAAc,GACdT,WAAY,SACZhI,eAAgB,SAChBsZ,OAAQ,GACR3K,UAAW,GAEfkV,cAAe,CACXvd,MAAO,QACP2B,SAAU,GACVC,WAAY,QAEhB4b,kBAAmB,CACf5e,KAAM,EACNoD,gBAAiB,qBACjBtI,eAAgB,SAChBgI,WAAY,UAEhB+b,eAAgB,CACZzb,gBAAiB,OACjBqC,QAAS,GACTlC,aAAc,EACdM,YAAa,EACbD,YAAa,QAEjBkb,cAAe,CACXzb,gBAAiB,EACjBC,kBAAmB,IAEvByb,kBAAmB,CACfhc,SAAU,GACVC,WAAY,OACZ5B,MAAO,aAIf,SAnPyB,WACrB,IAAMoD,GAAaC,EAAAA,GAAAA,iBACnByF,EAAgDlZ,IAAxCmF,EAAM+T,EAAN/T,OAAQpC,EAASmW,EAATnW,UAAWY,EAAgBuV,EAAhBvV,iBACnBzB,EAAWS,IAAXT,OACR8rB,EAA0CvkB,EAAAA,UAAe,GAAMwkB,GAAA7tB,EAAAA,EAAAA,SAAA4tB,EAAA,GAAxDE,EAAcD,EAAA,GAAE9B,EAAe8B,EAAA,GACtCE,EAAsD1kB,EAAAA,UAAe,GAAM2kB,GAAAhuB,EAAAA,EAAAA,SAAA+tB,EAAA,GAApEE,EAAoBD,EAAA,GAAEE,EAAqBF,EAAA,GAClDnuB,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAhDuK,EAAYrK,EAAA,GAAEsK,EAAetK,EAAA,GACpCouB,EAA8C9kB,EAAAA,SAAe,CACzDpF,KAAM,GACNhD,MAAO,GACP8C,OAAQ,GACRU,MAAO,KACT2pB,GAAApuB,EAAAA,EAAAA,SAAAmuB,EAAA,GALKE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAMpCG,EAAc,WAChBnb,EAAWG,SAAS,WACpBwY,GAAgB,EACpB,GAuCAzrB,EAAAA,EAAAA,YAAU,WACNoM,GACJ,GAAG,IAEH,IAAMA,EAAqB,eAAAjN,GAAAiB,EAAAA,EAAAA,UAAG,YAC1B,IAAMiM,QAA2BlJ,MAAO,GAAEC,sBAAiCf,EAAUgB,cAC/EiJ,QAAuBD,EAAmB7I,OAC5C8I,EAAeC,QACftJ,IAEJ2qB,GAAuBthB,EAAeC,QACtCxC,EAAgBuC,EAAeC,OACnC,IAAC,kBAR0B,OAAApN,EAAAoB,MAAA,KAAAC,UAAA,KAUrB0tB,EAAc,WAChBzC,GAAiB+B,GACbG,GACAC,GAAsB,EAE9B,EAGMO,EAAsB,WACxB1C,GAAgB,GAOhBuC,EAN2B,CACvBrqB,KAAM,WACNhD,MAAO,sBACP8C,OAAQ,SAIZmqB,GAAsB,EAC1B,EAEMQ,EAAe,WACjB3pB,IACAjD,GACJ,EAOM6sB,EAAqB,WACvB,OACI1sB,EAAAA,EAAAA,KAAC2sB,GAAY,CACTC,YAAa,kBAAMzb,EAAWgO,QAAQ,EACtCkK,eAAgBkD,GAG5B,EACA,OACI1lB,EAAAA,EAAAA,MAAAyI,EAAAA,SAAA,CAAA7R,SAAA,EACIoJ,EAAAA,EAAAA,MAACokB,GAAItY,UAAS,CACVka,cAAe,CACXC,gBAAiB,UACjBC,kBAAmB,OACnBC,WAAW,EACXxmB,MAAOC,GAAO0kB,OACdpY,aAAa,GAEjBE,cAAe,SAAAzU,GAAQA,EAAL6b,MAAK,MAAQ,CAW3BpN,OAAQyf,EAEX,EAAEjvB,SAAA,EAEHuC,EAAAA,EAAAA,KAACirB,GAAIpY,OAAM,CACP7Q,KAAK,mBACLgR,UAAWia,GACXna,QAAS,CACLZ,MAAO,OACPgb,WAAY,SAAAnuB,GAAA,IAAGgP,EAAKhP,EAALgP,MAAOof,EAAOpuB,EAAPouB,QAAO,OACzBntB,EAAAA,EAAAA,KAACwlB,GAAAA,QAAsB,CACnBxjB,KAAMmrB,EAAU,OAAS,eACzBrf,KAAM,GACNC,MAAOA,GACT,MAId/N,EAAAA,EAAAA,KAACirB,GAAIpY,OAAM,CACP7Q,KAAK,eACLgR,UAAW4F,GACX9F,QAAS,CACLZ,MAAO,GACPgb,WAAY,SAAAptB,GAAQA,EAALiO,MAAH,IAAUof,EAAOrtB,EAAPqtB,QAAO,OACzBntB,EAAAA,EAAAA,KAACwlB,GAAAA,QAAsB,CACnBxjB,KAAgB,cAChB8L,KAAM,GACNC,MAAOof,EAAU,UAAY,WAC/B,MAIdntB,EAAAA,EAAAA,KAACirB,GAAIpY,OAAM,CACP7Q,KAAK,UACLgR,UAAWoa,GACXta,QAAS,CACLoa,WAAY,SAAAnqB,GAAA,IAAGgL,EAAKhL,EAALgL,MAAchL,EAAPoqB,QAAO,OACzBntB,EAAAA,EAAAA,KAACwlB,GAAAA,QAAsB,CACnBxjB,KAAgB,UAChB8L,KAAM,GACNC,MAAOA,GACT,SAvJtB/N,EAAAA,EAAAA,KAAColB,GAAAA,QAAK,CACFC,QAASwG,EACTvG,aAAa,EACbwF,eAAgB,WACZhB,GAAgB,GAChBmC,GAAsB,EAC1B,EAAExuB,UAEFuC,EAAAA,EAAAA,KAACqtB,GAAAA,QAAS,CACN7mB,MAAOC,GAAO8kB,kBACdrd,QAAS,WACL4b,GAAgB,GAChBmC,GAAsB,EAC1B,EAAExuB,UAEFoJ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAO+kB,eAAe/tB,SAAA,EAE/BuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CACbxH,MAAOC,GAAOglB,cACdvd,QAASse,EAAoB/uB,UAE7BuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOilB,kBAAkBjuB,SAAC,sBAE3CuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CACbxH,MAAOC,GAAOglB,cACdvd,QAASoe,EAAY7uB,UAErBuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOilB,kBAAkBjuB,SAAC,cAE3CuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACxH,MAAOC,GAAOglB,cAAevd,QAASue,EAAahvB,UACjEuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOilB,kBAAkBjuB,SAAC,oBA+HlDuuB,IAAyBhsB,EAAAA,EAAAA,KAACstB,GAAkB,CACzCzK,UAAWmJ,EACXlJ,UAnFqB,WAC7BmJ,GAAsB,GACtBxhB,GACJ,EAiFY2hB,gBAAiBA,EACjBjkB,aAAcA,EACdolB,gBAAiB,SAACC,GAEdnB,EAAmBmB,EACvB,MAKhB,E,8cCzM4B,SAAAC,IAAAxpB,EAAAA,EAAAA,SAAAypB,EAAAD,GAAA,IAAAvpB,EAAAC,GAAAupB,GAAA,SAAAA,IAAA,OAAAppB,EAAAA,EAAAA,SAAA,KAAAopB,GAAAxpB,EAAAtF,MAAA,KAAAC,UAAA,EAAAmH,EAAAA,EAAAA,SAAA0nB,EAAA,EAAAznB,IAAA,SAAA/F,MACxB,WACI,OACIF,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAAA9I,UACDuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAAArJ,SAAC,aAGlB,IAAC,CAPuB,CAASkwB,EAAAA,WAFG,I,WCwBlClnB,GAASY,EAAAA,QAAWC,OAAO,CAC7ByF,UAAW,CACPgD,gBAAiB,QACjBG,aAAc,GACdkC,QAAS,GACTxC,aAAc,GACdwG,UAAW,GAEfrU,MAAO,CACH8F,MAAO,OACPC,OAAQ,IACRoI,aAAc,GACdN,aAAc,IAElBsC,MAAO,CACHxC,SAAU,GACVC,WAAY,QAEhBpN,SAAU,CACNmN,SAAU,GACV3B,MAAO,OACP6B,aAAc,IAElBP,gBAAiB,CACb9H,cAAe,MACfE,eAAgB,iBAEpBwG,OAAQ,CACJtB,KAAM,EACNoD,gBAAiB,OACjBG,aAAc,EACdkC,QAAS,GACT3C,WAAY,SACZyR,iBAAkB,GAEtB/S,WAAY,CACRJ,MAAO,QACP4B,WAAY,UAIpB,SA9De,SAAHnS,GAA2C,IAArCya,EAAEza,EAAFya,GAAI2V,EAAMpwB,EAANowB,OAAQC,EAAQrwB,EAARqwB,SAAUC,EAAOtwB,EAAPswB,QACpC,OACIjnB,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOsG,UAAUtP,SAAA,EAC1BuC,EAAAA,EAAAA,KAACyT,GAAAA,QAAK,CAACpH,OAAQ,CAAEqH,IAAKuE,EAAGzC,OAAO,IAAMhP,MAAOC,GAAO1E,SACpD/B,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOyL,MAAMzU,SAAEwa,EAAGtC,WAC/B3V,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOlE,SAAS9E,SAAEwa,EAAG1V,YAClCsE,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAO4I,gBAAgB5R,SAAA,EAChCuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACxH,MAAOC,GAAOwH,OAAQC,QAAS,kBAAM0f,EAAO3V,EAAG,EAACxa,UAC9DuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO0H,WAAW1Q,SAAC,YAEpCuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACxH,MAAOC,GAAOwH,OAAQC,QAAS,kBAAM2f,EAAS5V,EAAG/V,IAAI,EAACzE,UACpEuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO0H,WAAW1Q,SAAC,cAEpCuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACxH,MAAOC,GAAOwH,OAAQC,QAAS,kBAAM4f,EAAQ7V,EAAG,EAACxa,UAC/DuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO0H,WAAW1Q,SAAC,iBAKpD,E,eC0IMgJ,GAASY,EAAAA,QAAWC,OAAO,CAC7ByF,UAAW,CACPJ,KAAM,EACNyF,QAAS,IAEbnF,OAAQ,CACJ1F,cAAe,MACfkI,WAAY,SACZG,aAAc,IAElBS,WAAY,CACRO,YAAa,GAEjBmd,WAAY,CACRre,SAAU,GACVC,WAAY,QAEhBkS,eAAgB,CACZ9R,gBAAiB,QACjBqC,QAAS,GACTlC,aAAc,IAElB+R,YAAa,CACTlR,SAAU,WACVjB,IAAK,GACLoS,MAAO,IAEX8L,gBAAiB,CACbjgB,MAAO,OACPkgB,mBAAoB,aAExBlsB,MAAO,CACH8F,MAAO,OACPC,OAAQ,IACRoI,aAAc,GACdN,aAAc,IAElBse,4BAA6B,CACzBne,gBAAiB,QACjBqC,QAAS,GACTlC,aAAc,IAElBie,uBAAwB,CACpBze,SAAU,GACVE,aAAc,IAElBwe,0BAA2B,CACvB7mB,cAAe,MACfE,eAAgB,YAEpB4mB,aAAc,CACVzd,YAAa,IAEjB0d,iBAAkB,CACdvgB,MAAO,OACPkgB,mBAAoB,aAExBM,cAAe,CACXxe,gBAAiB,MACjBC,gBAAiB,EACjBC,kBAAmB,GACnBC,aAAc,GAElBse,kBAAmB,CACfzgB,MAAO,WAIf,SA5NgB,WACZ,IAAQnN,EAAgBjD,IAAhBiD,YACRhD,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAnC6wB,EAAO3wB,EAAA,GAAE4wB,EAAU5wB,EAAA,GAC1BG,GAAoCJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAA3C0wB,EAAUzwB,EAAA,GAAE0wB,EAAa1wB,EAAA,GAChC4C,GAA0CjD,EAAAA,EAAAA,WAAS,GAAMkD,GAAAhD,EAAAA,EAAAA,SAAA+C,EAAA,GAAlD+qB,EAAc9qB,EAAA,GAAE+oB,EAAe/oB,EAAA,GACtCwH,GAAkC1K,EAAAA,EAAAA,WAAS,GAAM2K,GAAAzK,EAAAA,EAAAA,SAAAwK,EAAA,GAA1Ca,EAASZ,EAAA,GAAEa,EAAYb,EAAA,GAC9BE,GAAoE7K,EAAAA,EAAAA,WAAS,GAAM8K,GAAA5K,EAAAA,EAAAA,SAAA2K,EAAA,GAA5EmmB,EAA2BlmB,EAAA,GAAEmmB,EAA4BnmB,EAAA,GAC1DwI,GAAaC,EAAAA,GAAAA,iBACnBtI,GAAoCjL,EAAAA,EAAAA,WAAS,GAAMkL,GAAAhL,EAAAA,EAAAA,SAAA+K,EAAA,GAA5CoO,EAAUnO,EAAA,GAAEoO,EAAapO,EAAA,IAEhC1K,EAAAA,EAAAA,YAAU,WAEN,IAAM0wB,EAAY,eAAAvxB,GAAAiB,EAAAA,EAAAA,UAAG,YACjB,IACI,IAAM8C,QAAiBC,MAAO,GAAEC,mBAA8Bb,EAAYsB,OAC1E,GAAIX,EAASI,GAAI,CACb,IAAMyR,QAAa7R,EAASM,OAC5B6sB,EAAWtb,EACf,MACI3T,QAAQD,MAAM,2BAEtB,CAAE,MAAOA,GACLC,QAAQD,MAAM,2BAA4BA,EAC9C,CACJ,IAAC,kBAZiB,OAAAhC,EAAAoB,MAAA,KAAAC,UAAA,KAclBkwB,GACJ,GAAG,IAEH,IAAMC,EAAa,SAAC/W,GAChB9G,EAAWG,SAAS,SAAU,CAAE2G,GAAAA,GACpC,EAEMgX,EAAY,eAAAzwB,GAAAC,EAAAA,EAAAA,UAAG,UAAOywB,GACxB7lB,GAAa,GAEb,WAE2B7H,MAAO,GAAEC,qBAAgCytB,IAAQ,CACpEpkB,OAAQ,YAGCnJ,GAET+sB,GAAW,SAACS,GAAO,OAAKA,EAAQxJ,QAAO,SAAC1N,GAAE,OAAKA,EAAG/V,MAAQgtB,CAAI,GAAC,IAE/DzvB,QAAQD,MAAM,sBAEtB,CAAE,MAAOA,GACLC,QAAQD,MAAM,qBAAsBA,EACxC,CAAC,QAEG6J,GAAa,GAEbylB,GAA6B,EACjC,CACJ,IAAC,gBAvBiBnwB,GAAA,OAAAH,EAAAI,MAAA,KAAAC,UAAA,KAyBZuwB,EAAc,SAACnX,GAErB,EAaMC,GAAYC,EAAAA,EAAAA,cAAW1Z,EAAAA,EAAAA,UAAC,YAC1B0Y,GAAc,GAEd,IAEI,IAAM5V,QAAiBC,MAAO,GAAEC,mBAA8Bb,EAAYsB,OAC1E,GAAIX,EAASI,GAAI,CACb,IAAMyR,QAAa7R,EAASM,OAC5B6sB,EAAWtb,EACf,MACI3T,QAAQD,MAAM,2BAEtB,CAAE,MAAOA,GACLC,QAAQD,MAAM,2BAA4BA,EAC9C,CAAC,QACG2X,GAAc,EAClB,CACJ,IAAG,IAGH,OACItQ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOsG,UAAUtP,SAAA,EAC1BoJ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOwG,OAAOxP,SAAA,EAEvBuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACE,QAAS,kBAAMiD,EAAWgO,QAAQ,EAAE3Y,MAAOC,GAAO4J,WAAW5S,UAC3EuC,EAAAA,EAAAA,KAACqvB,GAAAA,QAAW,CAACrtB,KAAK,aAAa8L,KAAM,GAAIC,MAAM,aAEnD/N,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOsnB,WAAWtwB,SAAC,iBAEpCuC,EAAAA,EAAAA,KAACqY,GAAAA,QAAQ,CACLjF,KAAMqb,EACNnW,aAAc,SAACtE,GAAI,OAAKA,EAAK9R,GAAG,EAChCqW,WAAY,SAAAzY,GAAA,IAAGkU,EAAIlU,EAAJkU,KAAI,OACfhU,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACE,QAAS,WA1CvC4b,GAAiB+B,EA0C6C,EAACpuB,UAC/CuC,EAAAA,EAAAA,KAACsvB,GAAM,CAACrX,GAAIjE,EAAM4Z,OAAQoB,EAAYnB,SAAU,kBAtChEe,EAsCqF5a,QArCrF8a,GAA6B,EAqC6D,EAAEhB,QAASsB,KACtE,EAEvB3W,gBACIzY,EAAAA,EAAAA,KAAC0Y,GAAAA,QAAc,CAACxB,WAAYA,EAAYgB,UAAWA,OAG3DlY,EAAAA,EAAAA,KAAColB,GAAAA,QAAK,CAACvC,UAAWgJ,EAAepuB,UAC7BoJ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOob,eAAepkB,SAAA,EAC/BuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACE,QAAS,kBAAM4b,GAAgB,EAAM,EAAEtjB,MAAOC,GAAOwb,YAAYxkB,UAC/EuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOunB,gBAAgBvwB,SAAC,YAGxCkxB,IACG9nB,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAAA9I,SAAA,EACDuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAAArJ,SAAEkxB,EAAWhZ,WAClB3V,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAAArJ,SAAEkxB,EAAWpsB,YAClBvC,EAAAA,EAAAA,KAACyT,GAAAA,QAAK,CAACpH,OAAQ,CAAEqH,IAAKib,EAAWnZ,OAAO,IAAMhP,MAAOC,GAAO1E,iBAO5E/B,EAAAA,EAAAA,KAAColB,GAAAA,QAAK,CAACvC,UAAWgM,EAA4BpxB,UAC1CoJ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOynB,4BAA4BzwB,SAAA,EAC5CuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO0nB,uBAAuB1wB,SAAC,8CAC5CoJ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAO2nB,0BAA0B3wB,SAAA,EAC1CuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACE,QAAS,kBAAM4gB,GAA6B,EAAM,EAAEtoB,MAAOC,GAAO4nB,aAAa5wB,UAC7FuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO6nB,iBAAiB7wB,SAAC,aAEzC2L,GACGpJ,EAAAA,EAAAA,KAACK,EAAAA,QAAiB,CAACyN,KAAK,QAAQC,MAAM,UAEtC/N,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACE,QAAS,kBAAM+gB,EAAaN,EAAWzsB,IAAI,EAAEsE,MAAOC,GAAO8nB,cAAc9wB,UACvFuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO+nB,kBAAkB/wB,SAAC,uBAQvE,E,+NCpJA,IAAM8xB,GAAmB,CACrB,CAAEtpB,IAAK,cAAe0Z,MAAO,YAAa6P,KAAM,eAChD,CAAEvpB,IAAK,sBAAuB0Z,MAAO,oBAAqB6P,KAAM,iBAChE,CAAEvpB,IAAK,aAAc0Z,MAAO,YAAa6P,KAAM,gBAC/C,CAAEvpB,IAAK,qBAAsB0Z,MAAO,oBAAqB6P,KAAM,mBAmH7D/oB,GAASY,EAAAA,QAAWC,OAAO,CAC7BmoB,cAAe,CACX9iB,KAAM,EACNoD,gBAAiB,UACjBF,WAAY,qBAEhB9C,UAAW,CACPJ,KAAM,GAEV+iB,O,6WAAM7rB,CAAA,CACFunB,eAAgB,EAChB7a,YAAa,UACbR,gBAAiB,OACjBtI,eAAgB,gBAChBgI,WAAY,SACZsB,SAAU,WACVgQ,OAAQ,EACR/P,KAAM,EACNkR,MAAO,EACPjR,OAAQ,GACRmB,QAAS,GACT7K,cAAe,OACK,QAAhB2E,EAAAA,QAASC,GAAe,CACxB4E,SAAU,QACVgQ,OAAQ,EACR/P,KAAM,EACNkR,MAAO,GACP,CACAnR,SAAU,WACVgQ,OAAQ,EACR/P,KAAM,EACNkR,MAAO,IAGfjV,OAAQ,CACJ1F,cAAe,MACfE,eAAgB,gBAChB2K,QAAS,GACT3C,WAAY,SACZkgB,kBAAmB,EACnBC,kBAAmB,WAEvBJ,KAAM,CACF3nB,MAAO,GACPC,OAAQ,IAEZuI,WAAY,CACRX,SAAU,GACV3B,MAAO,WAEX8hB,WAAY,CACRhoB,MAAO,OACPC,OAAQ,IACR4I,WAAY,SAEhBof,UAAW,CACPpgB,SAAU,GACVC,WAAY,OACZogB,eAAgB,EAChB7O,iBAAkB,GAClBnT,MAAO,UACP8B,WAAY,kBAEhBtN,SAAU,CACNmN,SAAU,GACV3B,MAAO,UACP6B,aAAc,EACde,WAAY,GACZd,WAAY,qBAEhBmgB,eAAgB,CACZzoB,cAAe,MACfwI,gBAAiB,UACjBqC,QAAS,GACT8O,iBAAkB,GAClB6O,eAAgB,EAChB7f,aAAc,GAElB+f,UAAW,CACPliB,MAAO,OACP4B,WAAY,MACZE,WAAY,qBAEhBqgB,YAAa,CACThP,iBAAkB,GAClB6O,eAAgB,EAChBrgB,SAAU,GACV3B,MAAO,UACP8B,WAAY,qBAEhBsgB,UAAW,CACPtoB,MAAO,GACPC,OAAQ,GACRoI,aAAc,GACdgG,OAAQ,GACR1F,YAAa,EACbD,YAAa,WAEjB6f,SAAU,CACN1gB,SAAU,GACVC,WAAY,MACZgB,WAAY,GACZ5C,MAAO,WAEX+H,MAAO,CACHpG,SAAU,GACVC,WAAY,OACZuR,iBAAkB,GAClB6O,eAAgB,EAChBhiB,MAAO,WAEXsiB,oBAAqB,CACjBtgB,gBAAiB,UACjBqC,QAAS,GACT8O,iBAAkB,GAClB6O,eAAgB,EAChB7f,aAAc,EACdT,WAAY,UAEhB6gB,wBAAyB,CACrBviB,MAAO,OACP4B,WAAY,MACZD,SAAU,IAEd6gB,2BAA4B,CACxBxiB,MAAO,UACP+C,UAAW,SACXlB,aAAc,GACdF,SAAU,IAEd8gB,mBAAoB,CAChBpe,QAAS,GACTud,kBAAmB,EACnBC,kBAAmB,UACnB7f,gBAAiB,QAErB0gB,eAAgB,CACZ/gB,SAAU,GACVC,WAAY,OACZ5B,MAAO,UACP6B,aAAc,EACdC,WAAY,kBAEhB6gB,cAAe,CACXnpB,cAAe,MACfC,SAAU,OACViI,WAAY,cAEhBkhB,YAAa,CACTppB,cAAe,MACfkI,WAAY,SACZM,gBAAiB,UACjBG,aAAc,GACdkC,QAAS,EACTxB,YAAa,EACbhB,aAAc,GAElBghB,aAAc,CACVjgB,WAAY,EACZjB,SAAU,GACV3B,MAAO,UACP8B,WAAY,qBAEhBghB,eAAgB,CACZtpB,cAAe,MACfkI,WAAY,UAEhBqhB,cAAe,CACXphB,SAAU,GACVC,WAAY,OACZse,mBAAoB,eACpBrd,YAAa,GAEjBmgB,gBAAiB,CACbrhB,SAAU,GACVC,WAAY,QAEhBqhB,cAAe,CACXjhB,gBAAiB,UACjBqC,QAAS,GACTlC,aAAc,EACdT,WAAY,UAEhBwhB,kBAAmB,CACfljB,MAAO,OACP4B,WAAY,MACZD,SAAU,IAEdwhB,YAAa,CACT3pB,cAAe,MACfC,SAAU,OACVC,eAAgB,iBAEpB0pB,iBAAkB,CACdxkB,KAAM,EACNyF,QAAS,GACTrC,gBAAiB,WAErBmC,MAAO,CACHxC,SAAU,GACVE,aAAc,GACdC,WAAY,kBAEhBuhB,cAAe,CACX7pB,cAAe,MACfC,SAAU,OACVC,eAAgB,iBAEpB4pB,aAAc,CACVxpB,MAAO,MACP+H,aAAc,GACdwC,QAAS,GACTrC,gBAAiB,OACjBG,aAAc,EACdT,WAAY,UAEhB6hB,cAAe,CACXzpB,MAAO,GACPC,OAAQ,GACRoI,aAAc,GACdN,aAAc,IAElB2hB,aAAc,CACV7hB,SAAU,GACVC,WAAY,MACZE,WAAY,oBACZiB,UAAW,UAEf0gB,mBAAoB,CAChB9hB,SAAU,GACV3B,MAAO,OACP8B,WAAY,kBACZiB,UAAW,UAEf2gB,UAAW,CACP7gB,YAAa,EACbmQ,OAAQ,KAMhB,SAjWwB,SAAHvjB,GAAmB,IAAb6c,EAAK7c,EAAL6c,MACfrZ,EAAarD,IAAbqD,SACAiX,EAAOoC,EAAME,OAAbtC,GACFyZ,GAAkB,MAAFzZ,OAAE,EAAFA,EAAI0Z,YAAa,GACjCryB,EAAa2Y,EAAGja,KAAKsB,WACrB6R,GAAaC,EAAAA,GAAAA,iBACnBxT,GAAsCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA7CgD,EAAW9C,EAAA,GAAE+C,EAAc/C,EAAA,GAClCG,GAA8DJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAA7C2zB,GAAF1zB,EAAA,GAA4BA,EAAA,IACpD2zB,EAAwBvyB,KAAuB,MAAR0B,OAAQ,EAARA,EAAU1B,aAEvDjB,EAAAA,EAAAA,YAAU,WACN,IAAMiD,EAAgB,eAAA9C,GAAAC,EAAAA,EAAAA,UAAG,YACrB,IACI,IAAMqzB,QAAgBC,EAAAA,EAAAA,SAAOja,EAAAA,EAAAA,KAAI9a,EAAI,gBAAiBsC,IAClDwyB,EAAQlnB,WACR/J,EAAeixB,EAAQ1e,QACvBwe,GAA2B,GAEnC,CAAE,MAAOpyB,GACLC,QAAQD,MAAM,+BAAgCA,EAClD,CACJ,IAAC,kBAVqB,OAAAhB,EAAAI,MAAA,KAAAC,UAAA,KAYlBS,GACAgC,GAER,GAAG,CAAChC,IAYJ,OACIuH,EAAAA,EAAAA,MAACmhB,GAAAA,QAAY,CAACxhB,MAAOC,GAAOgpB,cAAchyB,SAAA,EAEtCuC,EAAAA,EAAAA,KAAC2L,EAAAA,eAAc,CAACC,OAAQ,CAAC,UAAW,WAAYpF,MAAOC,GAAOwG,OAAOxP,UACjEuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACE,QARL,WACrBiD,EAAWgO,QACf,EAMwD1hB,UACxCuC,EAAAA,EAAAA,KAACqO,EAAAA,QAAQ,CAACrM,KAAK,aAAa8L,KAAM,GAAIC,MAAM,eAMpDlH,EAAAA,EAAAA,MAACgG,EAAAA,QAAU,CAAApP,SAAA,EACPuC,EAAAA,EAAAA,KAACyT,GAAAA,QAAK,CAACpH,OAAQ,CAAEqH,IAAKuE,EAAGzC,OAAO,IAAMhP,MAAOC,GAAOopB,cACpD7vB,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOqpB,UAAUryB,SAAEwa,EAAGtC,WACnC3V,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOlE,SAAS9E,SAAEwa,EAAG1V,YAElCsE,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOupB,eAAevyB,SAAA,EAC/BuC,EAAAA,EAAAA,KAACqvB,GAAAA,QAAW,CAACrtB,KAAK,QAAQ8L,KAAM,GAAIC,MAAM,QAAQvH,MAAOC,GAAOgrB,aAEhEzxB,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOwpB,UAAUxyB,SAAC,4BAGnCuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOypB,YAAYzyB,SAAEwa,EAAGyC,iBACrC1a,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAOC,GAAO+pB,mBAAmB/yB,UAEnCuC,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAOC,GAAOiqB,cAAcjzB,SAC7B8xB,GAAiBzqB,KAAI,SAAAktB,GAClB,OAAI/Z,EAAG+Z,EAAQ/rB,MAEPY,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOkqB,YAAYlzB,SAAA,EAC5BuC,EAAAA,EAAAA,KAACqO,EAAAA,QAAQ,CAACrM,KAAMgwB,EAAQxC,KAAM1hB,KAAM,GAAIC,MAAM,WAC9C/N,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOmqB,aAAanzB,SAAEu0B,EAAQrS,UAFTqS,EAAQ/rB,KAM/C,IACX,QAIJyrB,EAAc9tB,OAAS,IACtBiD,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAO0qB,iBAAiB1zB,SAAA,EAClCuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOyL,MAAMzU,SAAC,eAC3BuC,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAOC,GAAO2qB,cAAc3zB,SAC7Bi0B,EAAc5sB,KAAI,SAACmtB,EAAUrrB,GAAK,OAC/BC,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAAaC,MAAOC,GAAO4qB,aAAa5zB,SAAA,EACzCuC,EAAAA,EAAAA,KAACyT,GAAAA,QAAK,CAACpH,OAAQ,CAAEqH,IAAKue,EAASlwB,OAASyE,MAAOC,GAAO6qB,iBACtDtxB,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO8qB,aAAa9zB,SAAEw0B,EAASjwB,QAC5ChC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO+qB,mBAAmB/zB,SAAEw0B,EAASC,eAH3CtrB,EAIJ,aAMzBirB,IACEhrB,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOipB,OAAOjyB,SAAA,EACvBuC,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAOC,GAAOoqB,eAAepzB,UAC/BoJ,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACN,MAAOC,GAAOsqB,gBAAgBtzB,SAAA,CAAC,SAAEwa,EAAGnC,MAAM,eAEpD9V,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACE,QAtEN,WACxBiD,EAAWG,SAAS,UAAW,CAC3B1Q,YAAAA,GAER,EAkEgE4F,MAAOC,GAAOuqB,cAAcvzB,UACxEuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOwqB,kBAAkBxzB,SAAC,0BAQ/D,E,2DCzHA00B,GAAAA,QAAQC,UAAUC,GAAAA,SAClB,IAAMC,GAAU,IAAIH,GAAAA,QAAQ,SAsBtB1rB,GAASY,EAAAA,QAAWC,OAAO,CAC/ByF,UAAW,CACTxF,cAAe,MACf2O,OAAQ,EACRzG,WAAY,YAEd1N,MAAO,CACL+F,OAAQ,GACRD,MAAO,GACPqI,aAAc,GACdU,YAAa,EACbL,YAAa,QACbC,YAAa,GAEf+hB,cAAe,CACbxiB,gBAAiB,UACjBG,aAAc,GACdkC,QAAS,GACTogB,SAAU,MACVnc,YAAa,OACbC,aAAc,CACZzO,MAAO,EACPC,OAAQ,GAEVyO,cAAe,IACfC,aAAc,KACdJ,UAAW,GAEbqc,YAAa,CACX1kB,MAAO,OACP2B,SAAU,IAEZ4U,UAAW,CACTvW,MAAO,OACP2B,SAAU,GACVU,UAAW,EACXsiB,UAAW,cAIf,SA5DwB,SAAHl1B,GAAqB,IAAf4N,EAAO5N,EAAP4N,QAGnBunB,EADQ,IAAIte,KAAKjJ,EAAQkZ,UAAUsO,UACVC,UACzB/mB,EAAIwmB,GAAQjnB,OAAOsnB,EAAkB,QAE3C,OACE9rB,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOsG,UAAUtP,SAAA,EAC5BuC,EAAAA,EAAAA,KAACyT,GAAAA,QAAK,CACJjN,MAAOC,GAAO1E,MACdsK,OAAQ,CAAEqH,IAAKtI,EAAQuZ,aAEzB9d,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAO8rB,cAAc90B,SAAA,EAChCuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOgsB,YAAYh1B,SAAE2N,EAAQA,WAC1CvE,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACN,MAAOC,GAAO6d,UAAU7mB,SAAA,CAAEqO,EAAE,eAI1C,ECrBAqmB,GAAAA,QAAQC,UAAUC,GAAAA,SAClB,IAAMC,GAAU,IAAIH,GAAAA,QAAQ,SAgBtB1rB,GAASY,EAAAA,QAAWC,OAAO,CAC/ByF,UAAW,CACTgD,gBAAiB,UACjBG,aAAc,GACdkC,QAAS,GACT2d,eAAgB,EAChBnf,YAAa,GACbD,WAAY,OACZ6hB,SAAU,MACVnc,YAAa,OACbC,aAAc,CACZzO,MAAO,EACPC,OAAQ,GAEVyO,cAAe,IACfC,aAAc,KACdJ,UAAW,GAEbqc,YAAa,CACX1kB,MAAO,UACP2B,SAAU,GACVE,aAAc,GAEhB0U,UAAW,CACTvW,MAAO,UACP2B,SAAU,GACVgjB,UAAW,cAIf,SA5CsB,SAAHl1B,GAAqB,IAADs1B,EAAd1nB,EAAO5N,EAAP4N,QAEjB2nB,EAAQ,IAAI1e,KAAY,MAAPjJ,GAAkB,OAAX0nB,EAAP1nB,EAASkZ,gBAAF,EAAPwO,EAAoBF,UACrCD,EAAwB,MAALI,OAAK,EAALA,EAAOF,UAC1B/mB,EAAI6mB,EAAmBL,GAAQjnB,OAAOsnB,EAAkB,QAAU,GAExE,OACE9rB,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOsG,UAAUtP,SAAA,EAC5BuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOgsB,YAAYh1B,SAAE2N,EAAQA,WAC1CpL,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO6d,UAAU7mB,SAAEqO,EAAIA,EAAI,OAAS,iBAGvD,EChBA,IAkBMrF,GAASY,EAAAA,QAAWC,OAAO,CAC7B0rB,oBAAqB,CACjBzrB,cAAe,MACfkI,WAAY,SACZ2C,QAAS,GACTrC,gBAAiB,UACjB4f,kBAAmB,EACnBpf,YAAa,WAEjB0iB,gBAAiB,CACbprB,MAAO,GACPC,OAAQ,GACRoI,aAAc,GACdU,YAAa,IAEjBsiB,eAAgB,CACZxjB,SAAU,GACVC,WAAY,OACZ5B,MAAO,WAEXsC,WAAY,CACRO,YAAa,MAIrB,SA3CmB,SAAHpT,GAAqC,IAA/BoD,EAAWpD,EAAXoD,YAAauQ,EAAU3T,EAAV2T,WAK/B,OACInR,EAAAA,EAAAA,KAACgoB,GAAAA,aAAY,CAAAvqB,UACToJ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOusB,oBAAoBv1B,SAAA,EACpCuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACE,QAPN,WACpBiD,EAAWgO,QACf,EAKwD3Y,MAAOC,GAAO4J,WAAW5S,UACjEuC,EAAAA,EAAAA,KAACqO,GAAAA,QAAQ,CAACrM,KAAK,aAAa8L,KAAM,GAAIC,MAAM,eAEpC,MAAXnN,OAAW,EAAXA,EAAamB,SAAU/B,EAAAA,EAAAA,KAACyT,GAAAA,QAAK,CAACpH,OAAQ,CAAEqH,IAAK9S,EAAYmB,OAASyE,MAAOC,GAAOwsB,mBACjFjzB,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOysB,eAAez1B,SAAEmD,EAAYoB,WAIjE,EChBA,IAyBMyE,GAASY,EAAAA,QAAWC,OAAO,CAE7B6rB,2BAA4B,CACxB5rB,cAAe,MACfE,eAAgB,eAChBuI,gBAAiB,IAErBojB,kBAAmB,CACfrjB,gBAAiB,UACjBG,aAAc,GACdF,gBAAiB,GACjBC,kBAAmB,GACnBiR,iBAAkB,GAEtBmS,sBAAuB,CAEnB3jB,SAAU,MAIlB,SA7C0B,SAAHlS,GAAgC,IAA1B81B,EAAkB91B,EAAlB81B,mBAMzB,OACItzB,EAAAA,EAAAA,KAAC6M,EAAAA,QAAU,CAEP2S,YAAY,EACZ1S,sBAAuBrG,GAAO0sB,2BAA2B11B,SAT7C,CAChB,oBACA,qDAQiBqH,KAAI,SAACwI,EAAM1G,GAAK,OACzB5G,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAEbxH,MAAOC,GAAO2sB,kBACdllB,QAAS,kBAAMolB,EAAmBhmB,EAAK,EAAC7P,UAExCuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAO4sB,sBAAsB51B,SAAE6P,KAJvC1G,EAKU,KAInC,E,+NCcA,IA2LMH,GAASY,EAAAA,QAAWC,OAAO,CAC/ByF,UAAW,CACTJ,KAAM,GAER4mB,qBAAsB,CACpB5mB,KAAM,GAER6mB,SAAU,CACRC,YAAa,IAEfC,sBAAuB,CACrBnsB,cAAe,MACfE,eAAgB,gBAChBgI,WAAY,SACZ2b,eAAgB,EAChB7a,YAAa,UACbN,kBAAmB,GACnBD,gBAAiB,IAEnB2jB,UAAW,CACThnB,KAAM,EACNqU,UAAW,GACX5O,QAAS,GACTlC,aAAc,GACdH,gBAAiB,UACjBL,SAAU,IAEZkkB,WAAY,CACVjjB,WAAY,GACZV,kBAAmB,GACnBD,gBAAiB,GACjBD,gBAAiB,UACjBG,aAAc,IAEhB2jB,eAAgB,CACd9lB,MAAO,UACP2B,SAAU,IAEZmS,eAAgB,CACdlV,KAAM,EACNlF,eAAgB,SAChBgI,WAAY,UAEdsS,aAAc,CACZla,MAAO,MACPC,OAAQ,MACRiI,gBAAiB,QACjBG,aAAc,GACdiG,SAAU,UAEZuS,YAAa,CACXnhB,cAAe,MACfE,eAAgB,gBAChB2K,QAAS,GACTud,kBAAmB,EACnBpf,YAAa,WAEfyR,WAAY,CACVtS,SAAU,GACVC,WAAY,QAEdmkB,eAAgB,CACdpkB,SAAU,GACVC,WAAY,OACZ5B,MAAO,WAETgmB,QAAS,CACPpnB,KAAM,GAERqnB,yBAA0B,CACxBjjB,SAAU,QACVgQ,OAAQ,EACR/P,KAAM,EACNkR,MAAO,EACPkJ,eAAgB,EAChB7a,YAAa,UACbR,gBAAiB,SAEnBkkB,qBAAsB,CACpBljB,SAAU,QACVgQ,OAAQ,GACRlZ,MAAO,OACPoJ,OAAQ,KAIZ,SAjRsB,SAAHzT,GAA+B,IAAzB6c,EAAK7c,EAAL6c,MAAOlJ,EAAU3T,EAAV2T,WAE9B0F,EAA2DlZ,IAAnDqD,EAAQ6V,EAAR7V,SAAUtD,EAAkBmZ,EAAlBnZ,mBAAoB4D,EAAgBuV,EAAhBvV,iBACpBV,EAAkByZ,EAA5BE,OAAU3Z,YAClBhD,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA/BqiB,EAAKniB,EAAA,GAAEo2B,EAAQp2B,EAAA,GACtBG,GAAgCJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAArCk2B,EAAQj2B,EAAA,GAAEk2B,EAAWl2B,EAAA,GAC5B4C,GAAsCjD,EAAAA,EAAAA,UAAS,IAAGkD,GAAAhD,EAAAA,EAAAA,SAAA+C,EAAA,GAClDyH,GADkBxH,EAAA,GAAgBA,EAAA,IACIlD,EAAAA,EAAAA,WAAS,IAAM2K,GAAAzK,EAAAA,EAAAA,SAAAwK,EAAA,GAAjC8rB,GAAF7rB,EAAA,GAAgBA,EAAA,IAClCE,GAAkC7K,EAAAA,EAAAA,WAAS,GAAM8K,GAAA5K,EAAAA,EAAAA,SAAA2K,EAAA,GAA1C4rB,EAAS3rB,EAAA,GAAE4rB,EAAY5rB,EAAA,GAC9BG,GAAoCjL,EAAAA,EAAAA,UAClC,yDACDkL,GAAAhL,EAAAA,EAAAA,SAAA+K,EAAA,GAFM0rB,EAAUzrB,EAAA,GAGX0rB,GAH0B1rB,EAAA,GAGF,QAAhBmD,EAAAA,QAASC,IACjBuoB,EAActN,GAAWpmB,EAAS1B,WAAYsB,EAAY6B,KAEhEpE,EAAAA,EAAAA,YAAU,WACR,IAAMs2B,EAAe,eAAAn2B,GAAAC,EAAAA,EAAAA,UAAG,YACtB,IAAMgF,QAAyBrC,EAAAA,QAAaC,QAAQ,YACrCoC,GAAmBC,KAAKC,MAAMF,EAC/C,IAAC,kBAHoB,OAAAjF,EAAAI,MAAA,KAAAC,UAAA,KAIf+1B,GAAc9c,EAAAA,EAAAA,KAAI9a,EAAI,UAAW03B,IACvC3C,EAAAA,EAAAA,QAAO6C,GACJz1B,MAAK,SAAC01B,GACL,IAAKA,EAAYjqB,SAAU,CAAC,IAADkqB,EACnBC,EAAoB,CACxBhzB,MAAOf,EAASe,MAChB/C,MAAOgC,EAAShC,MAChBwD,MAAOxB,EAASwB,MAChBC,GAAIzB,EAAS1B,WACb0C,KAAMhB,EAASgB,OAEjBqiB,EAAAA,EAAAA,SAAOvM,EAAAA,EAAAA,KAAI9a,EAAI,UAAW03B,GAAc,CACtCvO,OAAK2O,EAAA,IAAAE,EAAAA,EAAAA,SAAAF,EACF9zB,EAAS1B,WAAay1B,IAAiBC,EAAAA,EAAAA,SAAAF,EACvCl0B,EAAY6B,GAAK7B,GAAWk0B,GAE/BG,aAAc,CAACj0B,EAAS1B,WAAYsB,EAAY6B,IAChD6hB,WAAWC,EAAAA,GAAAA,oBAEf,CACF,IACChlB,OAAM,SAACC,GACNC,QAAQD,MAAM,qCAAsCA,EACtD,KAEF2nB,EAAAA,GAAAA,aACE1P,EAAAA,GAAAA,QACEC,EAAAA,GAAAA,YAAW1a,EAAI,UAAW03B,EAAa,aACvCrN,EAAAA,GAAAA,SAAQ,YAAa,UAEvB,SAACC,GAAQ,OACP8M,EACE9M,EAASzP,KAAK/S,KAAI,SAACgT,GAAG,O,6WAAAjU,CAAA,CACpBpB,GAAIqV,EAAIrV,IACLqV,EAAI1E,OAAM,IAEhB,IAELuhB,GACF,GAAG,CAAC/zB,EAAa5D,IAGjB,IAAMk4B,EAAsB,WAC1Bb,GAAe,GACf5uB,YAAW,kBAAM4uB,GAAe,EAAM,GAAE,IAC1C,EAEMc,EAAiB,eAAAp2B,GAAAN,EAAAA,EAAAA,UAAG,YACxB,GAAuB,IAAnBuC,EAASqB,OAAkD,OAAnCrB,EAASsB,sBACnCiyB,GAAa,QAIb,GAAc,KAAVtU,EAAc,CAChB,IAAMyU,EAActN,GAAWpmB,EAAS1B,WAAYsB,EAAY6B,UAC1D2yB,EAAAA,GAAAA,SAAO1d,EAAAA,GAAAA,YAAW1a,EAAI,UAAW03B,EAAa,YAAa,CAC/DpQ,WAAWC,EAAAA,GAAAA,mBACXvF,OAAQhe,EAAS1B,WACjB0C,KAAMhB,EAASgB,KACf2iB,SAAU/jB,EAAYojB,KAAO,KAC7B5Y,QAAS6U,IAEXiU,EAAS,IACTgB,IAEA,IACE,IAMQG,SANepW,EAAAA,QAAMf,IAC1B,GAAEzc,0BAAqCT,EAASwB,QACjD,CACEH,MAAOrB,EAASqB,SAGW+Q,KAAvBiiB,UACR33B,EAAmB,CACjB2E,MAAOgzB,GAEX,CAAE,MAAO71B,GACPC,QAAQD,MAAM,6BAA8BA,EAC9C,CACF,CAEJ,IAAC,kBAlCsB,OAAAT,EAAAH,MAAA,KAAAC,UAAA,KAoCjBy2B,EAAmB,YACvB/nB,EAAAA,EAAAA,UAASrQ,EAAW,2BACpBoE,IACAizB,GAAa,EACf,EAMA,OACE1tB,EAAAA,EAAAA,MAAAyI,EAAAA,SAAA,CAAA7R,SAAA,EACEuC,EAAAA,EAAAA,KAACu1B,GAAU,CAAC30B,YAAaA,EAAauQ,WAAYA,KAClDtK,EAAAA,EAAAA,MAAC8E,EAAAA,eAAc,CAACC,OAAQ,CAAC,UAAW,WAAYpF,MAAOC,GAAOsG,UAAUtP,SAAA,EACtEoJ,EAAAA,EAAAA,MAAC4F,EAAAA,QAAoB,CACnBC,SAA0B,QAAhBR,EAAAA,QAASC,GAAe,UAAY,SAC9C3F,MAAOC,GAAO8sB,qBACd3mB,uBAAwB,GAAGnP,SAAA,EAE3BuC,EAAAA,EAAAA,KAACw1B,GAAAA,QAAwB,CAACtnB,QAASunB,GAAAA,QAASC,QAAQj4B,UAClDuC,EAAAA,EAAAA,KAACqY,GAAAA,QAAQ,CACPjF,KAAM+gB,EACNwB,UAAU,EACVnvB,MAAOC,GAAO+sB,SACdlb,aAAc,SAACtE,GAAI,OAAKA,EAAKvR,EAAE,EAC/B8V,WAAY,SAAAzY,GAAA,IAASsL,EAAOtL,EAAbkU,KAAI,OACjB5I,EAAQ4T,SAAWhe,EAAS1B,YAC1BU,EAAAA,EAAAA,KAAC41B,GAAa,CAAkBxqB,QAASA,GAArBA,EAAQ3I,KAE5BzC,EAAAA,EAAAA,KAAC61B,GAAe,CAAkBzqB,QAASA,GAArBA,EAAQ3I,GAC/B,EAEHqzB,oBAAqB,kBAAMZ,GAAqB,OAKhDl1B,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAOC,GAAOwtB,qBAAqBx2B,UACvCuC,EAAAA,EAAAA,KAAC+1B,GAAiB,CAACzC,mBAhCF,SAAChmB,GAC9B4mB,EAAS5mB,EACX,OAkCQzG,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO,CAACC,GAAOitB,sBAAuBe,GAAShuB,GAAOutB,0BAA0Bv2B,SAAA,EAEpFuC,EAAAA,EAAAA,KAACggB,GAAAA,QAAS,CACRG,WAAW,EACX3Z,MAAOC,GAAOktB,UACdlmB,YAAY,iBACZJ,aAAc,SAACnN,GACbg0B,EAASh0B,IACTqN,EAAAA,EAAAA,UAASrQ,EAAW,kBAAmBgD,EACzC,EACAA,MAAO+f,KAETjgB,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACE,QAASinB,EAAmB3uB,MAAOC,GAAOmtB,WAAWn2B,UACrEuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOotB,eAAep2B,SAAC,kBAI1CuC,EAAAA,EAAAA,KAAColB,GAAAA,QAAK,CACJG,cAAc,QACdD,aAAa,EACbD,QAASiP,EACTxJ,eAAgBwK,EAAiB73B,UAEjCuC,EAAAA,EAAAA,KAACuG,EAAAA,QAAI,CAACC,MAAOC,GAAOob,eAAepkB,UACjCoJ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOsb,aAAatkB,SAAA,EAC/BoJ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOC,GAAOiiB,YAAYjrB,SAAA,EAC9BuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOub,WAAWvkB,SAAC,mBAChCuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CAACE,QAASonB,EAAiB73B,UAC1CuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAOC,GAAOqtB,eAAer2B,SAAC,eAGvB,QAAhByO,EAAAA,QAASC,IACRnM,EAAAA,EAAAA,KAACg2B,GAAAA,QAAO,CAAC3pB,OAAQ,CAAEqH,IAAK8gB,GAAchuB,MAAOC,GAAOstB,WACpD/zB,EAAAA,EAAAA,KAAA,UAAQi2B,IAAKzB,EAAY1sB,OAAQ,OAAQD,MAAO,qBAOhE,ECnNA,IAAMwK,IAAQC,EAAAA,EAAAA,WAsBd,SApBiB,WACb,OACIzL,EAAAA,EAAAA,MAACwL,GAAMM,UAAS,CACZM,cAAe,CACXF,aAAa,GAEjBH,iBAAiB,mBAAkBnV,SAAA,EAEnCuC,EAAAA,EAAAA,KAACqS,GAAMQ,OAAM,CAAC7Q,KAAK,mBAAmBgR,UAAWkjB,MACjDl2B,EAAAA,EAAAA,KAACqS,GAAMQ,OAAM,CAAC7Q,KAAK,SAASgR,UAAW4F,MACvC5Y,EAAAA,EAAAA,KAACqS,GAAMQ,OAAM,CAAC7Q,KAAK,UAAUgR,UAAWmjB,MACxCn2B,EAAAA,EAAAA,KAACqS,GAAMQ,OAAM,CAAC7Q,KAAK,iBAAiBgR,UAAWojB,MAC/Cp2B,EAAAA,EAAAA,KAACqS,GAAMQ,OAAM,CAAC7Q,KAAK,OAAOgR,UAAWoa,MACrCptB,EAAAA,EAAAA,KAACqS,GAAMQ,OAAM,CAAC7Q,KAAK,WAAWgR,UAAW2Z,MACzC3sB,EAAAA,EAAAA,KAACqS,GAAMQ,OAAM,CAAC7Q,KAAK,UAAUgR,UAAWqjB,MACxCr2B,EAAAA,EAAAA,KAACqS,GAAMQ,OAAM,CAAC7Q,KAAK,iBAAiBgR,UAAWqjB,OAG3D,ECRA,SArBuB,SAAH74B,GAAoC,IAA9BqlB,EAASrlB,EAATqlB,UAAWyT,EAAW94B,EAAX84B,YACjC,OACIt2B,EAAAA,EAAAA,KAAColB,GAAAA,QAAK,CAACvC,UAAWA,EAAW0T,cAAc,qBAAqBC,gBAAiB,EAAE/4B,UAC/EuC,EAAAA,EAAAA,KAAC2L,EAAAA,eAAc,CACXC,OAAQ,CAAC,UAAW,WACpBpF,MAAO,CAAEmG,KAAM,EAAGlF,eAAgB,SAAUgI,WAAY,UAAWhS,UAEnEoJ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO,CAAEuJ,gBAAiB,QAASG,aAAc,GAAIkC,QAAS,IAAK3U,SAAA,EACrEuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAO,CAAEuH,MAAO,UAAW2B,SAAU,GAAIE,aAAc,IAAKnS,SAAC,gCACnEuC,EAAAA,EAAAA,KAACgO,EAAAA,QAAgB,CACbxH,MAAO,CAAEuJ,gBAAiB,UAAWqC,QAAS,GAAIlC,aAAc,GAChEhC,QAASooB,EAAY74B,UAErBuC,EAAAA,EAAAA,KAAC8G,EAAAA,QAAI,CAACN,MAAO,CAAEuH,MAAO,QAAS+C,UAAW,SAAUpB,SAAU,IAAKjS,SAAC,iCAM5F,E,0BCVMg5B,GAAM,WACV,IAAQ/1B,EAAc/C,IAAd+C,UACR9C,GAA8CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAtD84B,EAAe54B,EAAA,GAAE64B,EAAkB74B,EAAA,GAC1CG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAAjC24B,EAAM14B,EAAA,GAAE24B,EAAS34B,EAAA,GACxB4C,GAAsCjD,EAAAA,EAAAA,WAAS,GAAMkD,GAAAhD,EAAAA,EAAAA,SAAA+C,EAAA,GAAjCg2B,GAAF/1B,EAAA,GAAgBA,EAAA,KAElC1C,EAAAA,EAAAA,YAAU,WACR04B,GAAKC,UAAU,CACb,oBAAqB1qB,EAAQ,MAC7B,kBAAmBA,EAAQ,MAC3B,iBAAkBA,EAAQ,MAC1B,MAASA,EAAQ,QAEnBwqB,GAAe,EACjB,GAAG,KACHz4B,EAAAA,EAAAA,YAAU,WACR,IAAM44B,EAAoB,eAAAz5B,GAAAiB,EAAAA,EAAAA,UAAG,YAC3B,IACE,IACAy4B,SADuBjY,EAAAA,QAAMrX,IAAK,GAAEnG,8BACE2R,KAA9B+jB,EAAQD,EAARC,SAAUP,EAAMM,EAANN,OACdO,IACFR,GAAmB,GACnBE,EAAUD,GAEd,CAAE,MAAOp3B,GACPC,QAAQD,MAAM,oCAAqCA,EACrD,CACF,IAAC,kBAXyB,OAAAhC,EAAAoB,MAAA,KAAAC,UAAA,KAY1Bo4B,GACF,GAAG,IAgBH,OACEpwB,EAAAA,EAAAA,MAAAyI,EAAAA,SAAA,CAAA7R,SAAA,EACEuC,EAAAA,EAAAA,KAACyd,GAAAA,QAAK,KACNzd,EAAAA,EAAAA,KAACzC,EAAY,CAAAE,UACXuC,EAAAA,EAAAA,KAACo3B,EAAAA,QAAmB,CAAA35B,SACjBiD,GAAYV,EAAAA,EAAAA,KAACq3B,GAAQ,KAAMr3B,EAAAA,EAAAA,KAACs3B,GAAS,SAG1Ct3B,EAAAA,EAAAA,KAACu3B,GAAc,CACb1U,UAAW6T,EACXc,QAAS,kBAAMb,GAAmB,EAAM,EACxCL,YAzBkB,WACtBmB,GAAAA,QAAQC,WAAWd,GAChBz3B,MAAK,SAACw4B,GACDA,EACFF,GAAAA,QAAQG,QAAQhB,GAEhBn3B,QAAQD,MAAM,8BAElB,IACCD,OAAM,SAACC,GACNC,QAAQD,MAAM,iCAAkCA,EAClD,GACJ,MAiBF,EAEA,oBACE,OACEQ,EAAAA,EAAAA,KAACS,EAAY,CAAAhD,UACXuC,EAAAA,EAAAA,KAACy2B,GAAG,KAGT,C,yi0+BCjFGoB,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBrzB,IAAjBszB,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CACjDt1B,GAAIs1B,EACJI,QAAQ,EACRF,QAAS,CAAC,GAUX,OANAG,EAAoBL,GAAUxzB,KAAK2zB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG3EI,EAAOC,QAAS,EAGTD,EAAOD,OACf,CAGAH,EAAoBO,EAAID,EC5BxBN,EAAoBQ,KAAO,CAAC,E,MCA5B,IAAIC,EAAW,GACfT,EAAoBU,EAAI,CAACC,EAAQC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAAS9zB,EAAI,EAAGA,EAAIuzB,EAAS30B,OAAQoB,IAAK,CAGzC,IAFA,IAAK0zB,EAAUC,EAAIC,GAAYL,EAASvzB,GACpC+zB,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAAS90B,OAAQo1B,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAajnB,OAAOsnB,KAAKnB,EAAoBU,GAAGU,OAAOjzB,GAAS6xB,EAAoBU,EAAEvyB,GAAKyyB,EAASM,MAC9IN,EAASS,OAAOH,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbR,EAASY,OAAOn0B,IAAK,GACrB,IAAIo0B,EAAIT,SACEj0B,IAAN00B,IAAiBX,EAASW,EAC/B,CACD,CACA,OAAOX,CAnBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAI5zB,EAAIuzB,EAAS30B,OAAQoB,EAAI,GAAKuzB,EAASvzB,EAAI,GAAG,GAAK4zB,EAAU5zB,IAAKuzB,EAASvzB,GAAKuzB,EAASvzB,EAAI,GACrGuzB,EAASvzB,GAAK,CAAC0zB,EAAUC,EAAIC,EAqBjB,C,KCzBdd,EAAoBuB,EAAKnB,IACxB,IAAIoB,EAASpB,GAAUA,EAAOqB,WAC7B,IAAOrB,EAAiB,QACxB,IAAM,EAEP,OADAJ,EAAoB0B,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,E,MCNd,IACII,EADAC,EAAWhoB,OAAOioB,eAAkBC,GAASloB,OAAOioB,eAAeC,GAASA,GAASA,EAAa,UAQtG/B,EAAoBgC,EAAI,SAAS55B,EAAO65B,GAEvC,GADU,EAAPA,IAAU75B,EAAQgG,KAAKhG,IAChB,EAAP65B,EAAU,OAAO75B,EACpB,GAAoB,kBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAP65B,GAAa75B,EAAMq5B,WAAY,OAAOr5B,EAC1C,GAAW,GAAP65B,GAAoC,oBAAf75B,EAAMf,KAAqB,OAAOe,CAC5D,CACA,IAAI85B,EAAKroB,OAAOrK,OAAO,MACvBwwB,EAAoBsB,EAAEY,GACtB,IAAIC,EAAM,CAAC,EACXP,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAIzkB,EAAiB,EAAP6kB,GAAY75B,EAAyB,iBAAXgV,KAAyBwkB,EAAeQ,QAAQhlB,GAAUA,EAAUykB,EAASzkB,GACxHvD,OAAOwoB,oBAAoBjlB,GAASpP,SAASG,GAASg0B,EAAIh0B,GAAO,IAAO/F,EAAM+F,KAI/E,OAFAg0B,EAAa,QAAI,IAAM,EACvBnC,EAAoB0B,EAAEQ,EAAIC,GACnBD,CACR,C,KCxBAlC,EAAoB0B,EAAI,CAACvB,EAASmC,KACjC,IAAI,IAAIn0B,KAAOm0B,EACXtC,EAAoBuC,EAAED,EAAYn0B,KAAS6xB,EAAoBuC,EAAEpC,EAAShyB,IAC5E0L,OAAO2oB,eAAerC,EAAShyB,EAAK,CAAEs0B,YAAY,EAAM3yB,IAAKwyB,EAAWn0B,IAE1E,ECND6xB,EAAoB0C,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOv0B,MAAQ,IAAIw0B,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,kBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxB9C,EAAoBuC,EAAI,CAACR,EAAKgB,IAAUlpB,OAAOmpB,UAAUC,eAAex2B,KAAKs1B,EAAKgB,GCClF/C,EAAoBsB,EAAKnB,IACH,qBAAX+C,QAA0BA,OAAOC,aAC1CtpB,OAAO2oB,eAAerC,EAAS+C,OAAOC,YAAa,CAAE/6B,MAAO,WAE7DyR,OAAO2oB,eAAerC,EAAS,aAAc,CAAE/3B,OAAO,GAAO,ECL9D43B,EAAoBoD,IAAOhD,IAC1BA,EAAOiD,MAAQ,GACVjD,EAAOz6B,WAAUy6B,EAAOz6B,SAAW,IACjCy6B,GCHRJ,EAAoBsD,EAAI,I,MCKxB,IAAIC,EAAkB,CACrB,IAAK,GAaNvD,EAAoBU,EAAEQ,EAAKsC,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4BpoB,KACvD,IAGI2kB,EAAUuD,GAHT5C,EAAU+C,EAAaC,GAAWtoB,EAGhBpO,EAAI,EAC3B,GAAG0zB,EAASiD,MAAMl5B,GAAgC,IAAxB44B,EAAgB54B,KAAa,CACtD,IAAIs1B,KAAY0D,EACZ3D,EAAoBuC,EAAEoB,EAAa1D,KACrCD,EAAoBO,EAAEN,GAAY0D,EAAY1D,IAGhD,GAAG2D,EAAS,IAAIjD,EAASiD,EAAQ5D,EAClC,CAEA,IADG0D,GAA4BA,EAA2BpoB,GACrDpO,EAAI0zB,EAAS90B,OAAQoB,IACzBs2B,EAAU5C,EAAS1zB,GAChB8yB,EAAoBuC,EAAEgB,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOxD,EAAoBU,EAAEC,EAAO,EAGjCmD,EAAqBC,KAAsB,gBAAIA,KAAsB,iBAAK,GAC9ED,EAAmB91B,QAAQy1B,EAAqBO,KAAK,KAAM,IAC3DF,EAAmBhd,KAAO2c,EAAqBO,KAAK,KAAMF,EAAmBhd,KAAKkd,KAAKF,G,KC7CvF,IAAIG,EAAsBjE,EAAoBU,OAAE9zB,EAAW,CAAC,MAAM,IAAOozB,EAAoB,QAC7FiE,EAAsBjE,EAAoBU,EAAEuD,E","sources":["firebase/firebase.js","hooks/useAuth.js","services/config.js","context/UserContext.js","components/TextAnimator.js","screens/Authentication.js","utils/asyncStorage.js","screens/OnboardingScreen.js","navigation/AuthStack.js","components/BannerCarousel.js","screens/Home.js","screens/PostAd.js","components/UpdateProfileModal.js","utils/getMatchedUserInfo.js","utils/generateIds.js","components/ChatRow.js","components/ChatList.js","screens/Chat.js","components/CustomHeader.js","screens/HomeTabNavigator.js","screens/Default.js","components/AdCard.js","screens/UserAds.js","screens/AdDetails.js","components/ReceiverMessage.js","components/SenderMessage.js","components/ChatHeader.js","components/MessageSuggestion.js","screens/Message.js","navigation/AppStack.js","components/UpdateAppModal.js","App.js","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from 'firebase/auth'\nimport { getFirestore } from 'firebase/firestore'\nimport { getStorage } from \"firebase/storage\";\nimport { initializeAuth, getReactNativePersistence } from 'firebase/auth';\nimport ReactNativeAsyncStorage from '@react-native-async-storage/async-storage';\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyApunLilBsWG8YvyLL6hNdpWW0oB_JGNl8\",\n    authDomain: \"odicult-c051c.firebaseapp.com\",\n    databaseURL: \"https://odicult-c051c-default-rtdb.firebaseio.com\",\n    projectId: \"odicult-c051c\",\n    storageBucket: \"odicult-c051c.appspot.com\",\n    messagingSenderId: \"264373040060\",\n    appId: \"1:264373040060:web:8d9c8e752ae975257331b9\",\n    measurementId: \"G-YJTXX7D32M\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app)\n\n// initializeAuth(app, {\n//     persistence: getReactNativePersistence(ReactNativeAsyncStorage)\n// });\nconst db = getFirestore()\nconst storage = getStorage();\nconst analytics = getAnalytics(app);\nexport { analytics, app, auth, db, storage }\n","\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from 'firebase/auth';\nimport { ActivityIndicator } from 'react-native';\nimport { auth, db } from '../firebase/firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useUser } from '../context/UserContext';\n\nconst AuthContext = createContext({\n})\n\nconst AuthProvider = ({ children }) => {\n  const { setUserInfoToStore } = useUser();\n  const [user, setUser] = useState(null);\n  const [loadingLogin, setLoadingLogin] = useState(true);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (authUser) => {\n      if (authUser) {\n        try {\n        } catch (error) {\n          console.error('Error fetching user details:', error);\n        }\n        setLoadingLogin(false);\n      } else {\n        // setUser(null);\n        setLoadingLogin(false);\n      }\n    });\n\n    return () => {\n      // Unsubscribe from the auth state listener when the component unmounts\n      unsubscribe();\n    };\n  }, []);\n\n  const signInWithEmailPassword = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        const uid = userCredential.user.uid;\n        setUserInfoToStore({ firebaseId: uid })\n\n      })\n      .catch((error) => {\n        console.log(\"Firebase SignIn Error\", error)\n      });\n  };\n\n  const signUpWithEmailPassword = async (email, password) => {\n    await createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        const uid = userCredential.user.uid;\n        setUserInfoToStore({ firebaseId: uid })\n      })\n      .catch((error) => {\n        console.log(\"Firebase SignUp Error\", error)\n      });\n  };\n\n  const logOut = async () => {\n    setLoadingLogin(true);\n    await signOut(auth);\n    setLoadingLogin(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        signInWithEmailPassword,\n        signUpWithEmailPassword,\n        loadingLogin,\n        logOut,\n      }}\n    >\n      {loadingLogin ? <ActivityIndicator /> : children}\n    </AuthContext.Provider>\n  );\n};\nconst AuthOpen = () => {\n  return useContext(AuthContext);\n};\n\nexport { AuthOpen, AuthProvider };","const API_BASE_URL = 'https://odicult.fruitnasta.com/api';\n\nexport default API_BASE_URL;\n","// UserContext.js\n\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthOpen } from '../hooks/useAuth';\nimport API_BASE_URL from '../services/config';\n\nconst UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n    const [userToken, setUserToken] = useState(null);\n    const [userDetails, setUserDetails] = useState(null);\n    const [userInfo, setUserInfo] = useState(null);\n    useEffect(() => {\n        const loadUserToken = async () => {\n            try {\n                const storedToken = await AsyncStorage.getItem('userToken');\n                if (storedToken) {\n                    setUserToken(storedToken);\n\n                }\n            } catch (error) {\n                console.error('Error loading user token:', error);\n            }\n        };\n        loadUserToken();\n    }, []);\n\n    const fetchUserDetails = async () => {\n        const response = await fetch(`${API_BASE_URL}/user/getUserByPhoneNumber/${userToken.toString()}`);\n        if (response.ok) {\n            const userData = await response.json();\n            const { email, gender, image, name, phoneNumber, _id, tenantType, rentPosts, coins, subscriptionStartDate, location } = userData\n            setUserDetails(userData);\n            setUserInfoToStore({ email, gender, image, name, phone: phoneNumber, id: _id, tenantType, rentPosts, coins, subscriptionStartDate, location })\n        } else {\n            console.error('Error fetching user details:', response.statusText);\n        }\n    }\n    const login = async (token) => {\n        setUserToken(token);\n        try {\n            // Store the user token in async storage\n            await AsyncStorage.setItem('userToken', token);\n        } catch (error) {\n            console.error('Error storing user token:', error);\n        }\n    };\n\n    const logout = async () => {\n        setUserToken(null);\n        removeUserInfoFromStore()\n        try {\n            // Remove the user token from async storage\n            await AsyncStorage.removeItem('userToken');\n        } catch (error) {\n            console.error('Error removing user token:', error);\n        }\n    };\n\n\n    const removeUserInfoFromStore = async () => {\n        try {\n            // Remove the user info from async storage\n            await AsyncStorage.removeItem('userInfo');\n            // You can also reset the user info state if needed\n            setUserInfo({});\n        } catch (error) {\n            console.error('Error removing user info:', error);\n        }\n    };\n\n    const setUserInfoToStore = async ({\n        name,\n        id,\n        firebaseId,\n        phone,\n        gender,\n        rentPost,\n        email,\n        image,\n        tenantType,\n        coins,\n        subscriptionStartDate = 'NA',\n        location = {},\n        locationMarked,\n    }) => {\n        try {\n            // Get the existing user info from async storage\n            const existingUserInfo = await AsyncStorage.getItem('userInfo');\n            let userInfo = existingUserInfo ? JSON.parse(existingUserInfo) : {};\n\n            // Check if firebaseId exists in userInfo\n            if (!userInfo.firebaseId || !userInfo.firebaseId.length) {\n                userInfo = {\n                    ...userInfo,\n                    firebaseId,\n                };\n            }\n\n            // Update the other user info fields\n            userInfo = {\n                ...userInfo,\n                name,\n                id,\n                phone,\n                gender,\n                rentPost,\n                email,\n                image,\n                tenantType,\n                coins,\n                subscriptionStartDate,\n                location,\n                locationMarked\n            };\n\n            await AsyncStorage.setItem('userInfo', JSON.stringify(userInfo));\n            setUserInfo(userInfo);\n        } catch (error) {\n            console.error('Error storing/updating user info:', error);\n        }\n    };\n\n    return (\n        <UserContext.Provider value={{\n            userToken,\n            login,\n            logout,\n            userDetails,\n            fetchUserDetails,\n            setUserInfoToStore,\n            userInfo,\n        }}>\n            {children}\n        </UserContext.Provider>\n    );\n};\n\nexport const useUser = () => {\n    return useContext(UserContext);\n};\n","import * as React from 'react';\nimport { View, StyleSheet, Animated } from 'react-native';\n\nexport default class TextAnimator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textArr: props.content.trim().split(' '),\n            animatedValues: [],\n        };\n        this.state.textArr.forEach((_, i) => {\n            this.state.animatedValues[i] = new Animated.Value(0);\n        });\n    }\n\n    componentDidMount() {\n        this.animate();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.content !== this.props.content) {\n            this.setState({\n                textArr: this.props.content.trim().split(' '),\n                animatedValues: this.props.content.trim().split(' ').map(() => new Animated.Value(0)),\n            }, () => {\n                this.animate();\n            });\n        }\n    }\n\n    animate = (toValue = 1) => {\n        const animations = this.state.textArr.map((_, i) => {\n            return Animated.timing(this.state.animatedValues[i], {\n                toValue,\n                duration: this.props.duration,\n                useNativeDriver: true\n            });\n        });\n\n        Animated.stagger(\n            this.props.duration / 5,\n            toValue === 0 ? animations.reverse() : animations\n        ).start(() => {\n            setTimeout(() => this.animate(toValue === 0 ? 1 : 0), 1000);\n            if (this.props.onFinish) {\n                this.props.onFinish();\n            }\n        });\n    };\n\n    render() {\n        return (\n            <View style={[this.props.style, styles.textWrapper]}>\n                {this.state.textArr.map((word, index) => {\n                    return (\n                        <Animated.Text\n                            key={`${word}-${index}`}\n                            style={[\n                                this.props.textStyle,\n                                {\n                                    opacity: this.state.animatedValues[index],\n                                    transform: [\n                                        {\n                                            translateY: Animated.multiply(\n                                                this.state.animatedValues[index],\n                                                new Animated.Value(-5)\n                                            )\n                                        }\n                                    ],\n                                },\n                            ]}\n                        >\n                            {word}\n                            {`${index < this.state.textArr.length - 1 ? ' ' : ''}`}\n                        </Animated.Text>\n                    );\n                })}\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    textWrapper: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    }\n});\n","import React, { useState } from 'react';\nimport {\n    StyleSheet,\n    View,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    ActivityIndicator,\n    ScrollView,\n    Dimensions,\n    KeyboardAvoidingView,\n    Platform\n} from 'react-native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { Image } from 'react-native';\n\nimport PhoneNumberInput from 'react-native-phone-number-input';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport { AuthOpen } from '../hooks/useAuth';\nimport Lottie from 'lottie-react-native';\nimport LottieView from 'react-native-web-lottie';\n\nimport { CodeField, Cursor, useClearByFocusCell } from 'react-native-confirmation-code-field';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport TextAnimator from '../components/TextAnimator';\nimport { logEvent } from 'firebase/analytics';\nimport { analytics } from '../firebase/firebase';\n\nconst { width, height } = Dimensions.get('window');\nconst CELL_COUNT = 6;\nexport default function Authentication() {\n    const { signInWithEmailPassword, signUpWithEmailPassword } = AuthOpen();\n    const [formattedValue, setFormattedValue] = useState('');\n    const { login } = useUser();\n    const [isUserExists, setIsUserExists] = useState(false);\n    const [screen, setScreen] = useState(1);\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [otp, setOtp] = useState('');\n    const [assignedOtp, setAssignedOtp] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [isTextInputFocused, setIsTextInputFocused] = useState(false);\n    const [currentTextIndex, setCurrentTextIndex] = useState(0);\n    const animatedTexts = [\n        'No Broker in Between 🏠',\n        'Fast and Reliable 🔥',\n        'Your Dream House Awaits! 🏠'\n    ];\n    const [props, getCellOnLayoutHandler] = useClearByFocusCell({\n        value: otp,\n        setValue: setOtp,\n    });\n\n    const handleAnimationComplete = () => {\n        if (currentTextIndex < animatedTexts.length - 1) {\n            setCurrentTextIndex(currentTextIndex + 1);\n        }\n    };\n\n    const renderMedia = () => {\n        if (Platform.OS === 'web') {\n            return (\n                <LottieView\n                    source={require('../assets/animations/dreamHouse.json')}\n                    autoPlay\n                    loop\n                />\n            );\n        } else {\n            return (\n                <Lottie\n                    source={require('../assets/animations/dreamHouse.json')}\n                    autoPlay\n                    loop\n                />\n            );\n        }\n    };\n\n    const generateOtp = () => {\n        const otp =\n            phoneNumber === '7008105210'\n                ? 121212\n                : Math.floor(100000 + Math.random() * 900000);\n        setAssignedOtp(otp);\n        return otp;\n    };\n\n    const fetchUserExistsStatus = async () => {\n        const checkPhoneResponse = await fetch(\n            `${API_BASE_URL}/user/check-phone/${phoneNumber}`\n        );\n        const checkPhoneData = await checkPhoneResponse.json();\n        setIsUserExists(checkPhoneData.exists);\n    };\n\n    const sendOTP = async () => {\n        try {\n            setIsLoading(true);\n            // Make an API request to mtalkz to send OTP\n            const response = await fetch('http://msg.mtalkz.com/V2/http-api-post.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    apikey: 'yX99qQMNlPz0OkCY',\n                    senderid: 'MTAMOI',\n                    number: formattedValue,\n                    message: `Your OTP- One Time Password is ${generateOtp()} to authenticate your login with #4r3mk23 Powered By mTalkz`,\n                    format: 'json',\n                }),\n            });\n            const data = await response.json();\n            if (data.status === 'OK') {\n                fetchUserExistsStatus();\n                setScreen(2);\n                // After OTP verification, check if the phone number exists in the database\n            } else {\n                alert('Failed to send OTP. Please try again.');\n            }\n        } catch (error) {\n            console.log('error', error);\n            alert('Error sending OTP. Please check your network connection.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const verifyOTP = () => {\n        try {\n            setIsLoading(true);\n            if (otp === assignedOtp.toString()) {\n                login(phoneNumber);\n                if (isUserExists) {\n                    signInWithEmailPassword(`${phoneNumber}@gmail.com`, phoneNumber);\n                } else {\n                    signUpWithEmailPassword(`${phoneNumber}@gmail.com`, phoneNumber);\n                }\n            } else {\n                // OTPs do not match, show an error alert\n                alert('Invalid OTP. Please try again.');\n            }\n        } catch (error) {\n            alert('Error verifying OTP. Please try again.');\n            console.log('error', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleTextInputFocus = () => {\n        setIsTextInputFocused(true);\n    };\n\n    const handleTextInputBlur = () => {\n        setIsTextInputFocused(false);\n    };\n\n    const renderScreen = () => {\n        switch (screen) {\n            case 1:\n                return (\n                    <LinearGradient\n                        colors={['#003366', '#006699', '#0099CC']}\n                        style={styles.gradient}\n                        start={{ x: 0, y: 0 }}\n                        end={{ x: 1, y: 1 }}\n                    >\n                        {(!isTextInputFocused) && (<View style={styles.lottie}>\n                            {renderMedia()}\n                            <TextAnimator\n                                content={animatedTexts[currentTextIndex]}\n                                textStyle={styles.textStyle}\n                                duration={500}\n                                onFinish={handleAnimationComplete}\n                            />\n                        </View>)}\n                        <KeyboardAvoidingView\n                            behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n                            style={{ flex: 1 }}\n                            keyboardVerticalOffset={Platform.OS === 'ios' ? -100 : 0}\n                        >\n                            <ScrollView\n                                contentContainerStyle={styles.container}\n                                keyboardShouldPersistTaps=\"handled\"\n                            >\n                                <Text style={styles.header}>Enter Your Mobile Number</Text>\n                                <Text style={styles.subheader}>\n                                    We will send you a Confirmation Code\n                                </Text>\n\n                                <PhoneNumberInput\n                                    defaultCode=\"IN\"\n                                    value={phoneNumber}\n                                    onChangeText={(text) => {\n                                        logEvent(analytics, \"phone number changed\", text);\n                                        setPhoneNumber(text);\n                                    }}\n                                    onChangeFormattedText={(text) => {\n                                        setFormattedValue(text);\n                                    }}\n                                    placeholder=\"Enter Phone Number\"\n                                    withDarkTheme\n                                    withShadow\n                                    onFocus={handleTextInputFocus}\n                                    onBlur={handleTextInputBlur}\n                                />\n\n                                {isLoading ? (\n                                    <ActivityIndicator size=\"small\" color=\"#E5E5E5\" />\n                                ) : (\n                                    <TouchableOpacity\n                                        style={styles.button}\n                                        onPress={sendOTP}\n                                    >\n                                        <Text style={styles.buttonText}>VERIFY</Text>\n                                    </TouchableOpacity>\n                                )}\n                            </ScrollView>\n                        </KeyboardAvoidingView>\n                    </LinearGradient>\n                );\n            case 2:\n\n                return (\n                    <LinearGradient\n                        colors={['#003366', '#006699', '#0099CC']}\n                        style={styles.gradient}\n                        start={{ x: 0, y: 0 }}\n                        end={{ x: 1, y: 1 }}\n                    >\n                        <View style={styles.iconContainer}>\n                            <TouchableOpacity onPress={() => setScreen(1)}>\n                                <Ionicons name=\"arrow-back\" size={30} color=\"#FFFFFF\" />\n                            </TouchableOpacity>\n                        </View>\n                        <ScrollView\n                            contentContainerStyle={styles.container}\n                            keyboardShouldPersistTaps=\"handled\"\n                        >\n                            <Text style={styles.header}>Enter Verification Code</Text>\n                            <CodeField\n                                {...props}\n                                caretHidden={false}\n                                value={otp}\n                                onChangeText={setOtp}\n                                cellCount={CELL_COUNT}\n                                rootStyle={styles.codeFieldRoot}\n                                keyboardType=\"number-pad\"\n                                textContentType=\"oneTimeCode\"\n                                renderCell={({ index, symbol, isFocused }) => (\n                                    <View\n                                        onLayout={getCellOnLayoutHandler(index)}\n                                        key={index}\n                                        style={[styles.cell, isFocused && styles.focusCell]}\n                                    >\n                                        <Text style={styles.cellText}>\n                                            {symbol || (isFocused ? <Cursor /> : null)}\n                                        </Text>\n                                    </View>\n                                )}\n                            />\n                            <View style={styles.buttonContainer}>\n                                {isLoading ? (\n                                    <ActivityIndicator size=\"small\" color=\"#FFFFFF\" />\n                                ) : (\n                                    <>\n                                        <TouchableOpacity\n                                            style={styles.button}\n                                            onPress={verifyOTP}\n                                        >\n                                            <Text style={styles.buttonText}>VERIFY OTP</Text>\n                                        </TouchableOpacity>\n                                        <TouchableOpacity\n                                            onPress={sendOTP}\n                                        >\n                                            <Text style={styles.resendText}>RESEND OTP</Text>\n                                        </TouchableOpacity>\n                                    </>\n                                )}\n                            </View>\n                        </ScrollView>\n                    </LinearGradient>\n                );\n\n\n\n            default:\n                return <View />;\n        }\n    };\n\n    return renderScreen();\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        // backgroundColor: '#E5E5E5',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    header: {\n        fontSize: 24,\n        color: '#E5E5E5',\n        fontWeight: 'bold',\n        marginBottom: 10,\n        fontFamily: 'open-sans-regular'\n    },\n    subheader: {\n        fontSize: 16,\n        color: '#E5E5E5',\n        marginBottom: 30,\n        fontFamily: 'open-sans-regular'\n    },\n    button: {\n        top: 15,\n        backgroundColor: '#FFFFFF',\n        paddingVertical: 15,\n        paddingHorizontal: 30,\n        borderRadius: 5,\n\n    },\n    resendButton: {\n        backgroundColor: '#E5E5E5',\n        paddingVertical: 15,\n        paddingHorizontal: 30,\n        borderRadius: 5,\n        marginTop: 10,\n    },\n    backButton: {\n        backgroundColor: '#E5E5E5',\n        paddingVertical: 15,\n        paddingHorizontal: 30,\n        borderRadius: 5,\n        marginBottom: 10,\n    },\n    buttonText: {\n        color: '#007DBC',\n        fontFamily: 'open-sans-bold'\n    },\n    buttonContainer: {\n        marginTop: 20,\n        alignItems: 'center',\n    },\n    countryPickerContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n        width: 110,\n        borderColor: '#007DBC',\n        borderWidth: 1,\n        borderRadius: 5,\n    },\n    countryPicker: {\n        flex: 1,\n        height: 40,\n        color: '#007DBC',\n    },\n    lottie: {\n        width: width,\n        height: width,\n        alignItems: 'center',\n        justifyContent: 'center',\n        top: 50,\n    },\n    image: {\n        width: 250,\n        height: 250,\n        resizeMode: 'contain', // or 'cover' depending on your requirement\n    },\n    codeFieldRoot: {\n        marginTop: 20,\n        width: 280,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n    cell: {\n        width: 30,\n        height: 45,\n        lineHeight: 38,\n        fontSize: 24,\n        borderWidth: 2,\n        borderColor: '#FFFFFF',\n        textAlign: 'center',\n        marginRight: 8,\n    },\n    focusCell: {\n        borderColor: '#000',\n    },\n    cellText: {\n        color: '#FFFFFF',\n        fontSize: 36,\n        textAlign: 'center',\n    },\n    gradient: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    iconContainer: {\n        position: 'absolute',\n        top: 50,  // Adjust according to your need\n        left: 20,  // Adjust according to your need\n        zIndex: 10,\n    },\n    resendText: {\n        color: '#FFFFFF',\n        textAlign: 'center',\n        marginTop: 15,  // Or any other value that suits your design\n        fontSize: 16,   // Or any other value that suits your design\n        top: 20\n    },\n    textStyle: {\n        fontSize: 20,\n        fontFamily: 'open-sans-regular',\n        marginBottom: 14,\n        color: '#FFFFFF',\n        top: 100,\n    }\n});\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport const setItem = async (key, value) => {\n  try {\n    await AsyncStorage.setItem(key, value);\n  } catch (error) {\n    console.log('Error storing value: ', error);\n  }\n};\n\n\nexport const getItem = async (key) => {\n  try {\n    const value = await AsyncStorage.getItem(key);\n    return value;\n  } catch (error) {\n    console.log('Error retrieving value: ', error);\n  }\n};\n\nexport const removeItem = async (key) => {\n  try {\n    await AsyncStorage.removeItem(key);\n  } catch (error) {\n    console.log('Error deleting value: ', error);\n  }\n}","import { View, Text, StyleSheet, Dimensions, TouchableOpacity } from 'react-native'\nimport React from 'react'\nimport Onboarding from 'react-native-onboarding-swiper';\nimport Lottie from 'lottie-react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { setItem } from '../utils/asyncStorage';\n\nconst { width, height } = Dimensions.get('window');\n\nexport default function OnboardingScreen() {\n    const navigation = useNavigation();\n\n    const handleDone = () => {\n        navigation.navigate('Home');\n        setItem('onboarded', '1');\n    }\n\n    const doneButton = ({ ...props }) => {\n        return (\n            <TouchableOpacity style={styles.doneButton} {...props}>\n                <Text>Done</Text>\n            </TouchableOpacity>\n        )\n\n    }\n    return (\n        <View style={styles.container}>\n            <Onboarding\n                onDone={handleDone}\n                onSkip={handleDone}\n                // bottomBarHighlight={false}\n                DoneButtonComponent={doneButton}\n                containerStyles={{ paddingHorizontal: 15 }}\n                pages={[\n                    {\n                        backgroundColor: '#003366',\n\n                        image: (\n                            <View style={styles.lottie}>\n                                <Lottie source={require('../assets/animations/nearbyRooms.json')} autoPlay loop />\n                            </View>\n                        ),\n                        title: 'Nearby Rooms',\n                        subtitle: 'Discover rooms close to your current location easily.',\n                    },\n                    {\n                        backgroundColor: '#006699',\n                        image: (\n                            <View style={styles.lottie}>\n                                <Lottie source={require('../assets/animations/directMessageFlatmates.json')} autoPlay loop />\n                            </View>\n                        ),\n                        title: 'Direct Message Flatmate',\n                        subtitle: 'Contact flatmates directly, no broker in between.',\n                    },\n                    {\n                        backgroundColor: '#0099CC',\n                        image: (\n                            <View style={styles.lottie}>\n                                <Lottie source={require('../assets/animations/verifiedListings.json')} autoPlay loop />\n                            </View>\n                        ),\n                        title: 'Verified Listings',\n                        subtitle: '100% verified rooms with 1000+ users trusted.',\n                    },\n                ]}\n            />\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: 'white'\n    },\n    lottie: {\n        width: width * 0.9,\n        height: width\n    },\n    doneButton: {\n        padding: 20,\n        // backgroundColor: 'white',\n        // borderTopLeftRadius: '100%',\n        // borderBottomLeftRadius: '100%'\n    }\n})","// src/navigation/AuthStack.js\n\nimport React, { useEffect, useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Platform } from 'react-native'; // Import Platform from 'react-native'\nimport Authentication from '../screens/Authentication';\nimport OnboardingScreen from '../screens/OnboardingScreen';\nimport { getItem } from '../utils/asyncStorage';\n\nconst Stack = createStackNavigator();\n\nconst AuthStack = () => {\n    const [showOnboarding, setShowOnboarding] = useState(null);\n\n    useEffect(() => {\n        checkIfAlreadyOnboarded();\n    }, []);\n\n    const checkIfAlreadyOnboarded = async () => {\n        let onboarded = await getItem('onboarded');\n        if (onboarded == 1) {\n            setShowOnboarding(false);\n        } else {\n            setShowOnboarding(true);\n        }\n    };\n\n    if (showOnboarding && Platform.OS !== 'web') { // Check the platform here\n        return (\n            <Stack.Navigator initialRouteName='Onboarding'>\n                <Stack.Screen name=\"Onboarding\" options={{ headerShown: false }} component={OnboardingScreen} />\n                <Stack.Screen name=\"Home\" options={{ headerShown: false }} component={Authentication} />\n            </Stack.Navigator>\n        );\n    }\n\n    if (showOnboarding == null) return null;\n\n    return (\n        <Stack.Navigator\n            screenOptions={{\n                headerShown: false\n            }}\n        >\n            <Stack.Screen name=\"Authentication\" component={Authentication} />\n        </Stack.Navigator>\n    );\n};\n\nexport default AuthStack;\n","import { logEvent } from 'firebase/analytics';\nimport React from 'react';\nimport { Image, Dimensions, StyleSheet } from 'react-native';\nimport Carousel from 'react-native-banner-carousel';\nimport { analytics } from '../firebase/firebase';\n\nconst BannerWidth = Dimensions.get('window').width;\nconst BannerHeight = 260; // Adjust the height as needed\n\nconst BannerCarousel = ({ data }) => {\n    const renderPage = (image, index) => (\n        <Image key={index} source={{ uri: image }} style={styles.bannerImage} />\n    );\n\n    return (\n        <Carousel\n            autoplay\n            autoplayTimeout={5000}\n            loop\n            index={0}\n            pageSize={BannerWidth}\n        >\n            {data.map((image, index) => renderPage(image, index))}\n        </Carousel>\n    );\n};\n\nconst styles = StyleSheet.create({\n    bannerImage: {\n        width: BannerWidth,\n        height: BannerHeight,\n        // Add any additional styling for your images here\n    },\n    // You can add additional styles if needed\n});\n\nexport default BannerCarousel;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { View, Text, FlatList, TouchableOpacity, StyleSheet, Image, RefreshControl, Dimensions } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { collection, getDocs, getFirestore, query } from 'firebase/firestore'\nimport Animated, { useSharedValue, useAnimatedStyle, withSpring } from 'react-native-reanimated';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { analytics, db } from '../firebase/firebase';\nimport BannerCarousel from '../components/BannerCarousel';\nimport { logEvent } from 'firebase/analytics';\n\nconst { width } = Dimensions.get('window');\n\nconst Home = () => {\n    const { userToken, userInfo } = useUser();\n    const [ads, setAds] = useState([]);\n    const [banners, setBanners] = useState([]);\n    const [refreshing, setRefreshing] = useState(false);\n    const navigation = useNavigation();\n    const [bannersLoading, setBannersLoading] = useState(true);\n    useEffect(() => {\n        fetchAds();\n        fetchBanners()\n\n    }, []);\n\n    const fetchAds = async () => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/rentpost/getAllPosts`);\n            if (response.ok) {\n                const data = await response.json();\n                setAds(data);\n            } else {\n                console.error('Failed to fetch ad posts');\n            }\n        } catch (error) {\n            console.error('Error fetching ad posts:', error);\n        } finally {\n            setRefreshing(false);\n        }\n    };\n\n    const fetchBanners = async () => {\n        try {\n            setBannersLoading(true);\n            const bannersQuery = query(collection(db, 'banners'));\n            const bannersSnapshot = await getDocs(bannersQuery);\n            const fetchedBanners = bannersSnapshot.docs.map(doc => doc.data().link);\n            setBanners(fetchedBanners);\n        } catch (error) {\n            console.error('Error fetching banners:', error);\n        } finally {\n            setBannersLoading(false);\n        }\n    };\n\n    const renderAdCard = ({ item }) => (\n        <AnimatedCard item={item} onPress={handleAdPress} />\n    );\n\n    const handleAdPress = (ad) => {\n        logEvent(analytics, \"Post OnClick\", (ad));\n        navigation.navigate('SingleScreenAd', { ad });\n    };\n\n    const onRefresh = useCallback(() => {\n        setRefreshing(true);\n        fetchAds();\n    }, []);\n\n    return (\n        <>\n            <View style={styles.container}>\n                {!bannersLoading && banners.length > 0 && <BannerCarousel data={banners} />}\n                <FlatList\n                    data={ads}\n                    keyExtractor={(item) => item._id}\n                    renderItem={renderAdCard}\n                    contentContainerStyle={styles.adList}\n                    numColumns={2}\n                    refreshControl={\n                        <RefreshControl\n                            refreshing={refreshing}\n                            onRefresh={onRefresh}\n                            tintColor=\"#007DBC\"\n                        />\n                    }\n                />\n            </View>\n        </>\n    );\n};\n\n// const BannerCarousel = ({ data }) => {\n//     const renderItem = ({ item }) => (\n//         <Image source={{ uri: item }} style={styles.bannerImage} />\n//     );\n\n//     return (\n//         <Carousel\n//             data={data}\n//             renderItem={renderItem}\n//             sliderWidth={width}\n//             itemWidth={width}\n//             loop\n//             autoplay\n//             style={{}}\n//         />\n//     );\n// };\n\nconst AnimatedCard = ({ item, onPress }) => {\n    const scale = useSharedValue(1);\n    const lastPress = useRef(Date.now());\n\n    const animatedStyles = useAnimatedStyle(() => {\n        return {\n            transform: [{ scale: scale.value }],\n        };\n    });\n\n    const animatedImageStyles = useAnimatedStyle(() => {\n        return {\n            transform: [\n                { perspective: 1000 },\n                { rotateY: `${scale.value * 0}deg` },\n            ],\n        };\n    });\n\n    const handlePress = () => {\n        const now = Date.now();\n        if (now - lastPress.current > 300) { // Prevent multiple rapid presses\n            lastPress.current = now;\n            onPress(item);\n        }\n    };\n\n    const handlePressIn = () => {\n        scale.value = withSpring(1.05);\n    };\n\n    const handlePressOut = () => {\n        scale.value = withSpring(1);\n    };\n\n    return (\n        <Animated.View style={[styles.card, animatedStyles]}>\n            <TouchableOpacity\n                activeOpacity={1}\n                onPress={handlePress}\n                onPressIn={handlePressIn}\n                onPressOut={handlePressOut}\n                delayPressIn={100} // Add delay here\n                style={styles.touchable}\n            >\n                <LinearGradient colors={['#005AAA', '#007DBC']} style={styles.gradient}>\n                    <Animated.Image source={{ uri: item.images[0] }} style={[styles.adImage, animatedImageStyles]} />\n                    <View style={styles.adDetails}>\n                        <Text style={styles.adTitle}>{item.adTitle}</Text>\n                        <View style={styles.adInfo}>\n                            <Text style={styles.adPrice}>Price: ₹{item.price}</Text>\n                            <Text style={styles.adBedrooms}>{item.bedrooms} {item.location}</Text>\n                        </View>\n                    </View>\n                </LinearGradient>\n            </TouchableOpacity>\n        </Animated.View>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n    bannerImage: {\n        width: '100%',\n        height: 200,\n    },\n    adList: {\n        padding: 8,\n    },\n    touchable: {\n        flex: 1,\n    },\n    card: {\n        flex: 0.5,\n        margin: 8,\n        borderRadius: 15,\n        overflow: 'hidden',\n        backgroundColor: '#fff',\n        elevation: 6,\n        shadowColor: 'rgba(0,0,0,0.15)',\n        shadowOffset: { width: 0, height: 3 },\n        shadowOpacity: 1,\n        shadowRadius: 6,\n        borderColor: '#f0f0f0', // Light grey border\n        borderWidth: 1, // Border width\n        fontFamily: 'open-sans-regular',\n    },\n    adImage: {\n        width: '100%',\n        height: 140,\n        backfaceVisibility: 'hidden',\n        borderTopLeftRadius: 15, // Match border radius of card\n        borderTopRightRadius: 15, // Match border radius of card\n    },\n    adDetails: {\n        flex: 1,\n        padding: 12, // Slightly more padding\n    },\n    adTitle: {\n        fontSize: 14, // Reduced font size for title\n        //fontWeight: 'bold',\n        marginBottom: 5,\n        color: 'white', // Darker text color for better readability\n        fontFamily: 'open-sans-bold',\n    },\n    adLocation: {\n        fontSize: 14, // Reduced font size for location\n        color: 'white', // Lighter text color for location\n        marginBottom: 8, // Added margin-bottom for spacing\n    },\n    adInfo: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    adPrice: {\n        fontSize: 16,\n        color: '#deac47',\n        fontFamily: 'open-sans-bold',\n    },\n    adBedrooms: {\n        fontSize: 12,\n        color: '#999',\n    },\n});\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    Image,\n    ScrollView,\n    Switch,\n    StyleSheet,\n    Button,\n} from 'react-native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport RNPickerSelect from 'react-native-picker-select';\nimport * as ImagePicker from 'expo-image-picker'; // For image upload\nimport { RNS3 } from 'react-native-aws3'; // For S3 upload\nimport { useUser } from '../context/UserContext';\nimport axios from 'axios';\nimport Toast from 'react-native-toast-message'; // Import the toast library\nimport API_BASE_URL from '../services/config';\nimport { useNavigation, } from '@react-navigation/native';\nimport { AuthOpen } from '../hooks/useAuth';\n\nexport default function PostAdScreen({ route }) {\n    const navigation = useNavigation();\n    const { userToken, userDetails, userInfo } = useUser();\n    const [images, setImages] = useState([]); // Store image URIs\n    const [location, setLocation] = useState(route.params?.ad?.location || null);\n    const [adTitle, setAdTitle] = useState(route.params?.ad?.adTitle || '');\n    const [adDescription, setAdDescription] = useState(route.params?.ad?.adDescription || '');\n    const [phone, setPhone] = useState(route.params?.ad?.phone || '');\n    const [email, setEmail] = useState(route.params?.ad?.email || '');\n    const [price, setPrice] = useState(route.params?.ad?.price || 0);\n    const [maxResidents, setMaxResidents] = useState(route.params?.ad?.maxResidents || 1);\n    const [preference, setPreference] = useState(route.params?.ad?.preference || null);\n    const [isMaleOnly, setIsMaleOnly] = useState(route.params?.ad?.isMaleOnly || false);\n    const [isFurnished, setIsFurnished] = useState(route.params?.ad?.isFurnished || false);\n    const [hasAttachedBathroom, setHasAttachedBathroom] = useState(\n        route.params?.ad?.hasAttachedBathroom || false\n    );\n    const [isBachelorsAllowed, setIsBachelorsAllowed] = useState(\n        route.params?.ad?.isBachelorsAllowed || false\n    );\n    const [loading, setLoading] = useState(false); // Loading state\n    const handleImageUpload = async () => {\n        const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n        if (permissionResult.granted === false) {\n            alert('Permission to access camera roll is required!');\n            return;\n        }\n\n        const pickerResult = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n            multiple: true, // Allow selecting multiple images\n        });\n        if (!pickerResult.cancelled) {\n            // Create a new array with the selected image URIs\n            const newImages = [...images, pickerResult.assets[0].uri];\n            setImages(newImages);\n        }\n    };\n\n    const uploadImagesToS3 = async () => {\n\n        Toast.show({\n            type: 'error',\n            text1: 'Error Uploading Image',\n            text2: 'Please try again later.',\n        });\n        let s3Images = [];\n\n        for (const imageUri of images) {\n            const options = {\n                keyPrefix: 'uploads/',\n                bucket: 'primecaves',\n                region: 'ap-south-1',\n                accessKey: 'AKIARM6FSFR7MWP7YQUY',\n                secretKey: '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',\n                successActionStatus: 201,\n            };\n            const file = {\n                uri: imageUri,\n                name: `${userToken.toString()}-${Date.now()}.jpeg`,\n                type: 'image/jpeg',\n            };\n\n            try {\n                const response = await RNS3.put(file, options);\n                if (response.status !== 201) {\n                    throw new Error('Failed to upload image to S3');\n                }\n\n                const s3ImageUrl = response.body.postResponse.location;\n                s3Images.push(s3ImageUrl);\n            } catch (error) {\n                console.error('Error uploading image:', error);\n                // Show a toast message for the error\n                Toast.show({\n                    type: 'error',\n                    text1: 'Error Uploading Image',\n                    text2: 'Please try again later.',\n                });\n\n            }\n        }\n\n        return s3Images;\n    };\n\n\n    const handleSubmit = async () => {\n        try {\n            let s3Images = [];\n            // Upload images to S3 and wait for the operation to complete\n            if (images) {\n                s3Images = await uploadImagesToS3();\n            }\n            const postData = {\n                images: s3Images,\n                location,\n                adTitle,\n                adDescription,\n                phone,\n                email,\n                maxResidents,\n                preference,\n                isMaleOnly,\n                isFurnished,\n                hasAttachedBathroom,\n                isBachelorsAllowed,\n                price,\n                userId: userDetails._id,\n                user: {\n                    firebaseId: userInfo.firebaseId,\n                    gender: userDetails.gender,\n                    image: userDetails.image,\n                    name: userDetails.name,\n                    phone: userDetails.phoneNumber\n                }\n            };\n            setLoading(true);\n            if (route.params?.ad) {\n                // If route.params.ad exists, it means we're updating an existing ad\n                const response = await axios.put(\n                    `${API_BASE_URL}/rentpost/update/${route.params.ad._id}`,\n                    postData\n                );\n\n                // Check the response status and show a success or error toast\n                if (response.status === 200) {\n                    // Ad updated successfully\n                    console.log('Rental post updated successfully.');\n                    Toast.show({\n                        type: 'success',\n                        text1: 'Rental Post Updated',\n                        text2: 'Your rental post has been successfully updated.',\n                    });\n                    navigation.navigate('HomeTabNavigator');\n                } else {\n                    console.error('Failed to update rental post.');\n                    Toast.show({\n                        type: 'error',\n                        text1: 'Error Updating Rental Post',\n                        text2: 'Please try again later.',\n                    });\n                }\n            } else {\n                // If route.params.ad does not exist, it means we're creating a new ad\n                const response = await axios.post(`${API_BASE_URL}/rentpost/create`, postData);\n\n                // Check the response status and show a success or error toast\n                if (response.status === 201) {\n                    // Ad created successfully\n                    console.log('Rental post created successfully.');\n                    Toast.show({\n                        type: 'success',\n                        text1: 'Rental Post Created',\n                        text2: 'Your rental post has been successfully created.',\n                    });\n                    // navigation.navigate('HomeTabNavigator')\n                    navigation.goBack()\n                } else {\n                    console.error('Failed to create rental post.');\n                    Toast.show({\n                        type: 'error',\n                        text1: 'Error Creating Rental Post',\n                        text2: 'Please try again later.',\n                    });\n                }\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            // Handle error appropriately (e.g., show an error message to the user)\n            Toast.show({\n                type: 'error',\n                text1: 'Error',\n                text2: 'Please try again later.',\n            });\n        } finally {\n            // Set loading state back to false when done\n            setLoading(false);\n        }\n    };\n\n    return (\n        <ScrollView style={styles.container}>\n            <View style={styles.imageContainer}>\n                {/* Custom back button with Ionicons */}\n                <TouchableOpacity\n                    style={styles.backButton}\n                    onPress={() => navigation.goBack()}\n                >\n                    <Ionicons name=\"arrow-back\" size={24} color=\"#007DBC\" />\n                </TouchableOpacity>\n                {/* ... Your existing JSX ... */}\n            </View>\n            <View style={styles.imageContainer}>\n                <Text style={styles.heading}>Upload Photos</Text>\n                <TouchableOpacity style={styles.imageUploadButton} onPress={handleImageUpload}>\n                    <Text style={styles.uploadButtonText}>Select Images</Text>\n                </TouchableOpacity>\n                <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n                    {images.map((imageUri, index) => (\n                        <Image key={index} source={{ uri: imageUri }} style={styles.image} />\n                    ))}\n                </ScrollView>\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Location</Text>\n                <RNPickerSelect\n                    placeholder={{ label: 'Select Location', value: null }}\n                    onValueChange={(value) => setLocation(value)}\n                    items={[\n                        { label: 'Patia', value: 'Patia' },\n                        { label: 'Nayapali', value: 'Nayapali' },\n                        { label: 'CSpur', value: 'CSpur' },\n                        { label: 'Master Canteen', value: 'Master Canteen' },\n                    ]}\n                    style={pickerSelectStyles}\n                    value={location}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Ad Title</Text>\n                <TextInput\n                    style={styles.input}\n                    value={adTitle}\n                    onChangeText={setAdTitle}\n                    placeholder=\"Enter Ad Title\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Ad Description</Text>\n                <TextInput\n                    style={[styles.input, styles.multilineInput]}\n                    value={adDescription}\n                    onChangeText={setAdDescription}\n                    multiline\n                    placeholder=\"Enter Ad Description\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Phone Number</Text>\n                <TextInput\n                    style={styles.input}\n                    value={phone}\n                    onChangeText={setPhone}\n                    keyboardType=\"numeric\"\n                    placeholder=\"Enter Phone Number\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Email</Text>\n                <TextInput\n                    style={styles.input}\n                    value={email}\n                    onChangeText={setEmail}\n                    keyboardType=\"email-address\"\n                    placeholder=\"Enter Email\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Price</Text>\n                <TextInput\n                    style={styles.input}\n                    value={price}\n                    onChangeText={setPrice}\n                    keyboardType=\"numeric\"\n                    placeholder=\"Enter Price\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Maximum Residents</Text>\n                <View style={styles.stepperContainer}>\n                    <TouchableOpacity\n                        style={styles.stepperButton}\n                        onPress={() => maxResidents > 1 && setMaxResidents(maxResidents - 1)}\n                    >\n                        <Text style={styles.stepperButtonText}>-</Text>\n                    </TouchableOpacity>\n                    <Text style={styles.stepperValue}>{maxResidents}</Text>\n\n                    <TouchableOpacity\n                        style={styles.stepperButton}\n                        onPress={() => setMaxResidents(maxResidents + 1)}\n                    >\n                        <Text style={styles.stepperButtonText}>+</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Preference</Text>\n                <RNPickerSelect\n                    value={preference}\n                    placeholder={{ label: 'Select Preference', value: null }}\n                    onValueChange={(value) => setPreference(value)}\n                    items={[\n                        { label: 'Family', value: 'Family' },\n                        { label: 'Student', value: 'Student' },\n                        { label: 'Working Professional', value: 'Working Professional' },\n                    ]}\n                    style={pickerSelectStyles}\n\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Room for Male Only</Text>\n                <Switch\n                    value={isMaleOnly}\n                    onValueChange={setIsMaleOnly}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Furnishing</Text>\n                <Switch\n                    value={isFurnished}\n                    onValueChange={setIsFurnished}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Attached Bathroom</Text>\n                <Switch\n                    value={hasAttachedBathroom}\n                    onValueChange={setHasAttachedBathroom}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Bachelors Allowed</Text>\n                <Switch\n                    value={isBachelorsAllowed}\n                    onValueChange={setIsBachelorsAllowed}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <TouchableOpacity\n                style={styles.submitButton}\n                onPress={handleSubmit}\n                disabled={loading} // Disable the button while loading\n            >\n                <Text style={styles.submitButtonText}>{loading ? 'Loading...' : 'Submit'}</Text>\n            </TouchableOpacity>\n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16,\n        backgroundColor: '#fff',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        color: '#007DBC',\n    },\n    imageContainer: {\n        marginBottom: 20,\n    },\n    imageUploadButton: {\n        backgroundColor: '#007DBC',\n        padding: 10,\n        borderRadius: 5,\n        alignItems: 'center',\n        bottom: 8,\n    },\n    uploadButtonText: {\n        color: 'white',\n        fontWeight: 'bold',\n    },\n    image: {\n        width: 100,\n        height: 100,\n        marginRight: 10,\n        borderRadius: 5,\n    },\n    fieldContainer: {\n        marginBottom: 20,\n    },\n    label: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginBottom: 5,\n        color: '#007DBC',\n    },\n    input: {\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n        padding: 10,\n    },\n    multilineInput: {\n        minHeight: 100,\n        textAlignVertical: 'top',\n    },\n    stepperContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    stepperButton: {\n        backgroundColor: '#007DBC',\n        padding: 8,\n        borderRadius: 20,\n        marginHorizontal: 5,\n    },\n    stepperButtonText: {\n        color: 'white',\n        fontSize: 18,\n    },\n    stepperValue: {\n        fontSize: 16,\n    },\n    submitButton: {\n        backgroundColor: '#007DBC',\n        padding: 16,\n        borderRadius: 5,\n        alignItems: 'center',\n    },\n    submitButtonText: {\n        color: 'white',\n        fontWeight: 'bold',\n        fontSize: 18,\n    },\n});\n\n\nconst pickerSelectStyles = StyleSheet.create({\n    inputIOS: {\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n        paddingVertical: 12,\n        paddingHorizontal: 10,\n        paddingRight: 30, // to ensure the text is never behind the icon\n        marginBottom: 20,\n    },\n    inputAndroid: {\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n        paddingVertical: 10,\n        paddingHorizontal: 10,\n        paddingRight: 30, // to ensure the text is never behind the icon\n        marginBottom: 20,\n    },\n});\n","import React, { useEffect, useCallback, useState } from 'react';\nimport {\n    View,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    Modal,\n    StyleSheet,\n    Platform,\n    ActivityIndicator,\n    Image,\n    ScrollView\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport { RNS3 } from 'react-native-aws3';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport Toast from 'react-native-toast-message';\nimport Autocomplete from 'react-native-autocomplete-input';\nimport { AuthOpen } from '../hooks/useAuth'\nimport { serverTimestamp, updateDoc, doc, setDoc } from 'firebase/firestore';\nimport { getAuth, updateProfile as updateAuthProfile } from 'firebase/auth';\nimport { db } from '../firebase/firebase';\nimport * as Location from 'expo-location';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport maleIcon from '../assets/images/male.png';\nimport femaleIcon from '../assets/images/female.png';\nimport student from '../assets/images/student.png';\nimport professionals from '../assets/images/professionals.png';\nimport family from '../assets/images/family.png';\nconst domains = ['gmail.com', 'hotmail.com', 'yahoo.com', 'outlook.com'];\n\nconst UpdateProfileModal = ({ isVisible, onDismiss, isUserExists }) => {\n    const { setUserInfoToStore } = useUser()\n    const { userToken, userInfo } = useUser();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [userId, setUserId] = useState('');\n    const [gender, setGender] = useState('');\n    const [tenantType, setTenantType] = useState('');\n    const [image, setImage] = useState(null);\n    const [isLoading, setLoading] = useState(false);\n    const [suggestions, setSuggestions] = useState([]);\n    const [fieldsDisabled, setFieldsDisabled] = useState(true);\n    const [userLocation, setUserLocation] = useState(''); // State variable to store user's location\n    const handleGenderSelect = (selectedGender) => {\n        setGender(selectedGender);\n    };\n\n    const requestLocationPermission = async () => {\n        try {\n            const { status } = await Location.requestForegroundPermissionsAsync();\n            if (status !== 'granted') {\n                // Handle permission denied or other errors\n                console.error('Location permission denied.');\n                return;\n            }\n            const location = await Location.getCurrentPositionAsync({});\n            setUserLocation(location); // Store user's location in state\n        } catch (error) {\n            console.error('Error getting user location:', error);\n        }\n    };\n\n    const updateProfileToFirebase = async ({ name, pic, email, isEdit }) => {\n        try {\n            const newDocRef = doc(db, 'user_profiles', userInfo.firebaseId);\n            const handler = isEdit ? updateDoc : setDoc;\n            await handler(newDocRef, {\n                id: userInfo.firebaseId,\n                name,\n                pic,\n                email,\n                phone: userToken.toString(),\n                timestamp: serverTimestamp(),\n            });\n            const auth = getAuth();\n            await updateAuthProfile(auth.currentUser, {\n                displayName: name,\n                photoURL: pic,\n            });\n            console.log('Updated to Firestore and Firebase Authentication');\n        } catch (error) {\n            console.error('Error updating profile:', error);\n        }\n    };\n\n    const handleTenantTypeSelect = (selectedType) => {\n        setTenantType(selectedType);\n    };\n\n    const handleChooseImage = async () => {\n        const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n        if (permissionResult.granted === false) {\n            alert('Permission to access media library is required!');\n            return;\n        }\n\n        const pickerResult = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n        });\n\n        if (!pickerResult.cancelled) {\n            const selectedImageUri = pickerResult.assets[0].uri;\n            setImage(selectedImageUri);\n        }\n    };\n\n    const handleEmailChange = (text) => {\n        setEmail(text);\n        const query = text.split('@')[1];\n        const filteredDomains = domains.filter((domain) => domain.includes(query));\n        setSuggestions(filteredDomains);\n    };\n\n    const handleUpdate = useCallback(async () => {\n        setLoading(true);\n        let s3ImageUrl = null;\n        const isEdit = userId !== ''\n        try {\n            if (image) {\n                const options = {\n                    keyPrefix: 'uploads/',\n                    bucket: 'primecaves',\n                    region: 'ap-south-1',\n                    accessKey: 'AKIARM6FSFR7MWP7YQUY',\n                    secretKey: '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',\n                    successActionStatus: 201,\n                };\n                let file;\n                if (Platform.OS === 'web') {\n                    const blob = await fetch(image).then((res) => res.blob());\n                    file = {\n                        uri: image,\n                        name: `${userToken.toString()}.jpeg`,\n                        type: 'image/jpeg',\n                        blob,\n                    };\n                } else {\n                    file = {\n                        uri: image,\n                        name: `${userToken.toString()}.jpeg`,\n                        type: 'image/jpeg',\n                    };\n                }\n                const response = await RNS3.put(file, options);\n                if (response.status !== 201) {\n                    throw new Error('Failed to upload image to S3');\n                }\n                s3ImageUrl = response.body.postResponse.location;\n            }\n            const apiEndpoint = isEdit\n                ? `${API_BASE_URL}/user/update/${userId}`\n                : `${API_BASE_URL}/user/register`;\n            const method = isEdit ? 'PUT' : 'POST'\n            const response = await fetch(apiEndpoint, {\n                method,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    tenantType,\n                    image,\n                    name,\n                    email,\n                    gender,\n                    phoneNumber: userToken.toString(),\n                    firebaseId: userInfo.firebaseId,\n                    location: userLocation,\n                }),\n            });\n\n            if (response.ok) {\n                const responseData = await response.json();\n                onDismiss();\n                updateProfileToFirebase({ name, pic: image, email, isEdit })\n                setUserInfoToStore({\n                    name, image, email,\n                    gender, phone: phoneNumber,\n                    firebaseId: userInfo.firebaseId,\n                    tenantType,\n                    subscriptionStartDate: isEdit ? userInfo.subscriptionStartDate : 'NA',\n                    location: userLocation,\n                })\n                Toast.show({\n                    type: 'success',\n                    text1: 'Success',\n                    text2: 'Profile saved successfully',\n                });\n\n            } else {\n                console.error('Save failed');\n            }\n        } catch (error) {\n            console.error('Error during save:', error);\n            Toast.show({\n                type: 'error',\n                text1: 'Error',\n                text2: 'Profile failed to save',\n            });\n        } finally {\n            setLoading(false);\n        }\n    }, [userToken, name, email, gender, image, tenantType]);\n\n    useEffect(() => {\n        requestLocationPermission();\n        if (isVisible && isUserExists) {\n            setFieldsDisabled(true);\n            const fetchUserDetails = async () => {\n                try {\n                    const response = await fetch(`${API_BASE_URL}/user/getUserByPhoneNumber/${userToken.toString()}`);\n                    if (response.ok) {\n                        const userData = await response.json();\n                        setName(userData.name || '');\n                        setEmail(userData.email || '');\n                        setGender(userData.gender || '');\n                        setTenantType(userData.tenantType || '');\n                        setUserId(userData._id || '');\n                        setFieldsDisabled(false);\n                    } else {\n                        console.error('Failed to fetch user details');\n                    }\n                } catch (error) {\n                    console.error('Error fetching user details:', error);\n                    setFieldsDisabled(false);\n                }\n            };\n\n            fetchUserDetails();\n        }\n    }, [isVisible, userToken]);\n\n\n    const updateButtonStyle = [\n        styles.actionButton,\n        { backgroundColor: '#007DBC', left: 5 }, // Set background color to #007DBC\n    ];\n\n    return (\n        <Modal visible={isVisible} transparent={true} animationType=\"slide\">\n            <View style={styles.modalContainer}>\n                <LinearGradient // Use LinearGradient for the gradient background\n                    colors={['#007DBC', '#005CA1']} // Gradient colors\n                    style={styles.linearGradient}\n                >\n                    <View style={styles.modalContent}>\n                        {isUserExists && ( // Conditionally render the close icon\n                            <TouchableOpacity\n                                style={styles.closeButton}\n                                onPress={onDismiss}\n                            >\n                                <MaterialCommunityIcons\n                                    name=\"close\"\n                                    size={24}\n                                    color=\"white\" // Set the close icon color to white\n                                />\n                            </TouchableOpacity>\n                        )}\n                        <Text style={styles.modalTitle}>Update Profile</Text>\n                        <View style={styles.chooseImageButton}>\n                            <MaterialCommunityIcons\n                                name=\"camera\"\n                                size={24}\n                                color=\"#007DBC\"\n                                style={{ marginRight: 8 }}\n                            />\n                            <Text style={styles.chooseImageText}>Choose Image</Text>\n                        </View>\n                        {image && (\n                            <Image\n                                source={{ uri: image }}\n                                style={styles.profileImage}\n                            />\n                        )}\n                        <TextInput\n                            style={styles.input}\n                            placeholder=\"Name\"\n                            placeholderTextColor={\"#E7E0C3\"}\n                            value={name}\n                            onChangeText={(text) => setName(text)}\n                        />\n                        <TextInput\n                            style={styles.input}\n                            placeholder=\"Email\"\n                            placeholderTextColor={\"#E7E0C3\"}\n                            value={email}\n                            onChangeText={handleEmailChange}\n                        />\n                        <View style={styles.genderContainer}>\n                            <Text style={styles.label}>Gender</Text>\n                            <View style={styles.radioButtons}>\n                                <TouchableOpacity\n                                    onPress={() => handleGenderSelect('male')}\n                                    style={[\n                                        styles.radioButton,\n                                        gender === 'male' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={maleIcon}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={gender === 'male' ? styles.radioButtonTextSelected : styles.radioButtonText}>Male</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity\n                                    onPress={() => handleGenderSelect('female')}\n                                    style={[\n                                        styles.radioButton,\n                                        gender === 'female' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={femaleIcon}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={gender === 'female' ? styles.radioButtonTextSelected : styles.radioButtonText}>Female</Text>\n                                </TouchableOpacity>\n                            </View>\n                        </View>\n                        <View style={styles.tenantTypeContainer}>\n                            <Text style={styles.label}>I am</Text>\n                            <View style={styles.radioButtonsTenantType}>\n                                <TouchableOpacity\n                                    onPress={() => handleTenantTypeSelect('student')}\n                                    style={[\n                                        styles.radioButtonTenantType,\n                                        tenantType === 'student' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={student}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={tenantType === 'student' ? styles.radioButtonTextSelected : styles.radioButtonText}>Student</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity\n                                    onPress={() => handleTenantTypeSelect('professional')}\n                                    style={[\n                                        styles.radioButtonTenantType,\n                                        tenantType === 'professional' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={professionals}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={tenantType === 'professional' ? styles.radioButtonTextSelected : styles.radioButtonText}>Working Professional</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity\n                                    onPress={() => handleTenantTypeSelect('family')}\n                                    style={[\n                                        styles.radioButtonTenantType,\n                                        tenantType === 'family' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={family}\n                                        style={{ width: 24, height: 24, }}\n                                    />\n                                    <Text style={tenantType === 'family' ? styles.radioButtonTextSelected : styles.radioButtonText}>Family</Text>\n                                </TouchableOpacity>\n                            </View>\n                        </View>\n                        {isLoading ? (\n                            <ActivityIndicator size=\"small\" color=\"#dddddd\" style={styles.loader} />\n                        ) : (\n                            <View style={styles.buttonContainer}>\n                                <TouchableOpacity\n                                    style={updateButtonStyle}\n                                    onPress={handleUpdate}\n                                >\n                                    <Text style={styles.buttonText}>Save</Text>\n                                </TouchableOpacity>\n                            </View>\n                        )}\n                    </View>\n                </LinearGradient>\n            </View>\n        </Modal>\n    );\n};\nconst styles = StyleSheet.create({\n    tenantTypeContainer: {\n        width: '100%',\n        marginBottom: 10,\n    },\n    actionButton: {\n        padding: 10,\n        borderRadius: 5,\n        width: '100%',\n        alignItems: 'center',\n    },\n    loader: {\n        marginTop: 10,\n    },\n    buttonText: {\n        color: 'white',\n        fontFamily: 'open-sans-bold'\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    profileImage: {\n        width: 100,\n        height: 100,\n        borderRadius: 50,\n        marginTop: 10,\n    },\n    scrollViewContent: {\n        flexGrow: 1, // Allow the content to grow vertically\n    },\n    modalContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    },\n    linearGradient: {\n        width: '80%', // Set the width to 100% to cover the entire modal\n    },\n    modalContent: {\n        padding: 20,\n        borderRadius: 10,\n        alignItems: 'center',\n        backgroundColor: 'transparent', // Make the content background transparent\n    },\n    modalTitle: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        color: 'white', // Set the text color to white\n        fontFamily: 'open-sans-regular',\n    },\n    input: {\n        width: '100%',\n        borderWidth: 1,\n        borderColor: 'white', // Set the border color to white\n        borderRadius: 10,\n        padding: 15,\n        marginBottom: 20,\n        fontSize: 16,\n        backgroundColor: 'transparent', // Make the input background transparent\n        color: 'white', // Set the text color to white\n        fontFamily: 'open-sans-light',\n    },\n    closeButton: {\n        position: 'absolute',\n        top: 10,\n        right: 10,\n        zIndex: 1,\n    },\n    chooseImageButton: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: 10,\n    },\n    chooseImageText: {\n        color: '#007DBC',\n        fontFamily: 'open-sans-bold'\n    },\n    genderContainer: {\n        width: '100%',\n        marginBottom: 10,\n    },\n    label: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginBottom: 5,\n        color: 'white'\n    },\n    radioButtons: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n\n    },\n    radioButton: {\n        flexDirection: 'row', // Make it horizontal\n        alignItems: 'center',\n        borderWidth: 0.4,\n        borderRadius: 5,\n        padding: 10,\n        marginRight: 10,\n    },\n    radioButtonSelected: {\n        borderColor: '#dddddd',\n        borderRadius: 5,\n        borderWidth: 1,\n        backgroundColor: '#007DBC', // Set background color to blue on selection\n    },\n    radioButtonText: {\n        color: 'white',\n        fontFamily: 'open-sans-regular',\n        marginLeft: 10,\n    },\n    radioButtonTextSelected: {\n        color: 'white', // Set text color to white on selection\n        marginLeft: 10, // Add margin to separate text from icon\n        fontFamily: 'open-sans-regular'\n\n    },\n    radioButtonsTenantType: { // Center items vertically\n        justifyContent: 'space-between',\n        marginBottom: 20, // Add margin to separate options\n    },\n\n    radioButtonTenantType: {\n        flexDirection: 'row',\n        borderWidth: 0.4,\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10, // Add margin to separate options\n    },\n\n});\n\nexport default UpdateProfileModal;\n\n","const getMatchedUserInfo = (users, userLoggedIn) => {\n  const newUsers = { ...users };\n  delete newUsers[userLoggedIn];\n\n  const [id, user] = Object.entries(newUsers).flat();\n\n  return { id, ...user };\n};\n\nexport default getMatchedUserInfo;\n","const generateId = (id1, id2) => {\n    if (id1 > id2) {\n        return id1 + id2\n    } else {\n        return id2 + id1\n    }\n}\n\nexport default generateId;","\nimport React, { useEffect, useState } from \"react\";\nimport { View, Text, TouchableOpacity, Image, StyleSheet } from \"react-native\";\n\nimport { useNavigation } from '@react-navigation/native';\nimport tw from \"tailwind-rn\";\nimport { collection, onSnapshot, orderBy, query } from \"@firebase/firestore\";\nimport { db } from \"../firebase/firebase\";\nimport getMatchedUserInfo from \"../utils/getMatchedUserInfo\";\nimport { useUser } from \"../context/UserContext\";\nimport generateId from \"../utils/generateIds\";\n\nconst ChatRow = ({ matchDetails }) => {\n  const navigation = useNavigation();\n  const { userInfo } = useUser();\n  const [lastMessage, setLastmessage] = useState(\"\");\n  const [matchedUserInfo, setMatchedUserInfo] = useState(null);\n  useEffect(() => {\n    setMatchedUserInfo(getMatchedUserInfo(matchDetails.users, userInfo.firebaseId));\n  }, [matchDetails, userInfo]);\n\n  useEffect(\n    () => {\n      if (matchedUserInfo) {\n        onSnapshot(\n          query(\n            collection(db, \"matches\",\n              generateId(userInfo.firebaseId, matchedUserInfo.id)\n              , \"messages\"),\n            orderBy(\"timestamp\", \"desc\")\n          ),\n          (snapshot) => setLastmessage(snapshot.docs[0]?.data()?.message)\n        )\n      }\n    },\n    [matchedUserInfo, db]\n  );\n  let userDetails;\n  if (matchedUserInfo) {\n    userDetails = matchDetails.users[matchedUserInfo.id];\n  }\n\n\n  const handleDirectMessage = () => {\n    navigation.navigate('MessagWithData', {\n      userDetails\n    })\n  };\n  return (\n    <TouchableOpacity\n      style={[\n        tw(\"flex-row items-center py-3 px-5 bg-white mx-3 my-1 rounded-lg\"),\n        styles.cardShadow,\n      ]}\n      onPress={handleDirectMessage}\n    >\n      {matchedUserInfo ? (\n        <>\n          <Image\n            style={tw(\"rounded-full h-16 w-16 mr-4\")}\n            source={{\n              uri:\n                matchedUserInfo?.photoUrl ||\n                'https://i.pinimg.com/736x/ff/a0/9a/ffa09aec412db3f54deadf1b3781de2a.jpg',\n            }}\n          />\n          <View>\n            <Text style={tw(\"text-lg font-bold\")}>\n              {matchedUserInfo?.name}\n            </Text>\n            <Text style={tw(\"font-light\")}>\n              {lastMessage?.length > 34\n                ? lastMessage?.substring(0, 34) + '...'\n                : lastMessage || 'Say Hi!'}\n            </Text>\n          </View>\n        </>\n      ) : (\n        <View style={tw('justify-center items-center')}>\n          <Text style={tw('text-lg text-gray-500')}>\n            Yet to have a conversation\n          </Text>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  cardShadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.41,\n    elevation: 2,\n  },\n});\n\n\nexport default ChatRow;\n","import { collection, onSnapshot, query, where } from \"@firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  View,\n  Text,\n  FlatList,\n  StyleSheet,\n} from \"react-native\";\nimport tw from \"tailwind-rn\";\nimport { AuthOpen } from \"../hooks/useAuth\";\nimport ChatRow from \"./ChatRow\";\nimport { db } from \"../firebase/firebase\";\nimport { useUser } from \"../context/UserContext\";\n\nconst ChatList = () => {\n  const [matches, setMatches] = useState([]);\n  const { userInfo } = useUser();\n  const [loading, setLoading] = useState(true);\n  useEffect(\n    () =>\n      onSnapshot(\n        query(\n          collection(db, \"matches\"),\n          where(\"usersMatched\", \"array-contains\", userInfo.firebaseId)\n        ),\n        (snapshot) =>\n          setMatches(\n            snapshot.docs.map(\n              (doc) => ({\n                id: doc.id,\n                ...doc.data(),\n              }),\n              setLoading(false)\n            )\n          )\n      ),\n    [userInfo]\n  );\n\n  return loading ? (\n    <View style={[styles.container, styles.horizontal]}>\n      <ActivityIndicator size=\"large\" color=\"#29325C\" />\n    </View>\n  ) : matches.length > 0 ? (\n    <FlatList\n      style={tw(\"h-full\")}\n      data={matches}\n      keyExtractor={(item) => item.id}\n      renderItem={({ item }) => <ChatRow matchDetails={item} />}\n    />\n  ) : (\n    <View style={tw(\"p-5\")}>\n      <Text style={tw(\"text-center text-lg\")}>No Message at the moment 😢</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n  },\n});\n\nexport default ChatList;\n","import { useNavigation } from \"@react-navigation/core\";\nimport React, { useEffect } from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport ChatList from \"../components/ChatList\";\nimport Header from \"../components/Header\";\n\nconst Chat = () => {\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView>\n      <ChatList />\n    </SafeAreaView>\n  );\n};\n\nexport default Chat;\n","import React, { useState, useEffect } from 'react';\nimport { View, TouchableOpacity, StyleSheet, Modal, Text, TextInput, FlatList, ScrollView } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport axios from 'axios';\nimport API_BASE_URL from '../services/config';\nimport { useUser } from '../context/UserContext';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport { logEvent } from 'firebase/analytics';\nimport { analytics } from '../firebase/firebase';\nconst CustomHeader = ({ navigation, onSettingPress, showBack = false }) => {\n  const { setUserInfoToStore, useToken } = useUser()\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [allLocations, setLocations] = useState([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [suggestedLocations, setSuggestedLocations] = useState([]);\n  const [topLocations, setTopLocations] = useState([]);\n\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/user/getAllLocations`); // Replace with your API endpoint\n        const { locations = [] } = response.data;\n        const fetchedLocations = locations.map(location => ({\n          label: location,\n          value: location\n        }));\n        setLocations(fetchedLocations);\n        setTopLocations(fetchedLocations.slice(0, 30));\n      } catch (error) {\n        console.error('Error fetching locations in component:', error);\n      }\n    };\n\n    fetchLocations();\n  }, []);\n\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n    const filteredLocations = allLocations.filter((location) =>\n      location.label.toLowerCase().includes(query.toLowerCase())\n    );\n    setSuggestedLocations(filteredLocations);\n  };\n\n  const clearSearch = () => {\n    setSearchQuery('');\n    setSuggestedLocations([]);\n  };\n\n  const selectLocation = (location) => {\n    logEvent(analytics, \"location changed\", location);\n    setSelectedLocation(location);\n    setModalVisible(false);\n    setSearchQuery('');\n    setSuggestedLocations([]);\n    setUserInfoToStore(location)\n  };\n\n  const renderLocationItem = ({ item }) => (\n    <TouchableOpacity style={styles.locationItem} onPress={() => selectLocation(item)}>\n      <Text style={styles.locationText}>{item.label}</Text>\n    </TouchableOpacity>\n  );\n\n  const renderTag = (item) => (\n    <TouchableOpacity style={styles.tag} onPress={() => selectLocation(item)}>\n      <Text style={styles.tagText}>{item.label}</Text>\n    </TouchableOpacity>\n  );\n\n  return (\n    <SafeAreaView edges={['top']} style={{ flex: 0, backgroundColor: 'transparent' }}>\n      <LinearGradient colors={['#007DBC', '#005AAA']} style={styles.header}>\n        <View style={styles.leftContainer}>\n          {showBack && (\n            <TouchableOpacity onPress={() => navigation.goBack()} style={styles.iconButton}>\n              <Icon name=\"arrow-back\" size={24} color=\"#fff\" />\n            </TouchableOpacity>\n          )}\n          <TouchableOpacity style={styles.selectedLocationContainer} onPress={() => setModalVisible(true)}>\n            <Text style={styles.selectedLocationText}>\n              {selectedLocation ? selectedLocation.label : 'Select Location'}\n            </Text>\n            <Icon name=\"chevron-down\" size={20} color=\"#fff\" style={styles.downIcon} />\n          </TouchableOpacity>\n        </View>\n        <TouchableOpacity onPress={onSettingPress} style={styles.iconButton}>\n          <Icon name=\"settings\" size={24} color=\"#fff\" />\n        </TouchableOpacity>\n      </LinearGradient>\n\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalView}>\n          <LinearGradient colors={['#007DBC', '#dddddd']} style={styles.modalGradient}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalHeaderText}>Select Location</Text>\n              <TouchableOpacity onPress={() => setModalVisible(false)}>\n                <Icon name=\"close\" size={24} color=\"#fff\" />\n              </TouchableOpacity>\n            </View>\n            <View style={styles.searchContainer}>\n              <TextInput\n                style={styles.searchInput}\n                placeholder=\"Search Location\"\n                placeholderTextColor=\"#fff\"\n\n                value={searchQuery}\n                onChangeText={handleSearch}\n              />\n              {searchQuery.length > 0 && (\n                <TouchableOpacity style={styles.clearIcon} onPress={clearSearch}>\n                  <Icon name=\"close-circle\" size={20} color=\"#fff\" />\n                </TouchableOpacity>\n              )}\n            </View>\n            <ScrollView showsHorizontalScrollIndicator={false} contentContainerStyle={styles.tagsContainer}>\n              {searchQuery.length > 0\n                ? suggestedLocations.map((location, index) => (\n                  <React.Fragment key={index}>\n                    {renderTag(location)}\n                  </React.Fragment>\n                ))\n                : topLocations.map((location, index) => (\n                  <React.Fragment key={index}>\n                    {renderTag(location)}\n                  </React.Fragment>\n                ))}\n            </ScrollView>\n          </LinearGradient>\n        </View>\n      </Modal>\n    </SafeAreaView>\n  );\n};\n\nconst tagSize = 90;\n\nconst styles = StyleSheet.create({\n  header: {\n    height: 60,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 10,\n    justifyContent: 'space-between',\n  },\n  leftContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  selectedLocationContainer: {\n    flexDirection: 'row',\n    marginLeft: 10,\n    alignItems: 'center',\n  },\n  downIcon: {\n    marginLeft: 5,\n  },\n  rightContainer: {\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n  iconButton: {\n    padding: 10,\n  },\n  selectedLocationText: {\n    color: '#fff',\n    fontSize: 18,\n    fontFamily: 'open-sans-regular',\n  },\n  modalView: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  modalGradient: {\n    width: '100%',\n    height: '60%',\n    padding: 20,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  modalHeaderText: {\n    color: '#fff',\n    fontSize: 18,\n    fontFamily: 'open-sans-regular',\n  },\n  searchContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    borderRadius: 10,\n    padding: 10,\n    marginTop: 20,\n  },\n  searchInput: {\n    flex: 1,\n    color: '#fff',\n    fontSize: 16,\n    fontFamily: 'open-sans-light',\n  },\n  clearIcon: {\n    marginLeft: 10,\n  },\n  locationList: {\n    marginTop: 20,\n  },\n  locationItem: {\n    padding: 10,\n    borderRadius: 5,\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    marginTop: 10,\n  },\n  locationText: {\n    color: '#fff',\n  },\n  tagsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    marginTop: 10,\n  },\n  tag: {\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    width: 170,\n    height: tagSize,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n    marginBottom: 10,\n  },\n  tagText: {\n    color: '#fff',\n    fontSize: 14,\n    textAlign: 'center',\n    fontFamily: 'open-sans-regular',\n  },\n});\n\nexport default CustomHeader;\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Modal, Pressable, TextInput } from 'react-native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useUser } from '../context/UserContext';\nimport uuid4 from 'uuid4';\nimport Home from './Home';\nimport PostAdScreen from './PostAd';\nimport UpdateProfileModal from '../components/UpdateProfileModal';\nimport API_BASE_URL from '../services/config';\nimport { AuthOpen } from '../hooks/useAuth';\nimport Chat from './Chat';\nimport CustomHeader from '../components/CustomHeader';\nconst Tab = createBottomTabNavigator();\n\nconst HomeTabNavigator = () => {\n    const navigation = useNavigation();\n    const { logout, userToken, fetchUserDetails } = useUser();\n    const { logOut } = AuthOpen();\n    const [isModalVisible, setModalVisible] = React.useState(false);\n    const [isUpdateModalVisible, setUpdateModalVisible] = React.useState(false);\n    const [isUserExists, setIsUserExists] = useState(false);\n    const [userProfileData, setUserProfileData] = React.useState({\n        name: '',\n        email: '',\n        gender: '',\n        phone: '',\n    });\n    const handleMyAds = () => {\n        navigation.navigate('UserAds')\n        setModalVisible(false)\n    }\n    const renderPopover = () => (\n        <Modal\n            visible={isModalVisible}\n            transparent={true}\n            onRequestClose={() => {\n                setModalVisible(false);\n                setUpdateModalVisible(false);\n            }}\n        >\n            <Pressable\n                style={styles.popoverBackground}\n                onPress={() => {\n                    setModalVisible(false);\n                    setUpdateModalVisible(false);\n                }}\n            >\n                <View style={styles.popoverContent}>\n\n                    <TouchableOpacity\n                        style={styles.popoverOption}\n                        onPress={handleUpdateProfile}\n                    >\n                        <Text style={styles.popoverOptionText}>Update Profile</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={styles.popoverOption}\n                        onPress={handleMyAds}\n                    >\n                        <Text style={styles.popoverOptionText}>My Ads</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={styles.popoverOption} onPress={handleLogout}>\n                        <Text style={styles.popoverOptionText}>Logout</Text>\n                    </TouchableOpacity>\n                </View>\n            </Pressable>\n        </Modal>\n    );\n\n    useEffect(() => {\n        fetchUserExistsStatus()\n    }, []);\n\n    const fetchUserExistsStatus = async () => {\n        const checkPhoneResponse = await fetch(`${API_BASE_URL}/user/check-phone/${userToken.toString()}`);\n        const checkPhoneData = await checkPhoneResponse.json();\n        if (checkPhoneData.exists) {\n            fetchUserDetails()\n        }\n        setUpdateModalVisible(!checkPhoneData.exists)\n        setIsUserExists(checkPhoneData.exists)\n    }\n\n    const toggleModal = () => {\n        setModalVisible(!isModalVisible);\n        if (isUpdateModalVisible) {\n            setUpdateModalVisible(false);\n        }\n    };\n\n\n    const handleUpdateProfile = () => {\n        setModalVisible(false);\n        const fetchedProfileData = {\n            name: 'John Doe',\n            email: 'johndoe@example.com',\n            gender: 'Male',\n        };\n\n        setUserProfileData(fetchedProfileData);\n        setUpdateModalVisible(true);\n    };\n\n    const handleLogout = () => {\n        logout();\n        logOut()\n    };\n\n    const handleDismissUpdateModal = () => {\n        setUpdateModalVisible(false)\n        fetchUserExistsStatus()\n    }\n\n    const renderCustomHeader = () => {\n        return (\n            <CustomHeader\n                onBackPress={() => navigation.goBack()}\n                onSettingPress={toggleModal}\n            />\n        );\n    };\n    return (\n        <>\n            <Tab.Navigator\n                tabBarOptions={{\n                    activeTintColor: '#007DBC',\n                    inactiveTintColor: 'gray',\n                    showLabel: true,\n                    style: styles.tabBar,\n                    headerShown: false\n                }}\n                screenOptions={({ route }) => ({\n                    // headerRight: () => (\n                    //     <TouchableOpacity onPress={toggleModal}>\n                    //         <MaterialCommunityIcons\n                    //             name=\"cog\"\n                    //             size={24}\n                    //             color=\"#000\"\n                    //             style={{ marginRight: 16 }}\n                    //         />\n                    //     </TouchableOpacity>\n                    // ),\n                    header: renderCustomHeader\n\n                })}\n            >\n                <Tab.Screen\n                    name=\"HomeTabNavigator\"\n                    component={Home}\n                    options={{\n                        title: 'Home',\n                        tabBarIcon: ({ color, focused }) => (\n                            <MaterialCommunityIcons\n                                name={focused ? 'home' : 'home-outline'}\n                                size={24}\n                                color={color}\n                            />\n                        ),\n                    }}\n                />\n                <Tab.Screen\n                    name=\"PostAdScreen\"\n                    component={PostAdScreen}\n                    options={{\n                        title: '',\n                        tabBarIcon: ({ color, focused }) => (\n                            <MaterialCommunityIcons\n                                name={focused ? 'plus-circle' : 'plus-circle'}\n                                size={55}\n                                color={focused ? '#007DBC' : \"#28a745\"}\n                            />\n                        ),\n                    }}\n                />\n                <Tab.Screen\n                    name=\"Message\"\n                    component={Chat}\n                    options={{\n                        tabBarIcon: ({ color, focused }) => (\n                            <MaterialCommunityIcons\n                                name={focused ? 'message' : 'message'}\n                                size={24}\n                                color={color}\n                            />\n                        ),\n                    }}\n                />\n            </Tab.Navigator>\n            {renderPopover()}\n            {isUpdateModalVisible && (<UpdateProfileModal\n                isVisible={isUpdateModalVisible}\n                onDismiss={handleDismissUpdateModal}\n                userProfileData={userProfileData}\n                isUserExists={isUserExists}\n                onUpdateProfile={(updatedData) => {\n                    // Handle updating the user profile here\n                    setUserProfileData(updatedData);\n                }}\n            />)}\n\n        </>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        padding: 16,\n    },\n    tabBar: {\n        backgroundColor: 'white',\n        borderTopWidth: 0,\n        elevation: 2,\n    },\n    addButton: {\n        backgroundColor: '#007DBC',\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        alignItems: 'center',\n        justifyContent: 'center',\n        bottom: 16,\n        elevation: 4,\n    },\n    addButtonText: {\n        color: 'white',\n        fontSize: 32,\n        fontWeight: 'bold',\n    },\n    popoverBackground: {\n        flex: 1,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    popoverContent: {\n        backgroundColor: '#fff',\n        padding: 16,\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: '#ccc',\n    },\n    popoverOption: {\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n    },\n    popoverOptionText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#007DBC',\n    },\n});\n\nexport default HomeTabNavigator;\n","import { Text, View } from 'react-native'\nimport React, { Component } from 'react'\n\nexport default class Default extends Component {\n    render() {\n        return (\n            <View>\n                <Text>Default</Text>\n            </View>\n        )\n    }\n}","// AdCard.js\nimport React from 'react';\nimport { View, Text, Image, TouchableOpacity, StyleSheet } from 'react-native';\n\nconst AdCard = ({ ad, onEdit, onDelete, onClaim }) => {\n    return (\n        <View style={styles.container}>\n            <Image source={{ uri: ad.images[0] }} style={styles.image} />\n            <Text style={styles.title}>{ad.adTitle}</Text>\n            <Text style={styles.location}>{ad.location}</Text>\n            <View style={styles.buttonContainer}>\n                <TouchableOpacity style={styles.button} onPress={() => onEdit(ad)}>\n                    <Text style={styles.buttonText}>Edit</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.button} onPress={() => onDelete(ad._id)}>\n                    <Text style={styles.buttonText}>Delete</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.button} onPress={() => onClaim(ad)}>\n                    <Text style={styles.buttonText}>Claim</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'white',\n        borderRadius: 10,\n        padding: 10,\n        marginBottom: 20,\n        elevation: 2,\n    },\n    image: {\n        width: '100%',\n        height: 200,\n        borderRadius: 10,\n        marginBottom: 10,\n    },\n    title: {\n        fontSize: 16,\n        fontWeight: 'bold',\n    },\n    location: {\n        fontSize: 14,\n        color: 'gray',\n        marginBottom: 10,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    button: {\n        flex: 1,\n        backgroundColor: 'blue',\n        borderRadius: 5,\n        padding: 10,\n        alignItems: 'center',\n        marginHorizontal: 5,\n    },\n    buttonText: {\n        color: 'white',\n        fontWeight: 'bold',\n    },\n});\n\nexport default AdCard;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { View, FlatList, Text, TouchableOpacity, StyleSheet, Image, ActivityIndicator, RefreshControl } from 'react-native';\nimport Modal from 'react-native-modal';\nimport AdCard from '../components/AdCard'; // Import the AdCard component\nimport API_BASE_URL from '../services/config'; // Your API base URL\nimport { FontAwesome } from '@expo/vector-icons'; // Import FontAwesome icons\nimport { useNavigation } from '@react-navigation/native'; // Import the useNavigation hook\nimport { useUser } from '../context/UserContext';\n\nconst UserAds = () => {\n    const { userDetails } = useUser();\n    const [userAds, setUserAds] = useState([]);\n    const [selectedAd, setSelectedAd] = useState(null); // To store the selected ad for the modal\n    const [isModalVisible, setModalVisible] = useState(false);\n    const [isLoading, setIsLoading] = useState(false); // To track delete operation loading state\n    const [isDeleteConfirmationVisible, setDeleteConfirmationVisible] = useState(false); // To show delete confirmation modal\n    const navigation = useNavigation(); // Get the navigation object\n    const [refreshing, setRefreshing] = useState(false);\n\n    useEffect(() => {\n        // Fetch user's posted ads from the backend\n        const fetchUserAds = async () => {\n            try {\n                const response = await fetch(`${API_BASE_URL}/rentpost/user/${userDetails._id}`);\n                if (response.ok) {\n                    const data = await response.json();\n                    setUserAds(data);\n                } else {\n                    console.error('Failed to fetch user ads');\n                }\n            } catch (error) {\n                console.error('Error fetching user ads:', error);\n            }\n        };\n\n        fetchUserAds();\n    }, []);\n\n    const handleEdit = (ad) => {\n        navigation.navigate('PostAd', { ad });\n    };\n\n    const handleDelete = async (adId) => {\n        setIsLoading(true);\n\n        try {\n            // Send a request to delete the ad by its ID\n            const response = await fetch(`${API_BASE_URL}/rentpost/delete/${adId}`, {\n                method: 'DELETE',\n            });\n\n            if (response.ok) {\n                // Remove the deleted ad from the userAds state\n                setUserAds((prevAds) => prevAds.filter((ad) => ad._id !== adId));\n            } else {\n                console.error('Failed to delete ad');\n            }\n        } catch (error) {\n            console.error('Error deleting ad:', error);\n        } finally {\n            // Reset loading state\n            setIsLoading(false);\n            // Close the modal\n            setDeleteConfirmationVisible(false);\n        }\n    };\n\n    const handleClaim = (ad) => {\n        // Implement your claim logic here\n    };\n\n    const toggleModal = (ad) => {\n\n        setModalVisible(!isModalVisible);\n    };\n\n\n    const handleDeleteAd = (ad) => {\n        setSelectedAd(ad);\n        setDeleteConfirmationVisible(true)\n    }\n\n    const onRefresh = useCallback(async () => {\n        setRefreshing(true);\n\n        try {\n            // Fetch user's posted ads from the backend\n            const response = await fetch(`${API_BASE_URL}/rentpost/user/${userDetails._id}`);\n            if (response.ok) {\n                const data = await response.json();\n                setUserAds(data);\n            } else {\n                console.error('Failed to fetch user ads');\n            }\n        } catch (error) {\n            console.error('Error fetching user ads:', error);\n        } finally {\n            setRefreshing(false);\n        }\n    }, []);\n\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                {/* Back button */}\n                <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>\n                    <FontAwesome name=\"arrow-left\" size={24} color=\"black\" />\n                </TouchableOpacity>\n                <Text style={styles.headerText}>Your Ads</Text>\n            </View>\n            <FlatList\n                data={userAds}\n                keyExtractor={(item) => item._id}\n                renderItem={({ item }) => (\n                    <TouchableOpacity onPress={() => toggleModal(item)}>\n                        <AdCard ad={item} onEdit={handleEdit} onDelete={() => handleDeleteAd(item)} onClaim={handleClaim} />\n                    </TouchableOpacity>\n                )}\n                refreshControl={\n                    <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n                }\n            />\n            <Modal isVisible={isModalVisible}>\n                <View style={styles.modalContainer}>\n                    <TouchableOpacity onPress={() => setModalVisible(false)} style={styles.closeButton}>\n                        <Text style={styles.closeButtonText}>Close</Text>\n                    </TouchableOpacity>\n                    {/* Display ad details here */}\n                    {selectedAd && (\n                        <View>\n                            <Text>{selectedAd.adTitle}</Text>\n                            <Text>{selectedAd.location}</Text>\n                            <Image source={{ uri: selectedAd.images[0] }} style={styles.image} />\n                            {/* Add other ad details */}\n                        </View>\n                    )}\n                </View>\n            </Modal>\n            {/* Delete confirmation modal */}\n            <Modal isVisible={isDeleteConfirmationVisible}>\n                <View style={styles.deleteConfirmationContainer}>\n                    <Text style={styles.deleteConfirmationText}>Are you sure you want to delete this ad?</Text>\n                    <View style={styles.deleteConfirmationButtons}>\n                        <TouchableOpacity onPress={() => setDeleteConfirmationVisible(false)} style={styles.cancelButton}>\n                            <Text style={styles.cancelButtonText}>Cancel</Text>\n                        </TouchableOpacity>\n                        {isLoading ? (\n                            <ActivityIndicator size=\"small\" color=\"blue\" />\n                        ) : (\n                            <TouchableOpacity onPress={() => handleDelete(selectedAd._id)} style={styles.confirmButton}>\n                                <Text style={styles.confirmButtonText}>Delete</Text>\n                            </TouchableOpacity>\n                        )}\n                    </View>\n                </View>\n            </Modal>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16, // Add padding for the ads\n    },\n    header: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 16, // Add margin at the bottom of the header\n    },\n    backButton: {\n        marginRight: 8,\n    },\n    headerText: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    modalContainer: {\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 10,\n    },\n    closeButton: {\n        position: 'absolute',\n        top: 10,\n        right: 10,\n    },\n    closeButtonText: {\n        color: 'blue',\n        textDecorationLine: 'underline',\n    },\n    image: {\n        width: '100%',\n        height: 200,\n        borderRadius: 10,\n        marginBottom: 10,\n    },\n    deleteConfirmationContainer: {\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 10,\n    },\n    deleteConfirmationText: {\n        fontSize: 18,\n        marginBottom: 20,\n    },\n    deleteConfirmationButtons: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n    },\n    cancelButton: {\n        marginRight: 10,\n    },\n    cancelButtonText: {\n        color: 'blue',\n        textDecorationLine: 'underline',\n    },\n    confirmButton: {\n        backgroundColor: 'red',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 5,\n    },\n    confirmButtonText: {\n        color: 'white',\n    },\n});\n\nexport default UserAds;\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, Image, TouchableOpacity, ScrollView, SafeAreaView, Platform } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { db } from '../firebase/firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useUser } from '../context/UserContext';\nimport { FontAwesome } from '@expo/vector-icons';\nimport CustomHeader from '../components/CustomHeader';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nconst amenitiesMapping = [\n    { key: 'isFurnished', label: 'Furnished', icon: 'bed-outline' },\n    { key: 'hasAttachedBathroom', label: 'Attached Bathroom', icon: 'water-outline' },\n    { key: 'isMaleOnly', label: 'Male Only', icon: 'male-outline' },\n    { key: 'isBachelorsAllowed', label: 'Bachelors Allowed', icon: 'people-outline' },\n    // Add other attributes and their corresponding labels and icons here...\n];\n\nconst AdDetailsScreen = ({ route }) => {\n    const { userInfo } = useUser();\n    const { ad } = route.params;\n    const flatmatesData = ad?.flatmates || []\n    const firebaseId = ad.user.firebaseId;\n    const navigation = useNavigation();\n    const [userDetails, setUserDetails] = useState(null);\n    const [showDirectMessageButton, setShowDirectMessageButton] = useState(false);\n    const isPostedByCurrentUser = firebaseId === userInfo?.firebaseId;\n\n    useEffect(() => {\n        const fetchUserDetails = async () => {\n            try {\n                const userDoc = await getDoc(doc(db, 'user_profiles', firebaseId));\n                if (userDoc.exists()) {\n                    setUserDetails(userDoc.data());\n                    setShowDirectMessageButton(true);\n                }\n            } catch (error) {\n                console.error('Error fetching user details:', error);\n            }\n        };\n\n        if (firebaseId) {\n            fetchUserDetails();\n        }\n    }, [firebaseId]);\n\n    const handleDirectMessage = () => {\n        navigation.navigate('Message', {\n            userDetails\n        });\n    };\n\n    const handleBackButton = () => {\n        navigation.goBack();\n    };\n\n    return (\n        <SafeAreaView style={styles.flexContainer}>\n\n            <LinearGradient colors={['#007DBC', '#005AAA']} style={styles.header}>\n                <TouchableOpacity onPress={handleBackButton}>\n                    <Ionicons name=\"arrow-back\" size={24} color=\"white\" />\n                </TouchableOpacity>\n\n            </LinearGradient>\n\n\n            <ScrollView>\n                <Image source={{ uri: ad.images[0] }} style={styles.villaImage} />\n                <Text style={styles.villaName}>{ad.adTitle}</Text>\n                <Text style={styles.location}>{ad.location}</Text>\n\n                <View style={styles.offerContainer}>\n                    <FontAwesome name=\"check\" size={24} color=\"white\" style={styles.trustIcon} />\n\n                    <Text style={styles.offerText}>Verified By Rentyfy</Text>\n                </View>\n\n                <Text style={styles.description}>{ad.adDescription}</Text>\n                <View style={styles.amenitiesContainer}>\n                    {/* <Text style={styles.amenitiesTitle}>Facilities available</Text> */}\n                    <View style={styles.amenitiesList}>\n                        {amenitiesMapping.map(amenity => {\n                            if (ad[amenity.key]) {\n                                return (\n                                    <View style={styles.amenityItem} key={amenity.key}>\n                                        <Ionicons name={amenity.icon} size={24} color=\"white\" />\n                                        <Text style={styles.amenityLabel}>{amenity.label}</Text>\n                                    </View>\n                                );\n                            }\n                            return null;\n                        })}\n                    </View>\n                </View>\n                {\n                    flatmatesData.length > 0 &&\n                    (<View style={styles.flatmatesSection}>\n                        <Text style={styles.title}>Flatmates</Text>\n                        <View style={styles.flatmatesGrid}>\n                            {flatmatesData.map((flatmate, index) => (\n                                <View key={index} style={styles.flatmateCard}>\n                                    <Image source={{ uri: flatmate.image }} style={styles.flatmateImage} />\n                                    <Text style={styles.flatmateName}>{flatmate.name}</Text>\n                                    <Text style={styles.flatmateOccupation}>{flatmate.occupation}</Text>\n                                </View>\n                            ))}\n                        </View>\n                    </View>)\n                }\n            </ScrollView>\n            {!isPostedByCurrentUser && (\n                <View style={styles.footer}>\n                    <View style={styles.priceContainer}>\n                        <Text style={styles.discountedPrice}>₹{ad.price}/month</Text>\n                    </View>\n                    <TouchableOpacity onPress={handleDirectMessage} style={styles.bookNowButton}>\n                        <Text style={styles.bookNowButtonText}>\n                            Direct Message\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n            )}\n        </SafeAreaView>\n    );\n};\n\n// Styles have been merged from both sections\n\nconst styles = StyleSheet.create({\n    flexContainer: {\n        flex: 1,\n        backgroundColor: '#f8f9fa',\n        fontFamily: 'open-sans-regular'\n    },\n    container: {\n        flex: 1,\n    },\n    footer: {\n        borderTopWidth: 1,\n        borderColor: '#eaecef',\n        backgroundColor: '#fff',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        zIndex: 10,\n        padding: 16,\n        flexDirection: 'row',\n        ...(Platform.OS === 'web' ? {\n            position: 'fixed',\n            bottom: 0,\n            left: 0,\n            right: 0,\n        } : {\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            right: 0,\n        }),\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        padding: 16,\n        alignItems: 'center',\n        borderBottomWidth: 1,\n        borderBottomColor: '#eaecef',\n    },\n    icon: {\n        width: 24,\n        height: 24,\n    },\n    backButton: {\n        fontSize: 18,\n        color: '#007bff',\n    },\n    villaImage: {\n        width: '100%',\n        height: 300,\n        resizeMode: 'cover',\n    },\n    villaName: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginVertical: 8,\n        marginHorizontal: 16,\n        color: '#212529',\n        fontFamily: 'open-sans-bold'\n    },\n    location: {\n        fontSize: 16,\n        color: '#6c757d',\n        marginBottom: 8,\n        marginLeft: 16,\n        fontFamily: 'open-sans-regular'\n    },\n    offerContainer: {\n        flexDirection: 'row',\n        backgroundColor: '#007DBC',\n        padding: 12,\n        marginHorizontal: 16,\n        marginVertical: 8,\n        borderRadius: 4,\n    },\n    offerText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontFamily: 'open-sans-regular'\n    },\n    description: {\n        marginHorizontal: 16,\n        marginVertical: 8,\n        fontSize: 16,\n        color: '#212529',\n        fontFamily: 'open-sans-regular'\n    },\n    hostImage: {\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        margin: 16,\n        borderWidth: 2,\n        borderColor: '#eaecef',\n    },\n    hostName: {\n        fontSize: 18,\n        fontWeight: '500',\n        marginLeft: 16,\n        color: '#212529',\n    },\n    price: {\n        fontSize: 28,\n        fontWeight: 'bold',\n        marginHorizontal: 16,\n        marginVertical: 8,\n        color: '#28a745',\n    },\n    directMessageButton: {\n        backgroundColor: '#28a745',\n        padding: 12,\n        marginHorizontal: 16,\n        marginVertical: 8,\n        borderRadius: 4,\n        alignItems: 'center',\n    },\n    directMessageButtonText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontSize: 18,\n    },\n    postedByCurrentUserMessage: {\n        color: '#dc3545',\n        textAlign: 'center',\n        marginBottom: 10,\n        fontSize: 16,\n    },\n    amenitiesContainer: {\n        padding: 16,\n        borderBottomWidth: 1,\n        borderBottomColor: '#eaecef',\n        backgroundColor: '#fff',\n    },\n    amenitiesTitle: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#212529',\n        marginBottom: 8,\n        fontFamily: 'open-sans-bold'\n    },\n    amenitiesList: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'flex-start',\n    },\n    amenityItem: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        backgroundColor: '#007DBC', // This sets the background color to a blue shade\n        borderRadius: 16,\n        padding: 8,\n        marginRight: 8,\n        marginBottom: 8,\n    },\n    amenityLabel: {\n        marginLeft: 8,\n        fontSize: 14,\n        color: '#FFFFFF', // This sets the text color to white\n        fontFamily: 'open-sans-regular'\n    },\n    priceContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    originalPrice: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        textDecorationLine: 'line-through',\n        marginRight: 8,\n    },\n    discountedPrice: {\n        fontSize: 22,\n        fontWeight: 'bold',\n    },\n    bookNowButton: {\n        backgroundColor: '#28a745',\n        padding: 12,\n        borderRadius: 4,\n        alignItems: 'center',\n    },\n    bookNowButtonText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontSize: 18,\n    },\n    flatmateRow: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    flatmatesSection: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#e9ecef', // Changed background color for better visibility\n    },\n    title: {\n        fontSize: 24,\n        marginBottom: 20,\n        fontFamily: 'open-sans-bold'\n    },\n    flatmatesGrid: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between', // To maintain equal spacing between two cards in a row\n    },\n    flatmateCard: {\n        width: '48%', // Slightly less than half to account for any potential margins or paddings\n        marginBottom: 15,\n        padding: 10, // Added some padding\n        backgroundColor: '#fff', // White background for the card\n        borderRadius: 8, // Rounded corners\n        alignItems: 'center', // Center items horizontally\n    },\n    flatmateImage: {\n        width: 50,\n        height: 50,\n        borderRadius: 25,\n        marginBottom: 10, // Margin below the image\n    },\n    flatmateName: {\n        fontSize: 18,\n        fontWeight: '600',\n        fontFamily: 'open-sans-regular',\n        textAlign: 'center', // Center the text\n    },\n    flatmateOccupation: {\n        fontSize: 14,\n        color: 'gray',\n        fontFamily: 'open-sans-light',\n        textAlign: 'center', // Center the text\n    },\n    trustIcon: {\n        marginRight: 5,  // Some space between the icon and text\n        bottom: 2,\n    }\n});\n\n\n\nexport default AdDetailsScreen;\n","import React from \"react\";\nimport { View, Text, Image, StyleSheet } from \"react-native\";\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\n\nTimeAgo.addLocale(en)\nconst timeAgo = new TimeAgo('en-US')\n\nconst ReceiverMessage = ({ message }) => {\n\n  const date2 = new Date(message.timestamp.toDate());\n  const numericTimestamp = date2.getTime();\n  const x = timeAgo.format(numericTimestamp, 'mini')\n\n  return (\n    <View style={styles.container}>\n      <Image\n        style={styles.image}\n        source={{ uri: message.photoURL }}\n      />\n      <View style={styles.messageBubble}>\n        <Text style={styles.messageText}>{message.message}</Text>\n        <Text style={styles.timestamp}>{x} ago</Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    margin: 5,\n    alignItems: 'flex-end',\n  },\n  image: {\n    height: 40,\n    width: 40,\n    borderRadius: 20,\n    marginRight: 5,\n    borderColor: 'white',\n    borderWidth: 1,\n  },\n  messageBubble: {\n    backgroundColor: '#f0f0f0', // A soft color\n    borderRadius: 20,\n    padding: 10,\n    maxWidth: '80%',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  messageText: {\n    color: '#333', // Darker text color for contrast\n    fontSize: 16,\n  },\n  timestamp: {\n    color: '#888', // Soft color for the timestamp\n    fontSize: 12,\n    marginTop: 5,\n    alignSelf: 'flex-end',\n  }\n});\n\nexport default ReceiverMessage;\n","import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\n\nTimeAgo.addLocale(en)\nconst timeAgo = new TimeAgo('en-US')\n\nconst SenderMessage = ({ message }) => {\n\n  const date2 = new Date(message?.timestamp?.toDate());\n  const numericTimestamp = date2?.getTime();\n  const x = numericTimestamp ? timeAgo.format(numericTimestamp, 'mini') : ''\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.messageText}>{message.message}</Text>\n      <Text style={styles.timestamp}>{x ? x + ' ago' : 'sending...'}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#4D7EA8', // A calm blue tone\n    borderRadius: 15,\n    padding: 10,\n    marginVertical: 5,\n    marginRight: 10,\n    marginLeft: 'auto',\n    maxWidth: '80%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3,\n  },\n  messageText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    marginBottom: 2,\n  },\n  timestamp: {\n    color: '#D3E3F2', // A lighter shade for timestamp\n    fontSize: 12,\n    alignSelf: 'flex-end',\n  }\n});\n\nexport default SenderMessage;\n","import { Image, StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Ionicons } from '@expo/vector-icons'; // Make sure to install this library\n\nconst ChatHeader = ({ userDetails, navigation }) => {\n    const handleBackPress = () => {\n        navigation.goBack();\n    };\n\n    return (\n        <SafeAreaView>\n            <View style={styles.chatHeaderContainer} >\n                <TouchableOpacity onPress={handleBackPress} style={styles.backButton}>\n                    <Ionicons name=\"arrow-back\" size={24} color=\"#FFFFFF\" />\n                </TouchableOpacity>\n                {userDetails?.image && (<Image source={{ uri: userDetails.image }} style={styles.chatHeaderImage} />)}\n                <Text style={styles.chatHeaderText}>{userDetails.name}</Text>\n            </View>\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    chatHeaderContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        padding: 10,\n        backgroundColor: '#006699', // A nice shade of blue\n        borderBottomWidth: 1,\n        borderColor: '#006699', // A slightly darker blue for the border\n    },\n    chatHeaderImage: {\n        width: 40,\n        height: 40,\n        borderRadius: 20,\n        marginRight: 10,\n    },\n    chatHeaderText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#FFFFFF', // White text for better contrast and readability\n    },\n    backButton: {\n        marginRight: 10,\n    },\n});\n\nexport default ChatHeader;","import React from 'react'; // Basic React import\nimport { View, Text, TouchableOpacity, StyleSheet, ScrollView } from 'react-native'; // React Native components\n\n\nconst MessageSuggestion = ({ onSelectSuggestion }) => {\n    const suggestions = [\n        \"Hi, How are you ?\",\n        \"Hi, I am looking for this house, is it available?\",\n    ];\n\n    return (\n        <ScrollView\n\n            horizontal={true}\n            contentContainerStyle={styles.messageSuggestionContainer}>\n            {suggestions.map((text, index) => (\n                <TouchableOpacity\n                    key={index}\n                    style={styles.messageSuggestion}\n                    onPress={() => onSelectSuggestion(text)}\n                >\n                    <Text style={styles.messageSuggestionText}>{text}</Text>\n                </TouchableOpacity>\n            ))}\n        </ScrollView>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    // ... other styles\n    messageSuggestionContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        paddingVertical: 10,\n    },\n    messageSuggestion: {\n        backgroundColor: '#FFFFFF', // Blue background\n        borderRadius: 20,\n        paddingVertical: 10,\n        paddingHorizontal: 15,\n        marginHorizontal: 5,\n    },\n    messageSuggestionText: {\n        // color: '#FFFFFF', // White text\n        fontSize: 16,\n    },\n});\n\nexport default MessageSuggestion;","import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  KeyboardAvoidingView,\n  Platform,\n  FlatList,\n  Button,\n  Keyboard,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  Modal,\n  StyleSheet,\n\n} from \"react-native\";\nimport { WebView } from 'react-native-webview';\nimport axios from \"axios\"; // Import Axios for making API requests\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\nimport tw from \"tailwind-rn\";\nimport ReceiverMessage from \"../components/ReceiverMessage\";\nimport SenderMessage from \"../components/SenderMessage\";\nimport {\n  addDoc,\n  collection,\n  onSnapshot,\n  orderBy,\n  query,\n  serverTimestamp,\n} from \"@firebase/firestore\";\nimport { analytics, db } from \"../firebase/firebase\";\nimport { useUser } from \"../context/UserContext\";\nimport generateId from \"../utils/generateIds\";\nimport API_BASE_URL from \"../services/config\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport ChatHeader from \"../components/ChatHeader\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport MessageSuggestion from \"../components/MessageSuggestion\";\nimport { logEvent } from \"firebase/analytics\";\n\nconst MessageScreen = ({ route, navigation }) => {\n  //const [userInfo, setUserInfo] = useState({});\n  const { userInfo, setUserInfoToStore, fetchUserDetails } = useUser();\n  const { params: { userDetails } } = route;\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [lastMessage, setLastMessage] = useState(\"\");\n  const [scrollToEnd, setScrollToEnd] = useState(false); // To scroll to the end of the chat\n  const [showModal, setShowModal] = useState(false); // State for the modal\n  const [webviewUrl, setWebviewUrl] = useState(\n    \"https://subham-routray.mojo.page/odicult-subscription\"\n  );\n  const isWeb = Platform.OS === 'web';\n  const combinedUid = generateId(userInfo.firebaseId, userDetails.id);\n\n  useEffect(() => {\n    const fetchStateThing = async () => {\n      const existingUserInfo = await AsyncStorage.getItem('userInfo');\n      let userInfo = existingUserInfo ? JSON.parse(existingUserInfo) : {};\n    }\n    const matchDocRef = doc(db, \"matches\", combinedUid);\n    getDoc(matchDocRef)\n      .then((docSnapshot) => {\n        if (!docSnapshot.exists()) {\n          const sanitizedUserInto = {\n            image: userInfo.image,\n            email: userInfo.email,\n            phone: userInfo.phone,\n            id: userInfo.firebaseId,\n            name: userInfo.name,\n          };\n          setDoc(doc(db, \"matches\", combinedUid), {\n            users: {\n              [userInfo.firebaseId]: sanitizedUserInto,\n              [userDetails.id]: userDetails,\n            },\n            usersMatched: [userInfo.firebaseId, userDetails.id],\n            timestamp: serverTimestamp(),\n          });\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error checking document existence:\", error);\n      });\n\n    onSnapshot(\n      query(\n        collection(db, \"matches\", combinedUid, \"messages\"),\n        orderBy(\"timestamp\", \"desc\")\n      ),\n      (snapshot) =>\n        setMessages(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            ...doc.data(),\n          }))\n        )\n    );\n    fetchStateThing()\n  }, [userDetails, db]);\n\n\n  const scrollFlatListToEnd = () => {\n    setScrollToEnd(true);\n    setTimeout(() => setScrollToEnd(false), 100); // Delay to ensure scrolling to end works\n  };\n\n  const handleSendMessage = async () => {\n    if (userInfo.coins === 0 && userInfo.subscriptionStartDate === \"NA\") {\n      setShowModal(true); // Show the modal\n\n    }\n    else {\n      if (input !== \"\") {\n        const combinedUid = generateId(userInfo.firebaseId, userDetails.id);\n        await addDoc(collection(db, \"matches\", combinedUid, \"messages\"), {\n          timestamp: serverTimestamp(),\n          userId: userInfo.firebaseId,\n          name: userInfo.name,\n          photoURL: userDetails.pic || null,\n          message: input,\n        });\n        setInput(\"\");\n        scrollFlatListToEnd(); // Scroll to the end after sending a message\n        // Make an API call to updateUserCoins to update the user's coins\n        try {\n          const response = await axios.put(\n            `${API_BASE_URL}/user/updateUserCoins/${userInfo.phone}`,\n            {\n              coins: userInfo.coins // Reduce coins by 1\n            }\n          );\n          const { coinsLeft } = response.data;\n          setUserInfoToStore({\n            coins: coinsLeft\n          })\n        } catch (error) {\n          console.error(\"Error updating user coins:\", error);\n        }\n      }\n    }\n  };\n\n  const handleModalClose = () => {\n    logEvent(analytics, \"purchase banner changed\");\n    fetchUserDetails()\n    setShowModal(false)\n  }\n\n  const handleSelectSuggestion = (text) => {\n    setInput(text);\n  };\n\n  return (\n    <>\n      <ChatHeader userDetails={userDetails} navigation={navigation} />\n      <LinearGradient colors={['#dddddd', '#005AAA']} style={styles.container}>\n        <KeyboardAvoidingView\n          behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n          style={styles.keyboardAvoidingView}\n          keyboardVerticalOffset={10}\n        >\n          <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n            <FlatList\n              data={messages}\n              inverted={true}\n              style={styles.flatList}\n              keyExtractor={(item) => item.id}\n              renderItem={({ item: message }) =>\n                message.userId === userInfo.firebaseId ? (\n                  <SenderMessage key={message.id} message={message} />\n                ) : (\n                  <ReceiverMessage key={message.id} message={message} />\n                )\n              }\n              onContentSizeChange={() => scrollFlatListToEnd()}\n            />\n          </TouchableWithoutFeedback>\n          {\n            true && (\n              <View style={styles.suggestionsContainer}>\n                <MessageSuggestion onSelectSuggestion={handleSelectSuggestion} />\n              </View>\n            )\n          }\n          <View style={[styles.messageInputContainer, isWeb && styles.messageInputContainerWeb]}>\n\n            <TextInput\n              multiline={true}\n              style={styles.textInput}\n              placeholder=\"Send a message\"\n              onChangeText={(value) => {\n                setInput(value)\n                logEvent(analytics, \"message changed\", value);\n              }}\n              value={input}\n            />\n            <TouchableOpacity onPress={handleSendMessage} style={styles.sendButton}>\n              <Text style={styles.sendButtonText}>Send</Text>\n            </TouchableOpacity>\n          </View>\n        </KeyboardAvoidingView>\n        <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={showModal}\n          onRequestClose={handleModalClose}\n        >\n          <View style={styles.modalContainer}>\n            <View style={styles.modalContent}>\n              <View style={styles.modalHeader}>\n                <Text style={styles.modalTitle}>Subscribe Now</Text>\n                <TouchableOpacity onPress={handleModalClose}>\n                  <Text style={styles.modalCloseText}>Close</Text>\n                </TouchableOpacity>\n              </View>\n              {Platform.OS !== 'web' ?\n                <WebView source={{ uri: webviewUrl }} style={styles.webView} /> :\n                <iframe src={webviewUrl} height={'100%'} width={'100%'} />}\n            </View>\n          </View>\n        </Modal>\n      </LinearGradient>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  keyboardAvoidingView: {\n    flex: 1,\n  },\n  flatList: {\n    paddingLeft: 16,\n  },\n  messageInputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderTopWidth: 1,\n    borderColor: '#E2E8F0',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n  },\n  textInput: {\n    flex: 1,\n    minHeight: 40,\n    padding: 10,\n    borderRadius: 20,\n    backgroundColor: '#FFFFFF',\n    fontSize: 16,\n  },\n  sendButton: {\n    marginLeft: 10,\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    backgroundColor: '#63B3ED',\n    borderRadius: 20,\n  },\n  sendButtonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    width: '80%',\n    height: '80%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    overflow: 'hidden',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderColor: '#E2E8F0',\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  modalCloseText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#3182CE',\n  },\n  webView: {\n    flex: 1,\n  },\n  messageInputContainerWeb: {\n    position: 'fixed', // Fix position to bottom on web\n    bottom: 0,\n    left: 0,\n    right: 0,\n    borderTopWidth: 1,\n    borderColor: '#E2E8F0',\n    backgroundColor: 'white', // or any desired color\n  },\n  suggestionsContainer: {\n    position: 'fixed',\n    bottom: 80, // You should adjust this value based on the height of messageInputContainer + some offset\n    width: '100%',\n    zIndex: 2,  // Ensure the suggestions are above the FlatList\n  },\n});\n\nexport default MessageScreen;","// src/navigation/AuthStack.js\n\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeTabNavigator from '../screens/HomeTabNavigator';\nimport PostAdScreen from '../screens/PostAd';\nimport Default from '../screens/Default';\nimport UserAds from '../screens/UserAds';\nimport AdDetailsScreen from '../screens/AdDetails';\nimport Message from '../screens/Message';\nimport Chat from '../screens/Chat';\nimport ChatRow from '../components/ChatRow';\nimport CustomHeader from '../components/CustomHeader';\n\nconst Stack = createStackNavigator();\n\nconst AppStack = () => {\n    return (\n        <Stack.Navigator\n            screenOptions={{\n                headerShown: false\n            }}\n            initialRouteName='HomeTabNavigator'\n        >\n            <Stack.Screen name=\"HomeTabNavigator\" component={HomeTabNavigator} />\n            <Stack.Screen name=\"PostAd\" component={PostAdScreen} />\n            <Stack.Screen name=\"UserAds\" component={UserAds} />\n            <Stack.Screen name=\"SingleScreenAd\" component={AdDetailsScreen} />\n            <Stack.Screen name=\"Chat\" component={Chat} />\n            <Stack.Screen name=\"Location\" component={CustomHeader} />\n            <Stack.Screen name=\"Message\" component={Message} />\n            <Stack.Screen name=\"MessagWithData\" component={Message} />\n        </Stack.Navigator>\n    );\n};\n\nexport default AppStack;\n","import React from 'react';\nimport { View, Text, TouchableOpacity } from 'react-native';\nimport Modal from 'react-native-modal';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nconst UpdateAppModal = ({ isVisible, onAppUpdate }) => {\n    return (\n        <Modal isVisible={isVisible} backdropColor=\"rgba(0, 0, 0, 0.5)\" backdropOpacity={1}>\n            <LinearGradient\n                colors={['#007DBC', '#005AAA']}\n                style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}\n            >\n                <View style={{ backgroundColor: 'white', borderRadius: 10, padding: 20 }}>\n                    <Text style={{ color: '#007DBC', fontSize: 18, marginBottom: 20 }}>Please update the app now.</Text>\n                    <TouchableOpacity\n                        style={{ backgroundColor: '#007DBC', padding: 10, borderRadius: 5 }}\n                        onPress={onAppUpdate}\n                    >\n                        <Text style={{ color: 'white', textAlign: 'center', fontSize: 16 }}>Click Here to Update</Text>\n                    </TouchableOpacity>\n                </View>\n            </LinearGradient>\n        </Modal>\n    );\n};\n\nexport default UpdateAppModal;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AuthStack from './navigation/AuthStack';\nimport AppStack from './navigation/AppStack';\nimport { UserProvider, useUser } from './context/UserContext';\nimport Toast from 'react-native-toast-message';\nimport { AuthProvider } from './hooks/useAuth';\nimport UpdateAppModal from './components/UpdateAppModal'; // Import the modal component\nimport API_BASE_URL from './services/config';\nimport { Linking } from 'react-native';\n\nimport * as Font from 'expo-font';\n\nconst App = () => {\n  const { userToken } = useUser();\n  const [showUpdateModal, setShowUpdateModal] = useState(false); // State for modal visibility\n  const [action, setAction] = useState('');\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  useEffect(() => {\n    Font.loadAsync({\n      'open-sans-regular': require('./assets/fonts/OpenSans-Regular.ttf'),\n      'open-sans-light': require('./assets/fonts/OpenSans-Light.ttf'),\n      'open-sans-bold': require('./assets/fonts/OpenSans-Bold.ttf'),\n      'argon': require('./assets/fonts/argon.ttf'),\n    });\n    setFontsLoaded(true)\n  }, []);\n  useEffect(() => {\n    const fetchAppUpdateStatus = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/user/getAppUpdateStatus`); // Replace with your API endpoint\n        const { blockApp, action } = response.data;\n        if (blockApp) {\n          setShowUpdateModal(true);\n          setAction(action)\n        }\n      } catch (error) {\n        console.error('Error fetching app update status:', error);\n      }\n    };\n    fetchAppUpdateStatus();\n  }, []);\n\n  const handleAppUpdate = () => {\n    Linking.canOpenURL(action)\n      .then((supported) => {\n        if (supported) {\n          Linking.openURL(action);\n        } else {\n          console.error('Cannot open Play Store link');\n        }\n      })\n      .catch((error) => {\n        console.error('Error opening Play Store link:', error);\n      });\n  };\n\n  return (\n    <>\n      <Toast />\n      <AuthProvider>\n        <NavigationContainer>\n          {userToken ? <AppStack /> : <AuthStack />}\n        </NavigationContainer>\n      </AuthProvider>\n      <UpdateAppModal\n        isVisible={showUpdateModal}\n        onClose={() => setShowUpdateModal(false)}\n        onAppUpdate={handleAppUpdate}\n      />\n    </>\n  );\n};\n\nexport default () => {\n  return (\n    <UserProvider>\n      <App />\n    </UserProvider>\n  );\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [513], () => (__webpack_require__(5530)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","analytics","getStorage","getAnalytics","AuthContext","createContext","AuthProvider","_ref","children","setUserInfoToStore","useUser","_useState","useState","_useState2","_slicedToArray","user","_useState3","_useState4","loadingLogin","setLoadingLogin","useEffect","unsubscribe","onAuthStateChanged","_ref2","_asyncToGenerator","authUser","_x","apply","arguments","signUpWithEmailPassword","_ref3","email","password","createUserWithEmailAndPassword","then","userCredential","uid","firebaseId","catch","error","console","log","_x2","_x3","logOut","_ref4","signOut","_jsx","Provider","value","signInWithEmailPassword","signInWithEmailAndPassword","ActivityIndicator","AuthOpen","useContext","UserContext","UserProvider","userToken","setUserToken","userDetails","setUserDetails","_useState5","_useState6","userInfo","setUserInfo","loadUserToken","storedToken","AsyncStorage","getItem","fetchUserDetails","response","fetch","API_BASE_URL","toString","ok","userData","json","gender","image","name","phoneNumber","_id","tenantType","rentPosts","coins","subscriptionStartDate","location","phone","id","statusText","login","token","setItem","logout","_ref5","removeUserInfoFromStore","removeItem","_ref6","_ref8","_ref7","rentPost","_ref7$subscriptionSta","_ref7$location","locationMarked","existingUserInfo","JSON","parse","length","_objectSpread","stringify","TextAnimator","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","animate","toValue","undefined","animations","state","textArr","map","_","i","Animated","timing","animatedValues","duration","useNativeDriver","stagger","reverse","start","setTimeout","onFinish","content","trim","split","forEach","Value","_createClass","key","this","prevProps","_this2","setState","_this3","View","style","styles","textWrapper","word","index","_jsxs","Text","textStyle","opacity","transform","translateY","multiply","React","StyleSheet","create","flexDirection","flexWrap","justifyContent","_Dimensions$get","Dimensions","get","width","height","Authentication","_AuthOpen","formattedValue","setFormattedValue","isUserExists","setIsUserExists","screen","setScreen","_useState7","_useState8","setPhoneNumber","_useState9","_useState10","otp","setOtp","_useState11","_useState12","assignedOtp","setAssignedOtp","_useState13","_useState14","isLoading","setIsLoading","_useState15","_useState16","isTextInputFocused","setIsTextInputFocused","_useState17","_useState18","currentTextIndex","setCurrentTextIndex","animatedTexts","_useClearByFocusCell","useClearByFocusCell","setValue","_useClearByFocusCell2","getCellOnLayoutHandler","handleAnimationComplete","generateOtp","Math","floor","random","fetchUserExistsStatus","checkPhoneResponse","checkPhoneData","exists","sendOTP","method","headers","body","apikey","senderid","number","message","format","status","alert","verifyOTP","handleTextInputFocus","handleTextInputBlur","LinearGradient","colors","gradient","x","y","end","lottie","Platform","OS","LottieView","source","require","autoPlay","loop","KeyboardAvoidingView","behavior","flex","keyboardVerticalOffset","ScrollView","contentContainerStyle","container","keyboardShouldPersistTaps","header","subheader","PhoneNumberInput","defaultCode","onChangeText","text","logEvent","onChangeFormattedText","placeholder","withDarkTheme","withShadow","onFocus","onBlur","size","color","TouchableOpacity","button","onPress","buttonText","iconContainer","Ionicons","CodeField","caretHidden","cellCount","rootStyle","codeFieldRoot","keyboardType","textContentType","renderCell","symbol","isFocused","onLayout","cell","focusCell","cellText","Cursor","buttonContainer","_Fragment","resendText","renderScreen","alignItems","fontSize","fontWeight","marginBottom","fontFamily","top","backgroundColor","paddingVertical","paddingHorizontal","borderRadius","resendButton","marginTop","backButton","countryPickerContainer","borderColor","borderWidth","countryPicker","resizeMode","marginLeft","marginRight","lineHeight","textAlign","position","left","zIndex","OnboardingScreen","navigation","useNavigation","handleDone","navigate","Onboarding","onDone","onSkip","DoneButtonComponent","Object","assign","_objectDestructuringEmpty","doneButton","containerStyles","pages","Lottie","title","subtitle","padding","Stack","createStackNavigator","showOnboarding","setShowOnboarding","checkIfAlreadyOnboarded","onboarded","Navigator","initialRouteName","Screen","options","headerShown","component","screenOptions","BannerWidth","bannerImage","data","Carousel","autoplay","autoplayTimeout","pageSize","Image","uri","renderPage","_worklet_4122753321172_init_data","code","_worklet_10469424627174_init_data","AnimatedCard","item","scale","useSharedValue","lastPress","useRef","Date","now","animatedStyles","useAnimatedStyle","_f","_closure","__initData","__workletHash","animatedImageStyles","perspective","rotateY","card","activeOpacity","current","onPressIn","withSpring","onPressOut","delayPressIn","touchable","images","adImage","adDetails","adTitle","adInfo","adPrice","price","adBedrooms","bedrooms","adList","margin","overflow","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","backfaceVisibility","borderTopLeftRadius","borderTopRightRadius","adLocation","_useUser","ads","setAds","banners","setBanners","refreshing","setRefreshing","bannersLoading","setBannersLoading","fetchAds","fetchBanners","bannersQuery","query","collection","fetchedBanners","getDocs","docs","doc","link","handleAdPress","ad","onRefresh","useCallback","BannerCarousel","FlatList","keyExtractor","renderItem","numColumns","refreshControl","RefreshControl","tintColor","PostAdScreen","_route$params","_route$params$ad","_route$params2","_route$params2$ad","_route$params3","_route$params3$ad","_route$params4","_route$params4$ad","_route$params5","_route$params5$ad","_route$params6","_route$params6$ad","_route$params7","_route$params7$ad","_route$params8","_route$params8$ad","_route$params9","_route$params9$ad","_route$params10","_route$params10$ad","_route$params11","_route$params11$ad","_route$params12","_route$params12$ad","route","setImages","params","setLocation","setAdTitle","adDescription","setAdDescription","setPhone","setEmail","setPrice","maxResidents","setMaxResidents","preference","setPreference","_useState19","isMaleOnly","_useState20","setIsMaleOnly","_useState21","isFurnished","_useState22","setIsFurnished","_useState23","hasAttachedBathroom","_useState24","setHasAttachedBathroom","_useState25","isBachelorsAllowed","_useState26","setIsBachelorsAllowed","_useState27","_useState28","loading","setLoading","handleImageUpload","ImagePicker","requestMediaLibraryPermissionsAsync","granted","pickerResult","launchImageLibraryAsync","mediaTypes","Images","allowsEditing","aspect","quality","multiple","cancelled","newImages","concat","_toConsumableArray","assets","uploadImagesToS3","Toast","show","type","text1","text2","s3Images","imageUri","file","RNS3","put","keyPrefix","bucket","region","accessKey","secretKey","successActionStatus","Error","s3ImageUrl","postResponse","push","handleSubmit","_route$params13","postData","userId","axios","post","goBack","imageContainer","heading","imageUploadButton","uploadButtonText","horizontal","showsHorizontalScrollIndicator","fieldContainer","label","RNPickerSelect","onValueChange","items","pickerSelectStyles","TextInput","input","multilineInput","multiline","stepperContainer","stepperButton","stepperButtonText","stepperValue","Switch","trackColor","false","true","submitButton","disabled","submitButtonText","bottom","minHeight","textAlignVertical","marginHorizontal","inputIOS","paddingRight","inputAndroid","domains","tenantTypeContainer","actionButton","loader","profileImage","scrollViewContent","flexGrow","modalContainer","linearGradient","modalContent","modalTitle","closeButton","right","chooseImageButton","chooseImageText","genderContainer","radioButtons","radioButton","radioButtonSelected","radioButtonText","radioButtonTextSelected","radioButtonsTenantType","radioButtonTenantType","isVisible","onDismiss","_useUser2","setName","setUserId","setGender","setTenantType","setImage","setSuggestions","setFieldsDisabled","userLocation","setUserLocation","handleGenderSelect","selectedGender","requestLocationPermission","Location","requestForegroundPermissionsAsync","getCurrentPositionAsync","updateProfileToFirebase","pic","isEdit","newDocRef","handler","updateDoc","setDoc","timestamp","serverTimestamp","updateAuthProfile","currentUser","displayName","photoURL","handleTenantTypeSelect","selectedType","handleUpdate","selectedImageUri","blob","res","apiEndpoint","updateButtonStyle","Modal","visible","transparent","animationType","MaterialCommunityIcons","placeholderTextColor","filteredDomains","filter","domain","includes","maleIcon","femaleIcon","student","professionals","family","users","userLoggedIn","newUsers","_Object$entries$flat","entries","flat","_Object$entries$flat2","id1","id2","cardShadow","matchDetails","lastMessage","setLastmessage","matchedUserInfo","setMatchedUserInfo","getMatchedUserInfo","onSnapshot","generateId","orderBy","snapshot","_snapshot$docs$","_snapshot$docs$$data","tw","photoUrl","substring","matches","setMatches","where","ChatRow","SafeAreaView","ChatList","leftContainer","selectedLocationContainer","downIcon","rightContainer","iconButton","selectedLocationText","modalView","modalGradient","modalHeader","modalHeaderText","searchContainer","searchInput","clearIcon","locationList","locationItem","locationText","tagsContainer","tag","tagText","onSettingPress","_ref$showBack","showBack","useToken","selectedLocation","setSelectedLocation","allLocations","setLocations","modalVisible","setModalVisible","searchQuery","setSearchQuery","suggestedLocations","setSuggestedLocations","topLocations","setTopLocations","fetchLocations","_response$data$locati","locations","fetchedLocations","slice","selectLocation","renderTag","edges","Icon","onRequestClose","filteredLocations","toLowerCase","Tab","createBottomTabNavigator","tabBar","borderTopWidth","addButton","addButtonText","popoverBackground","popoverContent","popoverOption","popoverOptionText","_React$useState","_React$useState2","isModalVisible","_React$useState3","_React$useState4","isUpdateModalVisible","setUpdateModalVisible","_React$useState5","_React$useState6","userProfileData","setUserProfileData","handleMyAds","toggleModal","handleUpdateProfile","handleLogout","renderCustomHeader","CustomHeader","onBackPress","tabBarOptions","activeTintColor","inactiveTintColor","showLabel","Home","tabBarIcon","focused","Chat","Pressable","UpdateProfileModal","onUpdateProfile","updatedData","_Component","Default","Component","onEdit","onDelete","onClaim","headerText","closeButtonText","textDecorationLine","deleteConfirmationContainer","deleteConfirmationText","deleteConfirmationButtons","cancelButton","cancelButtonText","confirmButton","confirmButtonText","userAds","setUserAds","selectedAd","setSelectedAd","isDeleteConfirmationVisible","setDeleteConfirmationVisible","fetchUserAds","handleEdit","handleDelete","adId","prevAds","handleClaim","FontAwesome","AdCard","amenitiesMapping","icon","flexContainer","footer","borderBottomWidth","borderBottomColor","villaImage","villaName","marginVertical","offerContainer","offerText","description","hostImage","hostName","directMessageButton","directMessageButtonText","postedByCurrentUserMessage","amenitiesContainer","amenitiesTitle","amenitiesList","amenityItem","amenityLabel","priceContainer","originalPrice","discountedPrice","bookNowButton","bookNowButtonText","flatmateRow","flatmatesSection","flatmatesGrid","flatmateCard","flatmateImage","flatmateName","flatmateOccupation","trustIcon","flatmatesData","flatmates","setShowDirectMessageButton","isPostedByCurrentUser","userDoc","getDoc","amenity","flatmate","occupation","TimeAgo","addLocale","en","timeAgo","messageBubble","maxWidth","messageText","alignSelf","numericTimestamp","toDate","getTime","_message$timestamp","date2","chatHeaderContainer","chatHeaderImage","chatHeaderText","messageSuggestionContainer","messageSuggestion","messageSuggestionText","onSelectSuggestion","keyboardAvoidingView","flatList","paddingLeft","messageInputContainer","textInput","sendButton","sendButtonText","modalCloseText","webView","messageInputContainerWeb","suggestionsContainer","setInput","messages","setMessages","setScrollToEnd","showModal","setShowModal","webviewUrl","isWeb","combinedUid","fetchStateThing","matchDocRef","docSnapshot","_users","sanitizedUserInto","_defineProperty","usersMatched","scrollFlatListToEnd","handleSendMessage","addDoc","coinsLeft","handleModalClose","ChatHeader","TouchableWithoutFeedback","Keyboard","dismiss","inverted","SenderMessage","ReceiverMessage","onContentSizeChange","MessageSuggestion","WebView","src","HomeTabNavigator","UserAds","AdDetailsScreen","Message","onAppUpdate","backdropColor","backdropOpacity","App","showUpdateModal","setShowUpdateModal","action","setAction","setFontsLoaded","Font","loadAsync","fetchAppUpdateStatus","_response$data","blockApp","NavigationContainer","AppStack","AuthStack","UpdateAppModal","onClose","Linking","canOpenURL","supported","openURL","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","amdO","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","ns","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}