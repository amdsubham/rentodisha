{"version":3,"file":"static/js/main.de471bc0.js","mappings":"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","sources":["firebase/firebase.js","hooks/useAuth.js","services/config.js","context/UserContext.js","components/TextAnimator.js","screens/Authentication.js","utils/asyncStorage.js","screens/OnboardingScreen.js","navigation/AuthStack.js","components/BannerCarousel.js","screens/Home.js","screens/PostAd.js","components/UpdateProfileModal.js","utils/getMatchedUserInfo.js","utils/generateIds.js","components/ChatRow.js","components/ChatList.js","screens/Chat.js","components/CustomHeader.js","screens/HomeTabNavigator.js","screens/Default.js","components/AdCard.js","screens/UserAds.js","screens/AdDetails.js","components/ReceiverMessage.js","components/SenderMessage.js","components/ChatHeader.js","components/MessageSuggestion.js","screens/Message.js","navigation/AppStack.js","components/UpdateAppModal.js","App.js","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from 'firebase/auth'\nimport { getFirestore } from 'firebase/firestore'\nimport { getStorage } from \"firebase/storage\";\nimport { initializeAuth, getReactNativePersistence } from 'firebase/auth';\nimport ReactNativeAsyncStorage from '@react-native-async-storage/async-storage';\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyApunLilBsWG8YvyLL6hNdpWW0oB_JGNl8\",\n    authDomain: \"odicult-c051c.firebaseapp.com\",\n    databaseURL: \"https://odicult-c051c-default-rtdb.firebaseio.com\",\n    projectId: \"odicult-c051c\",\n    storageBucket: \"odicult-c051c.appspot.com\",\n    messagingSenderId: \"264373040060\",\n    appId: \"1:264373040060:web:8d9c8e752ae975257331b9\",\n    measurementId: \"G-YJTXX7D32M\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app)\n\n// initializeAuth(app, {\n//     persistence: getReactNativePersistence(ReactNativeAsyncStorage)\n// });\nconst db = getFirestore()\nconst storage = getStorage();\nconst analytics = getAnalytics(app);\nexport { analytics, app, auth, db, storage }\n","\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from 'firebase/auth';\nimport { ActivityIndicator } from 'react-native';\nimport { auth, db } from '../firebase/firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useUser } from '../context/UserContext';\n\nconst AuthContext = createContext({\n})\n\nconst AuthProvider = ({ children }) => {\n  const { setUserInfoToStore } = useUser();\n  const [user, setUser] = useState(null);\n  const [loadingLogin, setLoadingLogin] = useState(true);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (authUser) => {\n      if (authUser) {\n        try {\n        } catch (error) {\n          console.error('Error fetching user details:', error);\n        }\n        setLoadingLogin(false);\n      } else {\n        // setUser(null);\n        setLoadingLogin(false);\n      }\n    });\n\n    return () => {\n      // Unsubscribe from the auth state listener when the component unmounts\n      unsubscribe();\n    };\n  }, []);\n\n  const signInWithEmailPassword = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        const uid = userCredential.user.uid;\n        setUserInfoToStore({ firebaseId: uid })\n\n      })\n      .catch((error) => {\n        console.log(\"Firebase SignIn Error\", error)\n      });\n  };\n\n  const signUpWithEmailPassword = async (email, password) => {\n    await createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        const uid = userCredential.user.uid;\n        setUserInfoToStore({ firebaseId: uid })\n      })\n      .catch((error) => {\n        console.log(\"Firebase SignUp Error\", error)\n      });\n  };\n\n  const logOut = async () => {\n    setLoadingLogin(true);\n    await signOut(auth);\n    setLoadingLogin(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        signInWithEmailPassword,\n        signUpWithEmailPassword,\n        loadingLogin,\n        logOut,\n      }}\n    >\n      {loadingLogin ? <ActivityIndicator /> : children}\n    </AuthContext.Provider>\n  );\n};\nconst AuthOpen = () => {\n  return useContext(AuthContext);\n};\n\nexport { AuthOpen, AuthProvider };","const API_BASE_URL = 'https://odicult.fruitnasta.com/api';\n\nexport default API_BASE_URL;\n","// UserContext.js\n\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthOpen } from '../hooks/useAuth';\nimport API_BASE_URL from '../services/config';\n\nconst UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n    const [userToken, setUserToken] = useState(null);\n    const [userDetails, setUserDetails] = useState(null);\n    const [userInfo, setUserInfo] = useState(null);\n    useEffect(() => {\n        const loadUserToken = async () => {\n            try {\n                const storedToken = await AsyncStorage.getItem('userToken');\n                if (storedToken) {\n                    setUserToken(storedToken);\n\n                }\n            } catch (error) {\n                console.error('Error loading user token:', error);\n            }\n        };\n        loadUserToken();\n    }, []);\n\n    const fetchUserDetails = async () => {\n        const response = await fetch(`${API_BASE_URL}/user/getUserByPhoneNumber/${userToken.toString()}`);\n        if (response.ok) {\n            const userData = await response.json();\n            const { email, gender, image, name, phoneNumber, _id, tenantType, rentPosts, coins, subscriptionStartDate, location } = userData\n            setUserDetails(userData);\n            setUserInfoToStore({ email, gender, image, name, phone: phoneNumber, id: _id, tenantType, rentPosts, coins, subscriptionStartDate, location })\n        } else {\n            console.error('Error fetching user details:', response.statusText);\n        }\n    }\n    const login = async (token) => {\n        setUserToken(token);\n        try {\n            // Store the user token in async storage\n            await AsyncStorage.setItem('userToken', token);\n        } catch (error) {\n            console.error('Error storing user token:', error);\n        }\n    };\n\n    const logout = async () => {\n        setUserToken(null);\n        removeUserInfoFromStore()\n        try {\n            // Remove the user token from async storage\n            await AsyncStorage.removeItem('userToken');\n        } catch (error) {\n            console.error('Error removing user token:', error);\n        }\n    };\n\n\n    const removeUserInfoFromStore = async () => {\n        try {\n            // Remove the user info from async storage\n            await AsyncStorage.removeItem('userInfo');\n            // You can also reset the user info state if needed\n            setUserInfo({});\n        } catch (error) {\n            console.error('Error removing user info:', error);\n        }\n    };\n\n    const setUserInfoToStore = async ({\n        name,\n        id,\n        firebaseId,\n        phone,\n        gender,\n        rentPost,\n        email,\n        image,\n        tenantType,\n        coins,\n        subscriptionStartDate = 'NA',\n        location = {},\n        locationMarked,\n    }) => {\n        try {\n            // Get the existing user info from async storage\n            const existingUserInfo = await AsyncStorage.getItem('userInfo');\n            let userInfo = existingUserInfo ? JSON.parse(existingUserInfo) : {};\n\n            // Check if firebaseId exists in userInfo\n            if (!userInfo.firebaseId || !userInfo.firebaseId.length) {\n                userInfo = {\n                    ...userInfo,\n                    firebaseId,\n                };\n            }\n\n            // Update the other user info fields\n            userInfo = {\n                ...userInfo,\n                name,\n                id,\n                phone,\n                gender,\n                rentPost,\n                email,\n                image,\n                tenantType,\n                coins,\n                subscriptionStartDate,\n                location,\n                locationMarked\n            };\n\n            await AsyncStorage.setItem('userInfo', JSON.stringify(userInfo));\n            setUserInfo(userInfo);\n        } catch (error) {\n            console.error('Error storing/updating user info:', error);\n        }\n    };\n\n    return (\n        <UserContext.Provider value={{\n            userToken,\n            login,\n            logout,\n            userDetails,\n            fetchUserDetails,\n            setUserInfoToStore,\n            userInfo,\n        }}>\n            {children}\n        </UserContext.Provider>\n    );\n};\n\nexport const useUser = () => {\n    return useContext(UserContext);\n};\n","import * as React from 'react';\nimport { View, StyleSheet, Animated } from 'react-native';\n\nexport default class TextAnimator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textArr: props.content.trim().split(' '),\n            animatedValues: [],\n        };\n        this.state.textArr.forEach((_, i) => {\n            this.state.animatedValues[i] = new Animated.Value(0);\n        });\n    }\n\n    componentDidMount() {\n        this.animate();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.content !== this.props.content) {\n            this.setState({\n                textArr: this.props.content.trim().split(' '),\n                animatedValues: this.props.content.trim().split(' ').map(() => new Animated.Value(0)),\n            }, () => {\n                this.animate();\n            });\n        }\n    }\n\n    animate = (toValue = 1) => {\n        const animations = this.state.textArr.map((_, i) => {\n            return Animated.timing(this.state.animatedValues[i], {\n                toValue,\n                duration: this.props.duration,\n                useNativeDriver: true\n            });\n        });\n\n        Animated.stagger(\n            this.props.duration / 5,\n            toValue === 0 ? animations.reverse() : animations\n        ).start(() => {\n            setTimeout(() => this.animate(toValue === 0 ? 1 : 0), 1000);\n            if (this.props.onFinish) {\n                this.props.onFinish();\n            }\n        });\n    };\n\n    render() {\n        return (\n            <View style={[this.props.style, styles.textWrapper]}>\n                {this.state.textArr.map((word, index) => {\n                    return (\n                        <Animated.Text\n                            key={`${word}-${index}`}\n                            style={[\n                                this.props.textStyle,\n                                {\n                                    opacity: this.state.animatedValues[index],\n                                    transform: [\n                                        {\n                                            translateY: Animated.multiply(\n                                                this.state.animatedValues[index],\n                                                new Animated.Value(-5)\n                                            )\n                                        }\n                                    ],\n                                },\n                            ]}\n                        >\n                            {word}\n                            {`${index < this.state.textArr.length - 1 ? ' ' : ''}`}\n                        </Animated.Text>\n                    );\n                })}\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    textWrapper: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    }\n});\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport {\n    StyleSheet,\n    View,\n    Text,\n    TouchableOpacity,\n    ActivityIndicator,\n    ScrollView,\n    Dimensions,\n    KeyboardAvoidingView,\n    Platform\n} from 'react-native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { Image } from 'react-native';\n\nimport PhoneNumberInput from 'react-native-phone-number-input';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport { AuthOpen } from '../hooks/useAuth';\nimport Lottie from 'lottie-react-native';\nimport LottieView from 'react-native-web-lottie';\n\nimport { CodeField, Cursor, useClearByFocusCell } from 'react-native-confirmation-code-field';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport TextAnimator from '../components/TextAnimator';\nimport { logEvent } from 'firebase/analytics';\nimport { analytics } from '../firebase/firebase';\n\nconst { width, height } = Dimensions.get('window');\nconst CELL_COUNT = 6;\nexport default function Authentication() {\n    const { signInWithEmailPassword, signUpWithEmailPassword } = AuthOpen();\n    const [formattedValue, setFormattedValue] = useState('');\n    const { login } = useUser();\n    const [isUserExists, setIsUserExists] = useState(false);\n    const [screen, setScreen] = useState(1);\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [otp, setOtp] = useState('');\n    const [assignedOtp, setAssignedOtp] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [isTextInputFocused, setIsTextInputFocused] = useState(false);\n    const [currentTextIndex, setCurrentTextIndex] = useState(0);\n    const animatedTexts = [\n        'No Broker in Between 🏠',\n        'Fast and Reliable 🔥',\n        'Your Dream House Awaits! 🏠'\n    ];\n    const [props, getCellOnLayoutHandler] = useClearByFocusCell({\n        value: otp,\n        setValue: setOtp,\n    });\n\n    const handleAnimationComplete = () => {\n        if (currentTextIndex < animatedTexts.length - 1) {\n            setCurrentTextIndex(currentTextIndex + 1);\n        }\n    };\n\n    const renderMedia = () => {\n        if (Platform.OS === 'web') {\n            return (\n                <LottieView\n                    source={require('../assets/animations/dreamHouse.json')}\n                    autoPlay\n                    loop\n                />\n            );\n        } else {\n            return (\n                <Lottie\n                    source={require('../assets/animations/dreamHouse.json')}\n                    autoPlay\n                    loop\n                />\n            );\n        }\n    };\n\n    const generateOtp = () => {\n        const otp =\n            (phoneNumber === '7008105210' || phoneNumber === '7777711111'\n                || phoneNumber === '7777722222' || phoneNumber === '7777733333'\n                || phoneNumber === '7777744444' || phoneNumber === '7777755555'\n            )\n                ? 121212\n                : Math.floor(100000 + Math.random() * 900000);\n        setAssignedOtp(otp);\n        return otp;\n    };\n\n    const fetchUserExistsStatus = async () => {\n        const checkPhoneResponse = await fetch(\n            `${API_BASE_URL}/user/check-phone/${phoneNumber}`\n        );\n        const checkPhoneData = await checkPhoneResponse.json();\n        setIsUserExists(checkPhoneData.exists);\n    };\n\n    const sendOTP = async () => {\n        try {\n            setIsLoading(true);\n\n            const postData = {\n                phoneNumber: formattedValue,\n                assignedOtp: generateOtp(),\n            };\n            const response = await axios.post(`${API_BASE_URL}/user/sendotp`, postData, {\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            });\n\n            const { data } = response;\n            // Check the response from your own server's endpoint\n            if (data.status === 'OK') {\n                fetchUserExistsStatus();\n                setScreen(2);\n            } else {\n                alert('Failed to send OTP. Please try again.');\n            }\n        } catch (error) {\n            // Handle errors\n            console.error('Error sending OTP:', error.response?.data || error.message);\n            alert('Error sending OTP. Please check your network connection.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const verifyOTP = () => {\n        try {\n            setIsLoading(true);\n            if (otp === assignedOtp.toString()) {\n                login(phoneNumber);\n                if (isUserExists) {\n                    signInWithEmailPassword(`${phoneNumber}@gmail.com`, phoneNumber);\n                } else {\n                    signUpWithEmailPassword(`${phoneNumber}@gmail.com`, phoneNumber);\n                }\n            } else {\n                // OTPs do not match, show an error alert\n                alert('Invalid OTP. Please try again.');\n            }\n        } catch (error) {\n            alert('Error verifying OTP. Please try again.');\n            console.log('error', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleTextInputFocus = () => {\n        setIsTextInputFocused(true);\n    };\n\n    const handleTextInputBlur = () => {\n        setIsTextInputFocused(false);\n    };\n\n    const renderScreen = () => {\n        switch (screen) {\n            case 1:\n                return (\n                    <LinearGradient\n                        colors={['#003366', '#006699', '#0099CC']}\n                        style={styles.gradient}\n                        start={{ x: 0, y: 0 }}\n                        end={{ x: 1, y: 1 }}\n                    >\n                        {(!isTextInputFocused) && (<View style={styles.lottie}>\n                            {renderMedia()}\n                            <TextAnimator\n                                content={animatedTexts[currentTextIndex]}\n                                textStyle={styles.textStyle}\n                                duration={1500}\n                                onFinish={handleAnimationComplete}\n                            />\n                        </View>)}\n                        <KeyboardAvoidingView\n                            behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n                            style={{ flex: 1 }}\n                            keyboardVerticalOffset={Platform.OS === 'ios' ? -100 : 0}\n                        >\n                            <ScrollView\n                                contentContainerStyle={styles.container}\n                                keyboardShouldPersistTaps=\"handled\"\n                            >\n                                <Text style={styles.header}>Enter Your Mobile Number</Text>\n                                <Text style={styles.subheader}>\n                                    We will send you a Confirmation Code\n                                </Text>\n\n                                <PhoneNumberInput\n                                    defaultCode=\"IN\"\n                                    value={phoneNumber}\n                                    onChangeText={(text) => {\n                                        logEvent(analytics, \"phone number changed\", text);\n                                        setPhoneNumber(text);\n                                    }}\n                                    onChangeFormattedText={(text) => {\n                                        setFormattedValue(text);\n                                    }}\n                                    placeholder=\"Enter Phone Number\"\n                                    withDarkTheme\n                                    withShadow\n                                    onFocus={handleTextInputFocus}\n                                    onBlur={handleTextInputBlur}\n                                />\n\n                                {isLoading ? (\n                                    <ActivityIndicator size=\"small\" color=\"#E5E5E5\" />\n                                ) : (\n                                    <TouchableOpacity\n                                        style={styles.button}\n                                        onPress={sendOTP}\n                                    >\n                                        <Text style={styles.buttonText}>VERIFY</Text>\n                                    </TouchableOpacity>\n                                )}\n                            </ScrollView>\n                        </KeyboardAvoidingView>\n                    </LinearGradient>\n                );\n            case 2:\n\n                return (\n                    <LinearGradient\n                        colors={['#003366', '#006699', '#0099CC']}\n                        style={styles.gradient}\n                        start={{ x: 0, y: 0 }}\n                        end={{ x: 1, y: 1 }}\n                    >\n                        <View style={styles.iconContainer}>\n                            <TouchableOpacity onPress={() => setScreen(1)}>\n                                <Ionicons name=\"arrow-back\" size={30} color=\"#FFFFFF\" />\n                            </TouchableOpacity>\n                        </View>\n                        <ScrollView\n                            contentContainerStyle={styles.container}\n                            keyboardShouldPersistTaps=\"handled\"\n                        >\n                            <Text style={styles.header}>Enter Verification Code</Text>\n                            <CodeField\n                                {...props}\n                                caretHidden={false}\n                                value={otp}\n                                onChangeText={setOtp}\n                                cellCount={CELL_COUNT}\n                                rootStyle={styles.codeFieldRoot}\n                                keyboardType=\"number-pad\"\n                                textContentType=\"oneTimeCode\"\n                                renderCell={({ index, symbol, isFocused }) => (\n                                    <View\n                                        onLayout={getCellOnLayoutHandler(index)}\n                                        key={index}\n                                        style={[styles.cell, isFocused && styles.focusCell]}\n                                    >\n                                        <Text style={styles.cellText}>\n                                            {symbol || (isFocused ? <Cursor /> : null)}\n                                        </Text>\n                                    </View>\n                                )}\n                            />\n                            <View style={styles.buttonContainer}>\n                                {isLoading ? (\n                                    <ActivityIndicator size=\"small\" color=\"#FFFFFF\" />\n                                ) : (\n                                    <>\n                                        <TouchableOpacity\n                                            style={styles.button}\n                                            onPress={verifyOTP}\n                                        >\n                                            <Text style={styles.buttonText}>VERIFY OTP</Text>\n                                        </TouchableOpacity>\n                                        <TouchableOpacity\n                                            onPress={sendOTP}\n                                        >\n                                            <Text style={styles.resendText}>RESEND OTP</Text>\n                                        </TouchableOpacity>\n                                    </>\n                                )}\n                            </View>\n                        </ScrollView>\n                    </LinearGradient>\n                );\n\n\n\n            default:\n                return <View />;\n        }\n    };\n\n    return renderScreen();\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        // backgroundColor: '#E5E5E5',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    header: {\n        fontSize: 24,\n        color: '#E5E5E5',\n        fontWeight: 'bold',\n        marginBottom: 10,\n        fontFamily: 'open-sans-regular'\n    },\n    subheader: {\n        fontSize: 16,\n        color: '#E5E5E5',\n        marginBottom: 30,\n        fontFamily: 'open-sans-regular'\n    },\n    button: {\n        top: 15,\n        backgroundColor: '#FFFFFF',\n        paddingVertical: 15,\n        paddingHorizontal: 30,\n        borderRadius: 5,\n\n    },\n    resendButton: {\n        backgroundColor: '#E5E5E5',\n        paddingVertical: 15,\n        paddingHorizontal: 30,\n        borderRadius: 5,\n        marginTop: 10,\n    },\n    backButton: {\n        backgroundColor: '#E5E5E5',\n        paddingVertical: 15,\n        paddingHorizontal: 30,\n        borderRadius: 5,\n        marginBottom: 10,\n    },\n    buttonText: {\n        color: '#007DBC',\n        fontFamily: 'open-sans-bold'\n    },\n    buttonContainer: {\n        marginTop: 20,\n        alignItems: 'center',\n    },\n    countryPickerContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n        width: 110,\n        borderColor: '#007DBC',\n        borderWidth: 1,\n        borderRadius: 5,\n    },\n    countryPicker: {\n        flex: 1,\n        height: 40,\n        color: '#007DBC',\n    },\n    lottie: {\n        width: width,\n        height: width,\n        alignItems: 'center',\n        justifyContent: 'center',\n        top: 50,\n    },\n    image: {\n        width: 250,\n        height: 250,\n        resizeMode: 'contain', // or 'cover' depending on your requirement\n    },\n    codeFieldRoot: {\n        marginTop: 20,\n        width: 280,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n    cell: {\n        width: 30,\n        height: 45,\n        lineHeight: 38,\n        fontSize: 24,\n        borderWidth: 2,\n        borderColor: '#FFFFFF',\n        textAlign: 'center',\n        marginRight: 8,\n    },\n    focusCell: {\n        borderColor: '#000',\n    },\n    cellText: {\n        color: '#FFFFFF',\n        fontSize: 36,\n        textAlign: 'center',\n    },\n    gradient: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    iconContainer: {\n        position: 'absolute',\n        top: 50,  // Adjust according to your need\n        left: 20,  // Adjust according to your need\n        zIndex: 10,\n    },\n    resendText: {\n        color: '#FFFFFF',\n        textAlign: 'center',\n        marginTop: 15,  // Or any other value that suits your design\n        fontSize: 16,   // Or any other value that suits your design\n        top: 20\n    },\n    textStyle: {\n        fontSize: 20,\n        fontFamily: 'open-sans-regular',\n        marginBottom: 14,\n        color: '#FFFFFF',\n        marginTop: 20, // Added this line to create a gap of 50\n    },\n});\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport const setItem = async (key, value) => {\n  try {\n    await AsyncStorage.setItem(key, value);\n  } catch (error) {\n    console.log('Error storing value: ', error);\n  }\n};\n\n\nexport const getItem = async (key) => {\n  try {\n    const value = await AsyncStorage.getItem(key);\n    return value;\n  } catch (error) {\n    console.log('Error retrieving value: ', error);\n  }\n};\n\nexport const removeItem = async (key) => {\n  try {\n    await AsyncStorage.removeItem(key);\n  } catch (error) {\n    console.log('Error deleting value: ', error);\n  }\n}","import { View, Text, StyleSheet, Dimensions, TouchableOpacity } from 'react-native'\nimport React from 'react'\nimport Onboarding from 'react-native-onboarding-swiper';\nimport Lottie from 'lottie-react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { setItem } from '../utils/asyncStorage';\n\nconst { width, height } = Dimensions.get('window');\n\nexport default function OnboardingScreen() {\n    const navigation = useNavigation();\n\n    const handleDone = () => {\n        navigation.navigate('Home');\n        setItem('onboarded', '1');\n    }\n\n    const doneButton = ({ ...props }) => {\n        return (\n            <TouchableOpacity style={styles.doneButton} {...props}>\n                <Text>Done</Text>\n            </TouchableOpacity>\n        )\n\n    }\n    return (\n        <View style={styles.container}>\n            <Onboarding\n                onDone={handleDone}\n                onSkip={handleDone}\n                // bottomBarHighlight={false}\n                DoneButtonComponent={doneButton}\n                containerStyles={{ paddingHorizontal: 15 }}\n                pages={[\n                    {\n                        backgroundColor: '#003366',\n\n                        image: (\n                            <View style={styles.lottie}>\n                                <Lottie source={require('../assets/animations/nearbyRooms.json')} autoPlay loop />\n                            </View>\n                        ),\n                        title: 'Nearby Rooms',\n                        subtitle: 'Discover rooms close to your current location easily.',\n                    },\n                    {\n                        backgroundColor: '#006699',\n                        image: (\n                            <View style={styles.lottie}>\n                                <Lottie source={require('../assets/animations/directMessageFlatmates.json')} autoPlay loop />\n                            </View>\n                        ),\n                        title: 'Direct Message Flatmate',\n                        subtitle: 'Contact flatmates directly, no broker in between.',\n                    },\n                    {\n                        backgroundColor: '#0099CC',\n                        image: (\n                            <View style={styles.lottie}>\n                                <Lottie source={require('../assets/animations/verifiedListings.json')} autoPlay loop />\n                            </View>\n                        ),\n                        title: 'Verified Listings',\n                        subtitle: '100% verified rooms with 1000+ users trusted.',\n                    },\n                ]}\n            />\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: 'white'\n    },\n    lottie: {\n        width: width * 0.9,\n        height: width\n    },\n    doneButton: {\n        padding: 20,\n        // backgroundColor: 'white',\n        // borderTopLeftRadius: '100%',\n        // borderBottomLeftRadius: '100%'\n    }\n})","// src/navigation/AuthStack.js\n\nimport React, { useEffect, useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Platform } from 'react-native'; // Import Platform from 'react-native'\nimport Authentication from '../screens/Authentication';\nimport OnboardingScreen from '../screens/OnboardingScreen';\nimport { getItem } from '../utils/asyncStorage';\n\nconst Stack = createStackNavigator();\n\nconst AuthStack = () => {\n    const [showOnboarding, setShowOnboarding] = useState(null);\n\n    useEffect(() => {\n        checkIfAlreadyOnboarded();\n    }, []);\n\n    const checkIfAlreadyOnboarded = async () => {\n        let onboarded = await getItem('onboarded');\n        if (onboarded == 1) {\n            setShowOnboarding(false);\n        } else {\n            setShowOnboarding(true);\n        }\n    };\n\n    if (showOnboarding && Platform.OS !== 'web') { // Check the platform here\n        return (\n            <Stack.Navigator initialRouteName='Onboarding'>\n                <Stack.Screen name=\"Onboarding\" options={{ headerShown: false }} component={OnboardingScreen} />\n                <Stack.Screen name=\"Home\" options={{ headerShown: false }} component={Authentication} />\n            </Stack.Navigator>\n        );\n    }\n\n    if (showOnboarding == null) return null;\n\n    return (\n        <Stack.Navigator\n            screenOptions={{\n                headerShown: false\n            }}\n        >\n            <Stack.Screen name=\"Authentication\" component={Authentication} />\n        </Stack.Navigator>\n    );\n};\n\nexport default AuthStack;\n","import { logEvent } from 'firebase/analytics';\nimport React from 'react';\nimport { Image, Dimensions, StyleSheet } from 'react-native';\nimport Carousel from 'react-native-banner-carousel';\nimport { analytics } from '../firebase/firebase';\n\nconst BannerWidth = Dimensions.get('window').width;\nconst BannerHeight = 200; // Adjust the height as needed\n\nconst BannerCarousel = ({ data }) => {\n    const renderPage = (image, index) => (\n        <Image key={index} source={{ uri: image }} style={styles.bannerImage} />\n    );\n\n    return (\n        <Carousel\n            autoplay\n            autoplayTimeout={5000}\n            loop\n            index={0}\n            pageSize={BannerWidth}\n        >\n            {data.map((image, index) => renderPage(image, index))}\n        </Carousel>\n    );\n};\n\nconst styles = StyleSheet.create({\n    bannerImage: {\n        width: BannerWidth,\n        height: BannerHeight,\n        // Add any additional styling for your images here\n    },\n    // You can add additional styles if needed\n});\n\nexport default BannerCarousel;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { View, Text, FlatList, TouchableOpacity, StyleSheet, Image, RefreshControl, Dimensions } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { collection, getDocs, getFirestore, query } from 'firebase/firestore'\nimport Animated, { useSharedValue, useAnimatedStyle, withSpring } from 'react-native-reanimated';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { analytics, db } from '../firebase/firebase';\nimport BannerCarousel from '../components/BannerCarousel';\nimport { logEvent } from 'firebase/analytics';\n\nconst { width } = Dimensions.get('window');\n\nconst Home = () => {\n    const { userToken, userInfo } = useUser();\n    const [ads, setAds] = useState([]);\n    const [banners, setBanners] = useState([]);\n    const [refreshing, setRefreshing] = useState(false);\n    const navigation = useNavigation();\n    const [bannersLoading, setBannersLoading] = useState(true);\n    const [genderFilter, setGenderFilter] = useState('all'); // 'all', 'male', 'female'\n    const [filteredAds, setFilteredAds] = useState([]);\n    useEffect(() => {\n        fetchAds();\n        fetchBanners()\n\n    }, []);\n\n    const fetchAds = async () => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/rentpost/getAllPosts`);\n            if (response.ok) {\n                const data = await response.json();\n                setAds(data);\n            } else {\n                console.error('Failed to fetch ad posts');\n            }\n        } catch (error) {\n            console.error('Error fetching ad posts:', error);\n        } finally {\n            setRefreshing(false);\n        }\n    };\n\n    const handleGenderFilterChange = (newFilter) => {\n        setGenderFilter(newFilter);\n    };\n\n\n    const filterAds = () => {\n        let filtered;\n        switch (genderFilter) {\n            case 'male':\n                filtered = ads.filter(ad => ad.isMaleOnly === true);\n                break;\n            case 'female':\n                filtered = ads.filter(ad => ad.isMaleOnly === false);\n                break;\n            default:\n                filtered = ads;\n        }\n        setFilteredAds(filtered);\n    };\n    const fetchBanners = async () => {\n        try {\n            setBannersLoading(true);\n            const bannersQuery = query(collection(db, 'banners'));\n            const bannersSnapshot = await getDocs(bannersQuery);\n            const fetchedBanners = bannersSnapshot.docs.map(doc => doc.data().link);\n            setBanners(fetchedBanners);\n        } catch (error) {\n            console.error('Error fetching banners:', error);\n        } finally {\n            setBannersLoading(false);\n        }\n    };\n\n    const renderAdCard = ({ item }) => (\n        <AnimatedCard item={item} onPress={handleAdPress} />\n    );\n\n    const handleAdPress = (ad) => {\n        logEvent(analytics, \"Post OnClick\", (ad));\n        navigation.navigate('SingleScreenAd', { ad });\n    };\n\n    const onRefresh = useCallback(() => {\n        setRefreshing(true);\n        fetchAds();\n    }, []);\n    useEffect(() => {\n        filterAds();\n    }, [ads, genderFilter]);\n    return (\n        <>\n            <View style={styles.container}>\n                {!bannersLoading && banners.length > 0 && <BannerCarousel data={banners} />}\n\n                <View style={styles.filterButtonsContainer}>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'all' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('all')}\n                    >\n                        <Text style={genderFilter === 'all' ? styles.filterTextActive : styles.filterText}>All</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'male' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('male')}\n                    >\n                        <Text style={genderFilter === 'male' ? styles.filterTextActive : styles.filterText}>Male Only</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={[\n                            styles.filterButton,\n                            genderFilter === 'female' ? styles.filterButtonActive : {},\n                        ]}\n                        onPress={() => handleGenderFilterChange('female')}\n                    >\n                        <Text style={genderFilter === 'female' ? styles.filterTextActive : styles.filterText}>Female Only</Text>\n                    </TouchableOpacity>\n                </View>\n                <FlatList\n                    data={filteredAds.length ? filteredAds : ads}\n                    keyExtractor={(item) => item._id}\n                    renderItem={renderAdCard}\n                    contentContainerStyle={styles.adList}\n                    numColumns={2}\n                    refreshControl={\n                        <RefreshControl\n                            refreshing={refreshing}\n                            onRefresh={onRefresh}\n                            tintColor=\"#007DBC\"\n                        />\n                    }\n                />\n            </View>\n        </>\n    );\n};\n\nconst AnimatedCard = ({ item, onPress }) => {\n    const scale = useSharedValue(1);\n    const lastPress = useRef(Date.now());\n\n    const animatedStyles = useAnimatedStyle(() => {\n        return {\n            transform: [{ scale: scale.value }],\n        };\n    });\n\n    const animatedImageStyles = useAnimatedStyle(() => {\n        return {\n            transform: [\n                { perspective: 1000 },\n                { rotateY: `${scale.value * 0}deg` },\n            ],\n        };\n    });\n\n    const handlePress = () => {\n        const now = Date.now();\n        if (now - lastPress.current > 300) { // Prevent multiple rapid presses\n            lastPress.current = now;\n            onPress(item);\n        }\n    };\n\n    const handlePressIn = () => {\n        scale.value = withSpring(1.05);\n    };\n\n    const handlePressOut = () => {\n        scale.value = withSpring(1);\n    };\n\n    return (\n        <Animated.View style={[styles.card, animatedStyles]}>\n            <TouchableOpacity\n                activeOpacity={1}\n                onPress={handlePress}\n                onPressIn={handlePressIn}\n                onPressOut={handlePressOut}\n                delayPressIn={100} // Add delay here\n                style={styles.touchable}\n            >\n                <LinearGradient colors={['#005AAA', '#007DBC']} style={styles.gradient}>\n                    <Animated.Image source={{ uri: item.images[0] }} style={[styles.adImage, animatedImageStyles]} />\n                    <View style={styles.adDetails}>\n                        <Text\n                            style={styles.adTitle}\n                            numberOfLines={2}\n                            ellipsizeMode='tail'\n                        >\n                            {item.adTitle}\n                        </Text>\n                        <View style={styles.adInfo}>\n                            <Text style={styles.adPrice}>Price: ₹{item.price}</Text>\n                            <Text style={styles.adBedrooms}>{item.bedrooms} {item.location}</Text>\n                        </View>\n                    </View>\n                </LinearGradient>\n            </TouchableOpacity>\n        </Animated.View>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n    bannerImage: {\n        width: '100%',\n        height: 200,\n    },\n    adList: {\n        padding: 8,\n    },\n    touchable: {\n        flex: 1,\n    },\n    card: {\n        flex: 0.5,\n        margin: 8,\n        borderRadius: 15,\n        overflow: 'hidden',\n        backgroundColor: '#fff',\n        elevation: 6,\n        shadowColor: 'rgba(0,0,0,0.15)',\n        shadowOffset: { width: 0, height: 3 },\n        shadowOpacity: 1,\n        shadowRadius: 6,\n        borderColor: '#f0f0f0', // Light grey border\n        borderWidth: 1, // Border width\n        fontFamily: 'open-sans-regular',\n    },\n    adImage: {\n        width: '100%',\n        height: 140,\n        backfaceVisibility: 'hidden',\n        borderTopLeftRadius: 15, // Match border radius of card\n        borderTopRightRadius: 15, // Match border radius of card\n    },\n    adDetails: {\n        flex: 1,\n        padding: 12, // Slightly more padding\n    },\n    adTitle: {\n        fontSize: 14, // Reduced font size for title\n        //fontWeight: 'bold',\n        marginBottom: 5,\n        color: 'white', // Darker text color for better readability\n        fontFamily: 'open-sans-bold',\n    },\n    adLocation: {\n        fontSize: 14, // Reduced font size for location\n        color: 'white', // Lighter text color for location\n        marginBottom: 8, // Added margin-bottom for spacing\n    },\n    adInfo: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    adPrice: {\n        fontSize: 16,\n        color: '#deac47',\n        fontFamily: 'open-sans-bold',\n    },\n    adBedrooms: {\n        fontSize: 12,\n        color: '#999',\n    },\n\n    filterButtonsContainer: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        padding: 10,\n        //marginBottom: 20,\n    },\n    filterButton: {\n        borderWidth: 1,\n        borderColor: '#007DBC',\n        paddingVertical: 8,\n        paddingHorizontal: 20,\n        borderRadius: 20,\n        marginHorizontal: 5,\n        backgroundColor: 'white',\n    },\n    filterButtonActive: {\n        backgroundColor: '#007DBC',\n    },\n    filterText: {\n        color: '#007DBC',\n        textAlign: 'center',\n    },\n    filterTextActive: {\n        color: 'white',\n        textAlign: 'center',\n    },\n});\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    Image,\n    ScrollView,\n    Switch,\n    StyleSheet,\n    Button,\n} from 'react-native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport RNPickerSelect from 'react-native-picker-select';\nimport * as ImagePicker from 'expo-image-picker'; // For image upload\nimport { RNS3 } from 'react-native-aws3'; // For S3 upload\nimport { useUser } from '../context/UserContext';\nimport axios from 'axios';\nimport Toast from 'react-native-toast-message'; // Import the toast library\nimport API_BASE_URL from '../services/config';\nimport { useNavigation, } from '@react-navigation/native';\nimport { AuthOpen } from '../hooks/useAuth';\n\nexport default function PostAdScreen({ route }) {\n    const navigation = useNavigation();\n    const { userToken, userDetails, userInfo } = useUser();\n    const [images, setImages] = useState([]); // Store image URIs\n    const [location, setLocation] = useState(route.params?.ad?.location || null);\n    const [adTitle, setAdTitle] = useState(route.params?.ad?.adTitle || '');\n    const [adDescription, setAdDescription] = useState(route.params?.ad?.adDescription || '');\n    const [phone, setPhone] = useState(route.params?.ad?.phone || '');\n    const [email, setEmail] = useState(route.params?.ad?.email || '');\n    const [price, setPrice] = useState(route.params?.ad?.price || 0);\n    const [maxResidents, setMaxResidents] = useState(route.params?.ad?.maxResidents || 1);\n    const [preference, setPreference] = useState(route.params?.ad?.preference || null);\n    const [isMaleOnly, setIsMaleOnly] = useState(route.params?.ad?.isMaleOnly || false);\n    const [isFurnished, setIsFurnished] = useState(route.params?.ad?.isFurnished || false);\n    const [hasAttachedBathroom, setHasAttachedBathroom] = useState(\n        route.params?.ad?.hasAttachedBathroom || false\n    );\n    const [isBachelorsAllowed, setIsBachelorsAllowed] = useState(\n        route.params?.ad?.isBachelorsAllowed || false\n    );\n    const [loading, setLoading] = useState(false); // Loading state\n    const handleImageUpload = async () => {\n        const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n        if (permissionResult.granted === false) {\n            alert('Permission to access camera roll is required!');\n            return;\n        }\n\n        const pickerResult = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n            multiple: true, // Allow selecting multiple images\n        });\n        if (!pickerResult.cancelled) {\n            // Create a new array with the selected image URIs\n            const newImages = [...images, pickerResult.assets[0].uri];\n            setImages(newImages);\n        }\n    };\n\n    const uploadImagesToS3 = async () => {\n\n        Toast.show({\n            type: 'error',\n            text1: 'Error Uploading Image',\n            text2: 'Please try again later.',\n        });\n        let s3Images = [];\n\n        for (const imageUri of images) {\n            const options = {\n                keyPrefix: 'uploads/',\n                bucket: 'primecaves',\n                region: 'ap-south-1',\n                accessKey: 'AKIARM6FSFR7MWP7YQUY',\n                secretKey: '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',\n                successActionStatus: 201,\n            };\n            const file = {\n                uri: imageUri,\n                name: `${userToken.toString()}-${Date.now()}.jpeg`,\n                type: 'image/jpeg',\n            };\n\n            try {\n                const response = await RNS3.put(file, options);\n                if (response.status !== 201) {\n                    throw new Error('Failed to upload image to S3');\n                }\n\n                const s3ImageUrl = response.body.postResponse.location;\n                s3Images.push(s3ImageUrl);\n            } catch (error) {\n                console.error('Error uploading image:', error);\n                // Show a toast message for the error\n                Toast.show({\n                    type: 'error',\n                    text1: 'Error Uploading Image',\n                    text2: 'Please try again later.',\n                });\n\n            }\n        }\n\n        return s3Images;\n    };\n\n\n    const handleSubmit = async () => {\n        try {\n            let s3Images = [];\n            // Upload images to S3 and wait for the operation to complete\n            if (images) {\n                s3Images = await uploadImagesToS3();\n            }\n            const postData = {\n                images: s3Images,\n                location,\n                adTitle,\n                adDescription,\n                phone,\n                email,\n                maxResidents,\n                preference,\n                isMaleOnly,\n                isFurnished,\n                hasAttachedBathroom,\n                isBachelorsAllowed,\n                price,\n                userId: userDetails._id,\n                user: {\n                    firebaseId: userInfo.firebaseId,\n                    gender: userDetails.gender,\n                    image: userDetails.image,\n                    name: userDetails.name,\n                    phone: userDetails.phoneNumber\n                }\n            };\n            setLoading(true);\n            if (route.params?.ad) {\n                // If route.params.ad exists, it means we're updating an existing ad\n                const response = await axios.put(\n                    `${API_BASE_URL}/rentpost/update/${route.params.ad._id}`,\n                    postData\n                );\n\n                // Check the response status and show a success or error toast\n                if (response.status === 200) {\n                    // Ad updated successfully\n                    console.log('Rental post updated successfully.');\n                    Toast.show({\n                        type: 'success',\n                        text1: 'Rental Post Updated',\n                        text2: 'Your rental post has been successfully updated.',\n                    });\n                    navigation.navigate('HomeTabNavigator');\n                } else {\n                    console.error('Failed to update rental post.');\n                    Toast.show({\n                        type: 'error',\n                        text1: 'Error Updating Rental Post',\n                        text2: 'Please try again later.',\n                    });\n                }\n            } else {\n                // If route.params.ad does not exist, it means we're creating a new ad\n                const response = await axios.post(`${API_BASE_URL}/rentpost/create`, postData);\n\n                // Check the response status and show a success or error toast\n                if (response.status === 201) {\n                    // Ad created successfully\n                    console.log('Rental post created successfully.');\n                    Toast.show({\n                        type: 'success',\n                        text1: 'Rental Post Created',\n                        text2: 'Your rental post has been successfully created.',\n                    });\n                    // navigation.navigate('HomeTabNavigator')\n                    navigation.goBack()\n                } else {\n                    console.error('Failed to create rental post.');\n                    Toast.show({\n                        type: 'error',\n                        text1: 'Error Creating Rental Post',\n                        text2: 'Please try again later.',\n                    });\n                }\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            // Handle error appropriately (e.g., show an error message to the user)\n            Toast.show({\n                type: 'error',\n                text1: 'Error',\n                text2: 'Please try again later.',\n            });\n        } finally {\n            // Set loading state back to false when done\n            setLoading(false);\n        }\n    };\n\n    return (\n        <ScrollView style={styles.container}>\n            <View style={styles.imageContainer}>\n                {/* Custom back button with Ionicons */}\n                <TouchableOpacity\n                    style={styles.backButton}\n                    onPress={() => navigation.goBack()}\n                >\n                    <Ionicons name=\"arrow-back\" size={24} color=\"#007DBC\" />\n                </TouchableOpacity>\n                {/* ... Your existing JSX ... */}\n            </View>\n            <View style={styles.imageContainer}>\n                <Text style={styles.heading}>Upload Photos</Text>\n                <TouchableOpacity style={styles.imageUploadButton} onPress={handleImageUpload}>\n                    <Text style={styles.uploadButtonText}>Select Images</Text>\n                </TouchableOpacity>\n                <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n                    {images.map((imageUri, index) => (\n                        <Image key={index} source={{ uri: imageUri }} style={styles.image} />\n                    ))}\n                </ScrollView>\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Location</Text>\n                <RNPickerSelect\n                    placeholder={{ label: 'Select Location', value: null }}\n                    onValueChange={(value) => setLocation(value)}\n                    items={[\n                        { label: 'Patia', value: 'Patia' },\n                        { label: 'Nayapali', value: 'Nayapali' },\n                        { label: 'CSpur', value: 'CSpur' },\n                        { label: 'Master Canteen', value: 'Master Canteen' },\n                    ]}\n                    style={pickerSelectStyles}\n                    value={location}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Ad Title</Text>\n                <TextInput\n                    style={styles.input}\n                    value={adTitle}\n                    onChangeText={setAdTitle}\n                    placeholder=\"Enter Ad Title\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Ad Description</Text>\n                <TextInput\n                    style={[styles.input, styles.multilineInput]}\n                    value={adDescription}\n                    onChangeText={setAdDescription}\n                    multiline\n                    placeholder=\"Enter Ad Description\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Phone Number</Text>\n                <TextInput\n                    style={styles.input}\n                    value={phone}\n                    onChangeText={setPhone}\n                    keyboardType=\"numeric\"\n                    placeholder=\"Enter Phone Number\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Email</Text>\n                <TextInput\n                    style={styles.input}\n                    value={email}\n                    onChangeText={setEmail}\n                    keyboardType=\"email-address\"\n                    placeholder=\"Enter Email\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Price</Text>\n                <TextInput\n                    style={styles.input}\n                    value={price}\n                    onChangeText={setPrice}\n                    keyboardType=\"numeric\"\n                    placeholder=\"Enter Price\"\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Maximum Residents</Text>\n                <View style={styles.stepperContainer}>\n                    <TouchableOpacity\n                        style={styles.stepperButton}\n                        onPress={() => maxResidents > 1 && setMaxResidents(maxResidents - 1)}\n                    >\n                        <Text style={styles.stepperButtonText}>-</Text>\n                    </TouchableOpacity>\n                    <Text style={styles.stepperValue}>{maxResidents}</Text>\n\n                    <TouchableOpacity\n                        style={styles.stepperButton}\n                        onPress={() => setMaxResidents(maxResidents + 1)}\n                    >\n                        <Text style={styles.stepperButtonText}>+</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Preference</Text>\n                <RNPickerSelect\n                    value={preference}\n                    placeholder={{ label: 'Select Preference', value: null }}\n                    onValueChange={(value) => setPreference(value)}\n                    items={[\n                        { label: 'Family', value: 'Family' },\n                        { label: 'Student', value: 'Student' },\n                        { label: 'Working Professional', value: 'Working Professional' },\n                    ]}\n                    style={pickerSelectStyles}\n\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Room for Male Only</Text>\n                <Switch\n                    value={isMaleOnly}\n                    onValueChange={setIsMaleOnly}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Furnishing</Text>\n                <Switch\n                    value={isFurnished}\n                    onValueChange={setIsFurnished}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Attached Bathroom</Text>\n                <Switch\n                    value={hasAttachedBathroom}\n                    onValueChange={setHasAttachedBathroom}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <View style={styles.fieldContainer}>\n                <Text style={styles.label}>Bachelors Allowed</Text>\n                <Switch\n                    value={isBachelorsAllowed}\n                    onValueChange={setIsBachelorsAllowed}\n                    trackColor={{ false: '#ccc', true: '#007DBC' }}\n                />\n            </View>\n            <TouchableOpacity\n                style={styles.submitButton}\n                onPress={handleSubmit}\n                disabled={loading} // Disable the button while loading\n            >\n                <Text style={styles.submitButtonText}>{loading ? 'Loading...' : 'Submit'}</Text>\n            </TouchableOpacity>\n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16,\n        backgroundColor: '#fff',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        color: '#007DBC',\n    },\n    imageContainer: {\n        marginBottom: 20,\n    },\n    imageUploadButton: {\n        backgroundColor: '#007DBC',\n        padding: 10,\n        borderRadius: 5,\n        alignItems: 'center',\n        bottom: 8,\n    },\n    uploadButtonText: {\n        color: 'white',\n        fontWeight: 'bold',\n    },\n    image: {\n        width: 100,\n        height: 100,\n        marginRight: 10,\n        borderRadius: 5,\n    },\n    fieldContainer: {\n        marginBottom: 20,\n    },\n    label: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginBottom: 5,\n        color: '#007DBC',\n    },\n    input: {\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n        padding: 10,\n    },\n    multilineInput: {\n        minHeight: 100,\n        textAlignVertical: 'top',\n    },\n    stepperContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    stepperButton: {\n        backgroundColor: '#007DBC',\n        padding: 8,\n        borderRadius: 20,\n        marginHorizontal: 5,\n    },\n    stepperButtonText: {\n        color: 'white',\n        fontSize: 18,\n    },\n    stepperValue: {\n        fontSize: 16,\n    },\n    submitButton: {\n        backgroundColor: '#007DBC',\n        padding: 16,\n        borderRadius: 5,\n        alignItems: 'center',\n    },\n    submitButtonText: {\n        color: 'white',\n        fontWeight: 'bold',\n        fontSize: 18,\n    },\n});\n\n\nconst pickerSelectStyles = StyleSheet.create({\n    inputIOS: {\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n        paddingVertical: 12,\n        paddingHorizontal: 10,\n        paddingRight: 30, // to ensure the text is never behind the icon\n        marginBottom: 20,\n    },\n    inputAndroid: {\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n        paddingVertical: 10,\n        paddingHorizontal: 10,\n        paddingRight: 30, // to ensure the text is never behind the icon\n        marginBottom: 20,\n    },\n});\n","import React, { useEffect, useCallback, useState } from 'react';\nimport {\n    View,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    Modal,\n    StyleSheet,\n    Platform,\n    ActivityIndicator,\n    Image,\n    ScrollView\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport { RNS3 } from 'react-native-aws3';\nimport { useUser } from '../context/UserContext';\nimport API_BASE_URL from '../services/config';\nimport Toast from 'react-native-toast-message';\nimport Autocomplete from 'react-native-autocomplete-input';\nimport { AuthOpen } from '../hooks/useAuth'\nimport { serverTimestamp, updateDoc, doc, setDoc } from 'firebase/firestore';\nimport { getAuth, updateProfile as updateAuthProfile } from 'firebase/auth';\nimport { db } from '../firebase/firebase';\nimport * as Location from 'expo-location';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport maleIcon from '../assets/images/male.png';\nimport femaleIcon from '../assets/images/female.png';\nimport student from '../assets/images/student.png';\nimport professionals from '../assets/images/professionals.png';\nimport family from '../assets/images/family.png';\nconst domains = ['gmail.com', 'hotmail.com', 'yahoo.com', 'outlook.com'];\n\nconst UpdateProfileModal = ({ isVisible, onDismiss, isUserExists }) => {\n    const { setUserInfoToStore } = useUser()\n    const { userToken, userInfo } = useUser();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [userId, setUserId] = useState('');\n    const [gender, setGender] = useState('');\n    const [tenantType, setTenantType] = useState('');\n    const [image, setImage] = useState(null);\n    const [isLoading, setLoading] = useState(false);\n    const [suggestions, setSuggestions] = useState([]);\n    const [fieldsDisabled, setFieldsDisabled] = useState(true);\n    const [userLocation, setUserLocation] = useState(''); // State variable to store user's location\n    const handleGenderSelect = (selectedGender) => {\n        setGender(selectedGender);\n    };\n\n    const requestLocationPermission = async () => {\n        try {\n            const { status } = await Location.requestForegroundPermissionsAsync();\n            if (status !== 'granted') {\n                // Handle permission denied or other errors\n                console.error('Location permission denied.');\n                return;\n            }\n            const location = await Location.getCurrentPositionAsync({});\n            setUserLocation(location); // Store user's location in state\n        } catch (error) {\n            console.error('Error getting user location:', error);\n        }\n    };\n\n    const updateProfileToFirebase = async ({ name, pic, email, isEdit }) => {\n        try {\n            const newDocRef = doc(db, 'user_profiles', userInfo.firebaseId);\n            const handler = isEdit ? updateDoc : setDoc;\n            await handler(newDocRef, {\n                id: userInfo.firebaseId,\n                name,\n                pic,\n                email,\n                phone: userToken.toString(),\n                timestamp: serverTimestamp(),\n            });\n            const auth = getAuth();\n            await updateAuthProfile(auth.currentUser, {\n                displayName: name,\n                photoURL: pic,\n            });\n            console.log('Updated to Firestore and Firebase Authentication');\n        } catch (error) {\n            console.error('Error updating profile:', error);\n        }\n    };\n\n    const handleTenantTypeSelect = (selectedType) => {\n        setTenantType(selectedType);\n    };\n\n    const handleChooseImage = async () => {\n        const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n        if (permissionResult.granted === false) {\n            alert('Permission to access media library is required!');\n            return;\n        }\n\n        const pickerResult = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n        });\n\n        if (!pickerResult.cancelled) {\n            const selectedImageUri = pickerResult.assets[0].uri;\n            setImage(selectedImageUri);\n        }\n    };\n\n    const handleEmailChange = (text) => {\n        setEmail(text);\n        const query = text.split('@')[1];\n        const filteredDomains = domains.filter((domain) => domain.includes(query));\n        setSuggestions(filteredDomains);\n    };\n\n    const handleUpdate = useCallback(async () => {\n        setLoading(true);\n        let s3ImageUrl = null;\n        const isEdit = userId !== ''\n        try {\n            if (image) {\n                const options = {\n                    keyPrefix: 'uploads/',\n                    bucket: 'primecaves',\n                    region: 'ap-south-1',\n                    accessKey: 'AKIARM6FSFR7MWP7YQUY',\n                    secretKey: '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',\n                    successActionStatus: 201,\n                };\n                let file;\n                if (Platform.OS === 'web') {\n                    const blob = await fetch(image).then((res) => res.blob());\n                    file = {\n                        uri: image,\n                        name: `${userToken.toString()}.jpeg`,\n                        type: 'image/jpeg',\n                        blob,\n                    };\n                } else {\n                    file = {\n                        uri: image,\n                        name: `${userToken.toString()}.jpeg`,\n                        type: 'image/jpeg',\n                    };\n                }\n                const response = await RNS3.put(file, options);\n                if (response.status !== 201) {\n                    throw new Error('Failed to upload image to S3');\n                }\n                s3ImageUrl = response.body.postResponse.location;\n            }\n            const apiEndpoint = isEdit\n                ? `${API_BASE_URL}/user/update/${userId}`\n                : `${API_BASE_URL}/user/register`;\n            const method = isEdit ? 'PUT' : 'POST'\n            const response = await fetch(apiEndpoint, {\n                method,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    tenantType,\n                    image,\n                    name,\n                    email,\n                    gender,\n                    phoneNumber: userToken.toString(),\n                    firebaseId: userInfo.firebaseId,\n                    location: userLocation,\n                }),\n            });\n\n            if (response.ok) {\n                const responseData = await response.json();\n                onDismiss();\n                updateProfileToFirebase({ name, pic: image, email, isEdit })\n                setUserInfoToStore({\n                    name, image, email,\n                    gender,\n                    phone: userToken.toString(),\n                    firebaseId: userInfo.firebaseId,\n                    tenantType,\n                    subscriptionStartDate: isEdit ? userInfo.subscriptionStartDate : 'NA',\n                    location: userLocation,\n                })\n                Toast.show({\n                    type: 'success',\n                    text1: 'Success',\n                    text2: 'Profile saved successfully',\n                });\n\n            } else {\n                console.error('Save failed');\n            }\n        } catch (error) {\n            console.error('Error during save:', error);\n            Toast.show({\n                type: 'error',\n                text1: 'Error',\n                text2: 'Profile failed to save',\n            });\n        } finally {\n            setLoading(false);\n        }\n    }, [userToken, name, email, gender, image, tenantType]);\n\n    useEffect(() => {\n        requestLocationPermission();\n        if (isVisible && isUserExists) {\n            setFieldsDisabled(true);\n            const fetchUserDetails = async () => {\n                try {\n                    const response = await fetch(`${API_BASE_URL}/user/getUserByPhoneNumber/${userToken.toString()}`);\n                    if (response.ok) {\n                        const userData = await response.json();\n                        setName(userData.name || '');\n                        setEmail(userData.email || '');\n                        setGender(userData.gender || '');\n                        setTenantType(userData.tenantType || '');\n                        setUserId(userData._id || '');\n                        setFieldsDisabled(false);\n                    } else {\n                        console.error('Failed to fetch user details');\n                    }\n                } catch (error) {\n                    console.error('Error fetching user details:', error);\n                    setFieldsDisabled(false);\n                }\n            };\n\n            fetchUserDetails();\n        }\n    }, [isVisible, userToken]);\n\n\n    const updateButtonStyle = [\n        styles.actionButton,\n        { backgroundColor: '#007DBC', left: 5 }, // Set background color to #007DBC\n    ];\n\n    return (\n        <Modal visible={isVisible} transparent={true} animationType=\"slide\">\n            <View style={styles.modalContainer}>\n                <LinearGradient // Use LinearGradient for the gradient background\n                    colors={['#007DBC', '#005CA1']} // Gradient colors\n                    style={styles.linearGradient}\n                >\n                    <View style={styles.modalContent}>\n                        {isUserExists && ( // Conditionally render the close icon\n                            <TouchableOpacity\n                                style={styles.closeButton}\n                                onPress={onDismiss}\n                            >\n                                <MaterialCommunityIcons\n                                    name=\"close\"\n                                    size={24}\n                                    color=\"white\" // Set the close icon color to white\n                                />\n                            </TouchableOpacity>\n                        )}\n                        <Text style={styles.modalTitle}>Update Profile</Text>\n                        <View style={styles.chooseImageButton}>\n                            <MaterialCommunityIcons\n                                name=\"camera\"\n                                size={24}\n                                color=\"#007DBC\"\n                                style={{ marginRight: 8 }}\n                            />\n                            <Text style={styles.chooseImageText}>Choose Image</Text>\n                        </View>\n                        {image && (\n                            <Image\n                                source={{ uri: image }}\n                                style={styles.profileImage}\n                            />\n                        )}\n                        <TextInput\n                            style={styles.input}\n                            placeholder=\"Name\"\n                            placeholderTextColor={\"#E7E0C3\"}\n                            value={name}\n                            onChangeText={(text) => setName(text)}\n                        />\n                        <TextInput\n                            style={styles.input}\n                            placeholder=\"Email\"\n                            placeholderTextColor={\"#E7E0C3\"}\n                            value={email}\n                            onChangeText={handleEmailChange}\n                        />\n                        <View style={styles.genderContainer}>\n                            <Text style={styles.label}>Gender</Text>\n                            <View style={styles.radioButtons}>\n                                <TouchableOpacity\n                                    onPress={() => handleGenderSelect('male')}\n                                    style={[\n                                        styles.radioButton,\n                                        gender === 'male' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={maleIcon}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={gender === 'male' ? styles.radioButtonTextSelected : styles.radioButtonText}>Male</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity\n                                    onPress={() => handleGenderSelect('female')}\n                                    style={[\n                                        styles.radioButton,\n                                        gender === 'female' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={femaleIcon}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={gender === 'female' ? styles.radioButtonTextSelected : styles.radioButtonText}>Female</Text>\n                                </TouchableOpacity>\n                            </View>\n                        </View>\n                        <View style={styles.tenantTypeContainer}>\n                            <Text style={styles.label}>I am</Text>\n                            <View style={styles.radioButtonsTenantType}>\n                                <TouchableOpacity\n                                    onPress={() => handleTenantTypeSelect('student')}\n                                    style={[\n                                        styles.radioButtonTenantType,\n                                        tenantType === 'student' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={student}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={tenantType === 'student' ? styles.radioButtonTextSelected : styles.radioButtonText}>Student</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity\n                                    onPress={() => handleTenantTypeSelect('professional')}\n                                    style={[\n                                        styles.radioButtonTenantType,\n                                        tenantType === 'professional' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={professionals}\n                                        style={{ width: 24, height: 24 }}\n                                    />\n                                    <Text style={tenantType === 'professional' ? styles.radioButtonTextSelected : styles.radioButtonText}>Working Professional</Text>\n                                </TouchableOpacity>\n                                <TouchableOpacity\n                                    onPress={() => handleTenantTypeSelect('family')}\n                                    style={[\n                                        styles.radioButtonTenantType,\n                                        tenantType === 'family' ? styles.radioButtonSelected : null,\n                                    ]}\n                                >\n                                    <Image\n                                        source={family}\n                                        style={{ width: 24, height: 24, }}\n                                    />\n                                    <Text style={tenantType === 'family' ? styles.radioButtonTextSelected : styles.radioButtonText}>Family</Text>\n                                </TouchableOpacity>\n                            </View>\n                        </View>\n                        {isLoading ? (\n                            <ActivityIndicator size=\"small\" color=\"#dddddd\" style={styles.loader} />\n                        ) : (\n                            <View style={styles.buttonContainer}>\n                                <TouchableOpacity\n                                    style={updateButtonStyle}\n                                    onPress={handleUpdate}\n                                >\n                                    <Text style={styles.buttonText}>Save</Text>\n                                </TouchableOpacity>\n                            </View>\n                        )}\n                    </View>\n                </LinearGradient>\n            </View>\n        </Modal>\n    );\n};\nconst styles = StyleSheet.create({\n    tenantTypeContainer: {\n        width: '100%',\n        marginBottom: 10,\n    },\n    actionButton: {\n        padding: 10,\n        borderRadius: 5,\n        width: '100%',\n        alignItems: 'center',\n    },\n    loader: {\n        marginTop: 10,\n    },\n    buttonText: {\n        color: 'white',\n        fontFamily: 'open-sans-bold'\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    profileImage: {\n        width: 100,\n        height: 100,\n        borderRadius: 50,\n        marginTop: 10,\n    },\n    scrollViewContent: {\n        flexGrow: 1, // Allow the content to grow vertically\n    },\n    modalContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    },\n    linearGradient: {\n        width: '80%', // Set the width to 100% to cover the entire modal\n    },\n    modalContent: {\n        padding: 20,\n        borderRadius: 10,\n        alignItems: 'center',\n        backgroundColor: 'transparent', // Make the content background transparent\n    },\n    modalTitle: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        color: 'white', // Set the text color to white\n        fontFamily: 'open-sans-regular',\n    },\n    input: {\n        width: '100%',\n        borderWidth: 1,\n        borderColor: 'white', // Set the border color to white\n        borderRadius: 10,\n        padding: 15,\n        marginBottom: 20,\n        fontSize: 16,\n        backgroundColor: 'transparent', // Make the input background transparent\n        color: 'white', // Set the text color to white\n        fontFamily: 'open-sans-light',\n    },\n    closeButton: {\n        position: 'absolute',\n        top: 10,\n        right: 10,\n        zIndex: 1,\n    },\n    chooseImageButton: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: 10,\n    },\n    chooseImageText: {\n        color: '#007DBC',\n        fontFamily: 'open-sans-bold'\n    },\n    genderContainer: {\n        width: '100%',\n        marginBottom: 10,\n    },\n    label: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginBottom: 5,\n        color: 'white'\n    },\n    radioButtons: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n\n    },\n    radioButton: {\n        flexDirection: 'row', // Make it horizontal\n        alignItems: 'center',\n        borderWidth: 0.4,\n        borderRadius: 5,\n        padding: 10,\n        marginRight: 10,\n    },\n    radioButtonSelected: {\n        borderColor: '#dddddd',\n        borderRadius: 5,\n        borderWidth: 1,\n        backgroundColor: '#007DBC', // Set background color to blue on selection\n    },\n    radioButtonText: {\n        color: 'white',\n        fontFamily: 'open-sans-regular',\n        marginLeft: 10,\n    },\n    radioButtonTextSelected: {\n        color: 'white', // Set text color to white on selection\n        marginLeft: 10, // Add margin to separate text from icon\n        fontFamily: 'open-sans-regular'\n\n    },\n    radioButtonsTenantType: { // Center items vertically\n        justifyContent: 'space-between',\n        marginBottom: 20, // Add margin to separate options\n    },\n\n    radioButtonTenantType: {\n        flexDirection: 'row',\n        borderWidth: 0.4,\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10, // Add margin to separate options\n    },\n\n});\n\nexport default UpdateProfileModal;\n\n","const getMatchedUserInfo = (users, userLoggedIn) => {\n  const newUsers = { ...users };\n  delete newUsers[userLoggedIn];\n\n  const [id, user] = Object.entries(newUsers).flat();\n\n  return { id, ...user };\n};\n\nexport default getMatchedUserInfo;\n","const generateId = (id1, id2) => {\n    if (id1 > id2) {\n        return id1 + id2\n    } else {\n        return id2 + id1\n    }\n}\n\nexport default generateId;","\nimport React, { useEffect, useState } from \"react\";\nimport { View, Text, TouchableOpacity, Image, StyleSheet } from \"react-native\";\n\nimport { useNavigation } from '@react-navigation/native';\nimport tw from \"tailwind-rn\";\nimport { collection, onSnapshot, orderBy, query } from \"@firebase/firestore\";\nimport { db } from \"../firebase/firebase\";\nimport getMatchedUserInfo from \"../utils/getMatchedUserInfo\";\nimport { useUser } from \"../context/UserContext\";\nimport generateId from \"../utils/generateIds\";\n\nconst ChatRow = ({ matchDetails }) => {\n  const navigation = useNavigation();\n  const { userInfo } = useUser();\n  const [lastMessage, setLastmessage] = useState(\"\");\n  const [matchedUserInfo, setMatchedUserInfo] = useState(null);\n  useEffect(() => {\n    setMatchedUserInfo(getMatchedUserInfo(matchDetails.users, userInfo.firebaseId));\n  }, [matchDetails, userInfo]);\n\n  useEffect(\n    () => {\n      if (matchedUserInfo) {\n        onSnapshot(\n          query(\n            collection(db, \"matches\",\n              generateId(userInfo.firebaseId, matchedUserInfo.id)\n              , \"messages\"),\n            orderBy(\"timestamp\", \"desc\")\n          ),\n          (snapshot) => setLastmessage(snapshot.docs[0]?.data()?.message)\n        )\n      }\n    },\n    [matchedUserInfo, db]\n  );\n  let userDetails;\n  if (matchedUserInfo) {\n    userDetails = matchDetails.users[matchedUserInfo.id];\n  }\n\n\n  const handleDirectMessage = () => {\n    navigation.navigate('MessagWithData', {\n      userDetails\n    })\n  };\n  return (\n    <TouchableOpacity\n      style={[\n        tw(\"flex-row items-center py-3 px-5 bg-white mx-3 my-1 rounded-lg\"),\n        styles.cardShadow,\n      ]}\n      onPress={handleDirectMessage}\n    >\n      {matchedUserInfo ? (\n        <>\n          <Image\n            style={tw(\"rounded-full h-16 w-16 mr-4\")}\n            source={{\n              uri:\n                matchedUserInfo?.photoUrl ||\n                'https://i.pinimg.com/736x/ff/a0/9a/ffa09aec412db3f54deadf1b3781de2a.jpg',\n            }}\n          />\n          <View>\n            <Text style={tw(\"text-lg font-bold\")}>\n              {matchedUserInfo?.name}\n            </Text>\n            <Text style={tw(\"font-light\")}>\n              {lastMessage?.length > 34\n                ? lastMessage?.substring(0, 34) + '...'\n                : lastMessage || 'Say Hi!'}\n            </Text>\n          </View>\n        </>\n      ) : (\n        <View style={tw('justify-center items-center')}>\n          <Text style={tw('text-lg text-gray-500')}>\n            Yet to have a conversation\n          </Text>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  cardShadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.41,\n    elevation: 2,\n  },\n});\n\n\nexport default ChatRow;\n","import { collection, onSnapshot, query, where } from \"@firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  View,\n  Text,\n  FlatList,\n  StyleSheet,\n} from \"react-native\";\nimport tw from \"tailwind-rn\";\nimport { AuthOpen } from \"../hooks/useAuth\";\nimport ChatRow from \"./ChatRow\";\nimport { db } from \"../firebase/firebase\";\nimport { useUser } from \"../context/UserContext\";\n\nconst ChatList = () => {\n  const [matches, setMatches] = useState([]);\n  const { userInfo } = useUser();\n  const [loading, setLoading] = useState(true);\n  useEffect(\n    () =>\n      onSnapshot(\n        query(\n          collection(db, \"matches\"),\n          where(\"usersMatched\", \"array-contains\", userInfo.firebaseId)\n        ),\n        (snapshot) =>\n          setMatches(\n            snapshot.docs.map(\n              (doc) => ({\n                id: doc.id,\n                ...doc.data(),\n              }),\n              setLoading(false)\n            )\n          )\n      ),\n    [userInfo]\n  );\n\n  return loading ? (\n    <View style={[styles.container, styles.horizontal]}>\n      <ActivityIndicator size=\"large\" color=\"#29325C\" />\n    </View>\n  ) : matches.length > 0 ? (\n    <FlatList\n      style={tw(\"h-full\")}\n      data={matches}\n      keyExtractor={(item) => item.id}\n      renderItem={({ item }) => <ChatRow matchDetails={item} />}\n    />\n  ) : (\n    <View style={tw(\"p-5\")}>\n      <Text style={tw(\"text-center text-lg\")}>No Message at the moment 😢</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n  },\n});\n\nexport default ChatList;\n","import { useNavigation } from \"@react-navigation/core\";\nimport React, { useEffect } from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport ChatList from \"../components/ChatList\";\nimport Header from \"../components/Header\";\n\nconst Chat = () => {\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView>\n      <ChatList />\n    </SafeAreaView>\n  );\n};\n\nexport default Chat;\n","import React, { useState, useEffect } from 'react';\nimport { View, TouchableOpacity, StyleSheet, Modal, Text, TextInput, FlatList, ScrollView } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport axios from 'axios';\nimport API_BASE_URL from '../services/config';\nimport { useUser } from '../context/UserContext';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport { logEvent } from 'firebase/analytics';\nimport { analytics } from '../firebase/firebase';\nconst DEFAULT_LOCATION = {\n  label: 'Patia',\n  value: 'Patia',\n}\nconst CustomHeader = ({ navigation, onSettingPress, showBack = false }) => {\n  const { setUserInfoToStore, useToken } = useUser()\n  const [selectedLocation, setSelectedLocation] = useState(DEFAULT_LOCATION);\n  const [allLocations, setLocations] = useState([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [suggestedLocations, setSuggestedLocations] = useState([]);\n  const [topLocations, setTopLocations] = useState([]);\n\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/user/getAllLocations`); // Replace with your API endpoint\n        const { locations = [] } = response.data;\n        const fetchedLocations = locations.map(location => ({\n          label: location,\n          value: location\n        }));\n        setLocations(fetchedLocations);\n        setTopLocations(fetchedLocations.slice(0, 30));\n      } catch (error) {\n        console.error('Error fetching locations in component:', error);\n      }\n    };\n\n    fetchLocations();\n  }, []);\n\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n    const filteredLocations = allLocations.filter((location) =>\n      location.label.toLowerCase().includes(query.toLowerCase())\n    );\n    setSuggestedLocations(filteredLocations);\n  };\n\n  const clearSearch = () => {\n    setSearchQuery('');\n    setSuggestedLocations([]);\n  };\n\n  const selectLocation = (location) => {\n    logEvent(analytics, \"location changed\", location);\n    setSelectedLocation(location);\n    setModalVisible(false);\n    setSearchQuery('');\n    setSuggestedLocations([]);\n    setUserInfoToStore(location)\n  };\n\n  const renderLocationItem = ({ item }) => (\n    <TouchableOpacity style={styles.locationItem} onPress={() => selectLocation(item)}>\n      <Text style={styles.locationText}>{item.label}</Text>\n    </TouchableOpacity>\n  );\n\n  const renderTag = (item) => (\n    <TouchableOpacity style={styles.tag} onPress={() => selectLocation(item)}>\n      <Text style={styles.tagText}>{item.label}</Text>\n    </TouchableOpacity>\n  );\n\n  return (\n    <SafeAreaView edges={['top']} style={{ flex: 0, backgroundColor: 'transparent' }}>\n      <LinearGradient colors={['#007DBC', '#005AAA']} style={styles.header}>\n        <View style={styles.leftContainer}>\n          {showBack && (\n            <TouchableOpacity onPress={() => navigation.goBack()} style={styles.iconButton}>\n              <Icon name=\"arrow-back\" size={24} color=\"#fff\" />\n            </TouchableOpacity>\n          )}\n          <TouchableOpacity style={styles.selectedLocationContainer} onPress={() => setModalVisible(true)}>\n            <Text style={styles.selectedLocationText}>\n              {selectedLocation ? selectedLocation.label : 'Select Location'}\n            </Text>\n            <Icon name=\"chevron-down\" size={20} color=\"#fff\" style={styles.downIcon} />\n          </TouchableOpacity>\n        </View>\n        <TouchableOpacity onPress={onSettingPress} style={styles.iconButton}>\n          <Icon name=\"settings\" size={24} color=\"#fff\" />\n        </TouchableOpacity>\n      </LinearGradient>\n\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalView}>\n          <LinearGradient colors={['#007DBC', '#dddddd']} style={styles.modalGradient}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalHeaderText}>Select Location</Text>\n              <TouchableOpacity onPress={() => setModalVisible(false)}>\n                <Icon name=\"close\" size={24} color=\"#fff\" />\n              </TouchableOpacity>\n            </View>\n            <View style={styles.searchContainer}>\n              <TextInput\n                style={styles.searchInput}\n                placeholder=\"Search Location\"\n                placeholderTextColor=\"#fff\"\n\n                value={searchQuery}\n                onChangeText={handleSearch}\n              />\n              {searchQuery.length > 0 && (\n                <TouchableOpacity style={styles.clearIcon} onPress={clearSearch}>\n                  <Icon name=\"close-circle\" size={20} color=\"#fff\" />\n                </TouchableOpacity>\n              )}\n            </View>\n            <ScrollView showsHorizontalScrollIndicator={false} contentContainerStyle={styles.tagsContainer}>\n              {searchQuery.length > 0\n                ? suggestedLocations.map((location, index) => (\n                  <React.Fragment key={index}>\n                    {renderTag(location)}\n                  </React.Fragment>\n                ))\n                : topLocations.map((location, index) => (\n                  <React.Fragment key={index}>\n                    {renderTag(location)}\n                  </React.Fragment>\n                ))}\n            </ScrollView>\n          </LinearGradient>\n        </View>\n      </Modal>\n    </SafeAreaView>\n  );\n};\n\nconst tagSize = 90;\n\nconst styles = StyleSheet.create({\n  header: {\n    height: 60,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 10,\n    justifyContent: 'space-between',\n  },\n  leftContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  selectedLocationContainer: {\n    flexDirection: 'row',\n    marginLeft: 10,\n    alignItems: 'center',\n  },\n  downIcon: {\n    marginLeft: 5,\n  },\n  rightContainer: {\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n  iconButton: {\n    padding: 10,\n  },\n  selectedLocationText: {\n    color: '#fff',\n    fontSize: 18,\n    fontFamily: 'open-sans-regular',\n  },\n  modalView: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  modalGradient: {\n    width: '100%',\n    height: '60%',\n    padding: 20,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  modalHeaderText: {\n    color: '#fff',\n    fontSize: 18,\n    fontFamily: 'open-sans-regular',\n  },\n  searchContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    borderRadius: 10,\n    padding: 10,\n    marginTop: 20,\n  },\n  searchInput: {\n    flex: 1,\n    color: '#fff',\n    fontSize: 16,\n    fontFamily: 'open-sans-light',\n  },\n  clearIcon: {\n    marginLeft: 10,\n  },\n  locationList: {\n    marginTop: 20,\n  },\n  locationItem: {\n    padding: 10,\n    borderRadius: 5,\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    marginTop: 10,\n  },\n  locationText: {\n    color: '#fff',\n  },\n  tagsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    marginTop: 10,\n  },\n  tag: {\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    width: 170,\n    height: tagSize,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n    marginBottom: 10,\n  },\n  tagText: {\n    color: '#fff',\n    fontSize: 14,\n    textAlign: 'center',\n    fontFamily: 'open-sans-regular',\n  },\n});\n\nexport default CustomHeader;\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Modal, Pressable, TextInput } from 'react-native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useUser } from '../context/UserContext';\nimport uuid4 from 'uuid4';\nimport Home from './Home';\nimport PostAdScreen from './PostAd';\nimport UpdateProfileModal from '../components/UpdateProfileModal';\nimport API_BASE_URL from '../services/config';\nimport { AuthOpen } from '../hooks/useAuth';\nimport Chat from './Chat';\nimport CustomHeader from '../components/CustomHeader';\nconst Tab = createBottomTabNavigator();\n\nconst HomeTabNavigator = () => {\n    const navigation = useNavigation();\n    const { logout, userToken, fetchUserDetails } = useUser();\n    const { logOut } = AuthOpen();\n    const [isModalVisible, setModalVisible] = React.useState(false);\n    const [isUpdateModalVisible, setUpdateModalVisible] = React.useState(false);\n    const [isUserExists, setIsUserExists] = useState(false);\n    const [userProfileData, setUserProfileData] = React.useState({\n        name: '',\n        email: '',\n        gender: '',\n        phone: '',\n    });\n    const handleMyAds = () => {\n        navigation.navigate('UserAds')\n        setModalVisible(false)\n    }\n    const renderPopover = () => (\n        <Modal\n            visible={isModalVisible}\n            transparent={true}\n            onRequestClose={() => {\n                setModalVisible(false);\n                setUpdateModalVisible(false);\n            }}\n        >\n            <Pressable\n                style={styles.popoverBackground}\n                onPress={() => {\n                    setModalVisible(false);\n                    setUpdateModalVisible(false);\n                }}\n            >\n                <View style={styles.popoverContent}>\n\n                    <TouchableOpacity\n                        style={styles.popoverOption}\n                        onPress={handleUpdateProfile}\n                    >\n                        <Text style={styles.popoverOptionText}>Update Profile</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={styles.popoverOption}\n                        onPress={handleMyAds}\n                    >\n                        <Text style={styles.popoverOptionText}>My Ads</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={styles.popoverOption} onPress={handleLogout}>\n                        <Text style={styles.popoverOptionText}>Logout</Text>\n                    </TouchableOpacity>\n                </View>\n            </Pressable>\n        </Modal>\n    );\n\n    useEffect(() => {\n        fetchUserExistsStatus()\n    }, []);\n\n    const fetchUserExistsStatus = async () => {\n        const checkPhoneResponse = await fetch(`${API_BASE_URL}/user/check-phone/${userToken.toString()}`);\n        const checkPhoneData = await checkPhoneResponse.json();\n        if (checkPhoneData.exists) {\n            fetchUserDetails()\n        }\n        setUpdateModalVisible(!checkPhoneData.exists)\n        setIsUserExists(checkPhoneData.exists)\n    }\n\n    const toggleModal = () => {\n        setModalVisible(!isModalVisible);\n        if (isUpdateModalVisible) {\n            setUpdateModalVisible(false);\n        }\n    };\n\n\n    const handleUpdateProfile = () => {\n        setModalVisible(false);\n        const fetchedProfileData = {\n            name: 'John Doe',\n            email: 'johndoe@example.com',\n            gender: 'Male',\n        };\n\n        setUserProfileData(fetchedProfileData);\n        setUpdateModalVisible(true);\n    };\n\n    const handleLogout = () => {\n        logout();\n        logOut()\n    };\n\n    const handleDismissUpdateModal = () => {\n        setUpdateModalVisible(false)\n        fetchUserExistsStatus()\n    }\n\n    const renderCustomHeader = () => {\n        return (\n            <CustomHeader\n                onBackPress={() => navigation.goBack()}\n                onSettingPress={toggleModal}\n            />\n        );\n    };\n    return (\n        <>\n            <Tab.Navigator\n                tabBarOptions={{\n                    activeTintColor: '#007DBC',\n                    inactiveTintColor: 'gray',\n                    showLabel: true,\n                    style: styles.tabBar,\n                    headerShown: false\n                }}\n                screenOptions={({ route }) => ({\n                    // headerRight: () => (\n                    //     <TouchableOpacity onPress={toggleModal}>\n                    //         <MaterialCommunityIcons\n                    //             name=\"cog\"\n                    //             size={24}\n                    //             color=\"#000\"\n                    //             style={{ marginRight: 16 }}\n                    //         />\n                    //     </TouchableOpacity>\n                    // ),\n                    header: renderCustomHeader\n\n                })}\n            >\n                <Tab.Screen\n                    name=\"HomeTabNavigator\"\n                    component={Home}\n                    options={{\n                        title: 'Home',\n                        tabBarIcon: ({ color, focused }) => (\n                            <MaterialCommunityIcons\n                                name={focused ? 'home' : 'home-outline'}\n                                size={24}\n                                color={color}\n                            />\n                        ),\n                    }}\n                />\n                <Tab.Screen\n                    name=\"PostAdScreen\"\n                    component={PostAdScreen}\n                    options={{\n                        title: '',\n                        tabBarIcon: ({ color, focused }) => (\n                            <MaterialCommunityIcons\n                                name={focused ? 'plus-circle' : 'plus-circle'}\n                                size={55}\n                                color={focused ? '#007DBC' : \"#28a745\"}\n                            />\n                        ),\n                    }}\n                />\n                <Tab.Screen\n                    name=\"Message\"\n                    component={Chat}\n                    options={{\n                        tabBarIcon: ({ color, focused }) => (\n                            <MaterialCommunityIcons\n                                name={focused ? 'message' : 'message'}\n                                size={24}\n                                color={color}\n                            />\n                        ),\n                    }}\n                />\n            </Tab.Navigator>\n            {renderPopover()}\n            {isUpdateModalVisible && (<UpdateProfileModal\n                isVisible={isUpdateModalVisible}\n                onDismiss={handleDismissUpdateModal}\n                userProfileData={userProfileData}\n                isUserExists={isUserExists}\n                onUpdateProfile={(updatedData) => {\n                    // Handle updating the user profile here\n                    setUserProfileData(updatedData);\n                }}\n            />)}\n\n        </>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        padding: 16,\n    },\n    tabBar: {\n        backgroundColor: 'white',\n        borderTopWidth: 0,\n        elevation: 2,\n    },\n    addButton: {\n        backgroundColor: '#007DBC',\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        alignItems: 'center',\n        justifyContent: 'center',\n        bottom: 16,\n        elevation: 4,\n    },\n    addButtonText: {\n        color: 'white',\n        fontSize: 32,\n        fontWeight: 'bold',\n    },\n    popoverBackground: {\n        flex: 1,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    popoverContent: {\n        backgroundColor: '#fff',\n        padding: 16,\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: '#ccc',\n    },\n    popoverOption: {\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n    },\n    popoverOptionText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#007DBC',\n    },\n});\n\nexport default HomeTabNavigator;\n","import { Text, View } from 'react-native'\nimport React, { Component } from 'react'\n\nexport default class Default extends Component {\n    render() {\n        return (\n            <View>\n                <Text>Default</Text>\n            </View>\n        )\n    }\n}","// AdCard.js\nimport React from 'react';\nimport { View, Text, Image, TouchableOpacity, StyleSheet } from 'react-native';\n\nconst AdCard = ({ ad, onEdit, onDelete, onClaim }) => {\n    return (\n        <View style={styles.container}>\n            <Image source={{ uri: ad.images[0] }} style={styles.image} />\n            <Text style={styles.title}>{ad.adTitle}</Text>\n            <Text style={styles.location}>{ad.location}</Text>\n            <View style={styles.buttonContainer}>\n                <TouchableOpacity style={styles.button} onPress={() => onEdit(ad)}>\n                    <Text style={styles.buttonText}>Edit</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.button} onPress={() => onDelete(ad._id)}>\n                    <Text style={styles.buttonText}>Delete</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.button} onPress={() => onClaim(ad)}>\n                    <Text style={styles.buttonText}>Claim</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'white',\n        borderRadius: 10,\n        padding: 10,\n        marginBottom: 20,\n        elevation: 2,\n    },\n    image: {\n        width: '100%',\n        height: 200,\n        borderRadius: 10,\n        marginBottom: 10,\n    },\n    title: {\n        fontSize: 16,\n        fontWeight: 'bold',\n    },\n    location: {\n        fontSize: 14,\n        color: 'gray',\n        marginBottom: 10,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    button: {\n        flex: 1,\n        backgroundColor: 'blue',\n        borderRadius: 5,\n        padding: 10,\n        alignItems: 'center',\n        marginHorizontal: 5,\n    },\n    buttonText: {\n        color: 'white',\n        fontWeight: 'bold',\n    },\n});\n\nexport default AdCard;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { View, FlatList, Text, TouchableOpacity, StyleSheet, Image, ActivityIndicator, RefreshControl } from 'react-native';\nimport Modal from 'react-native-modal';\nimport AdCard from '../components/AdCard'; // Import the AdCard component\nimport API_BASE_URL from '../services/config'; // Your API base URL\nimport { FontAwesome } from '@expo/vector-icons'; // Import FontAwesome icons\nimport { useNavigation } from '@react-navigation/native'; // Import the useNavigation hook\nimport { useUser } from '../context/UserContext';\n\nconst UserAds = () => {\n    const { userDetails } = useUser();\n    const [userAds, setUserAds] = useState([]);\n    const [selectedAd, setSelectedAd] = useState(null); // To store the selected ad for the modal\n    const [isModalVisible, setModalVisible] = useState(false);\n    const [isLoading, setIsLoading] = useState(false); // To track delete operation loading state\n    const [isDeleteConfirmationVisible, setDeleteConfirmationVisible] = useState(false); // To show delete confirmation modal\n    const navigation = useNavigation(); // Get the navigation object\n    const [refreshing, setRefreshing] = useState(false);\n\n    useEffect(() => {\n        // Fetch user's posted ads from the backend\n        const fetchUserAds = async () => {\n            try {\n                const response = await fetch(`${API_BASE_URL}/rentpost/user/${userDetails._id}`);\n                if (response.ok) {\n                    const data = await response.json();\n                    setUserAds(data);\n                } else {\n                    console.error('Failed to fetch user ads');\n                }\n            } catch (error) {\n                console.error('Error fetching user ads:', error);\n            }\n        };\n\n        fetchUserAds();\n    }, []);\n\n    const handleEdit = (ad) => {\n        navigation.navigate('PostAd', { ad });\n    };\n\n    const handleDelete = async (adId) => {\n        setIsLoading(true);\n\n        try {\n            // Send a request to delete the ad by its ID\n            const response = await fetch(`${API_BASE_URL}/rentpost/delete/${adId}`, {\n                method: 'DELETE',\n            });\n\n            if (response.ok) {\n                // Remove the deleted ad from the userAds state\n                setUserAds((prevAds) => prevAds.filter((ad) => ad._id !== adId));\n            } else {\n                console.error('Failed to delete ad');\n            }\n        } catch (error) {\n            console.error('Error deleting ad:', error);\n        } finally {\n            // Reset loading state\n            setIsLoading(false);\n            // Close the modal\n            setDeleteConfirmationVisible(false);\n        }\n    };\n\n    const handleClaim = (ad) => {\n        // Implement your claim logic here\n    };\n\n    const toggleModal = (ad) => {\n\n        setModalVisible(!isModalVisible);\n    };\n\n\n    const handleDeleteAd = (ad) => {\n        setSelectedAd(ad);\n        setDeleteConfirmationVisible(true)\n    }\n\n    const onRefresh = useCallback(async () => {\n        setRefreshing(true);\n\n        try {\n            // Fetch user's posted ads from the backend\n            const response = await fetch(`${API_BASE_URL}/rentpost/user/${userDetails._id}`);\n            if (response.ok) {\n                const data = await response.json();\n                setUserAds(data);\n            } else {\n                console.error('Failed to fetch user ads');\n            }\n        } catch (error) {\n            console.error('Error fetching user ads:', error);\n        } finally {\n            setRefreshing(false);\n        }\n    }, []);\n\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                {/* Back button */}\n                <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>\n                    <FontAwesome name=\"arrow-left\" size={24} color=\"black\" />\n                </TouchableOpacity>\n                <Text style={styles.headerText}>Your Ads</Text>\n            </View>\n            <FlatList\n                data={userAds}\n                keyExtractor={(item) => item._id}\n                renderItem={({ item }) => (\n                    <TouchableOpacity onPress={() => toggleModal(item)}>\n                        <AdCard ad={item} onEdit={handleEdit} onDelete={() => handleDeleteAd(item)} onClaim={handleClaim} />\n                    </TouchableOpacity>\n                )}\n                refreshControl={\n                    <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n                }\n            />\n            <Modal isVisible={isModalVisible}>\n                <View style={styles.modalContainer}>\n                    <TouchableOpacity onPress={() => setModalVisible(false)} style={styles.closeButton}>\n                        <Text style={styles.closeButtonText}>Close</Text>\n                    </TouchableOpacity>\n                    {/* Display ad details here */}\n                    {selectedAd && (\n                        <View>\n                            <Text>{selectedAd.adTitle}</Text>\n                            <Text>{selectedAd.location}</Text>\n                            <Image source={{ uri: selectedAd.images[0] }} style={styles.image} />\n                            {/* Add other ad details */}\n                        </View>\n                    )}\n                </View>\n            </Modal>\n            {/* Delete confirmation modal */}\n            <Modal isVisible={isDeleteConfirmationVisible}>\n                <View style={styles.deleteConfirmationContainer}>\n                    <Text style={styles.deleteConfirmationText}>Are you sure you want to delete this ad?</Text>\n                    <View style={styles.deleteConfirmationButtons}>\n                        <TouchableOpacity onPress={() => setDeleteConfirmationVisible(false)} style={styles.cancelButton}>\n                            <Text style={styles.cancelButtonText}>Cancel</Text>\n                        </TouchableOpacity>\n                        {isLoading ? (\n                            <ActivityIndicator size=\"small\" color=\"blue\" />\n                        ) : (\n                            <TouchableOpacity onPress={() => handleDelete(selectedAd._id)} style={styles.confirmButton}>\n                                <Text style={styles.confirmButtonText}>Delete</Text>\n                            </TouchableOpacity>\n                        )}\n                    </View>\n                </View>\n            </Modal>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16, // Add padding for the ads\n    },\n    header: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 16, // Add margin at the bottom of the header\n    },\n    backButton: {\n        marginRight: 8,\n    },\n    headerText: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    modalContainer: {\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 10,\n    },\n    closeButton: {\n        position: 'absolute',\n        top: 10,\n        right: 10,\n    },\n    closeButtonText: {\n        color: 'blue',\n        textDecorationLine: 'underline',\n    },\n    image: {\n        width: '100%',\n        height: 200,\n        borderRadius: 10,\n        marginBottom: 10,\n    },\n    deleteConfirmationContainer: {\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 10,\n    },\n    deleteConfirmationText: {\n        fontSize: 18,\n        marginBottom: 20,\n    },\n    deleteConfirmationButtons: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n    },\n    cancelButton: {\n        marginRight: 10,\n    },\n    cancelButtonText: {\n        color: 'blue',\n        textDecorationLine: 'underline',\n    },\n    confirmButton: {\n        backgroundColor: 'red',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 5,\n    },\n    confirmButtonText: {\n        color: 'white',\n    },\n});\n\nexport default UserAds;\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, Image, TouchableOpacity, ScrollView, SafeAreaView, Platform } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { db } from '../firebase/firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useUser } from '../context/UserContext';\nimport { FontAwesome } from '@expo/vector-icons';\nimport CustomHeader from '../components/CustomHeader';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nconst amenitiesMapping = [\n    { key: 'isFurnished', label: 'Furnished', icon: 'bed-outline' },\n    { key: 'hasAttachedBathroom', label: 'Attached Bathroom', icon: 'water-outline' },\n    { key: 'isMaleOnly', label: 'Male Only', icon: 'male-outline' },\n    { key: 'isBachelorsAllowed', label: 'Bachelors Allowed', icon: 'people-outline' },\n    // Add other attributes and their corresponding labels and icons here...\n];\n\nconst AdDetailsScreen = ({ route }) => {\n    const { userInfo } = useUser();\n    const { ad } = route.params;\n    const flatmatesData = ad?.flatmates || []\n    const firebaseId = ad.firebaseId;\n    const navigation = useNavigation();\n    const [userDetails, setUserDetails] = useState(null);\n    const [showDirectMessageButton, setShowDirectMessageButton] = useState(false);\n    const isPostedByCurrentUser = firebaseId === userInfo?.firebaseId;\n    useEffect(() => {\n        const fetchUserDetails = async () => {\n            try {\n                const userDoc = await getDoc(doc(db, 'user_profiles', firebaseId));\n\n                if (userDoc.exists()) {\n                    setUserDetails(userDoc.data());\n                    setShowDirectMessageButton(true);\n                }\n            } catch (error) {\n                console.error('Error fetching user details:', error);\n            }\n        };\n\n        if (firebaseId) {\n            fetchUserDetails();\n        }\n    }, [firebaseId]);\n\n    const handleDirectMessage = () => {\n        navigation.navigate('Message', {\n            userDetails\n        });\n    };\n\n    const handleBackButton = () => {\n        navigation.goBack();\n    };\n\n    return (\n        <SafeAreaView style={styles.flexContainer}>\n            <View style={{ height: \"90%\", backgroundColor: '#f8f9fa', }}>\n                <LinearGradient colors={['#007DBC', '#005AAA']} style={styles.header}>\n                    <TouchableOpacity onPress={handleBackButton}>\n                        <Ionicons name=\"arrow-back\" size={24} color=\"white\" />\n                    </TouchableOpacity>\n                </LinearGradient>\n                <ScrollView contentContainerStyle={styles.scrollViewContent}>\n                    <Image source={{ uri: ad.images[0] }} style={styles.villaImage} />\n                    <Text style={styles.villaName}>{ad.adTitle}</Text>\n                    <Text style={styles.location}>{ad.location}</Text>\n                    <View style={styles.offerContainer}>\n                        <FontAwesome name=\"check\" size={24} color=\"white\" style={styles.trustIcon} />\n\n                        <Text style={styles.offerText}>Verified User</Text>\n                    </View>\n                    <Text style={styles.description}>{ad.adDescription}</Text>\n                    <View style={styles.amenitiesContainer}>\n                        {/* <Text style={styles.amenitiesTitle}>Facilities available</Text> */}\n                        <View style={styles.amenitiesList}>\n                            {amenitiesMapping.map(amenity => {\n                                if (ad[amenity.key]) {\n                                    return (\n                                        <View style={styles.amenityItem} key={amenity.key}>\n                                            <Ionicons name={amenity.icon} size={24} color=\"white\" />\n                                            <Text style={styles.amenityLabel}>{amenity.label}</Text>\n                                        </View>\n                                    );\n                                }\n                                return null;\n                            })}\n                        </View>\n                    </View>\n                    {\n                        flatmatesData.length > 0 &&\n                        (<View style={styles.flatmatesSection}>\n                            <Text style={styles.title}>Flatmates</Text>\n                            <View style={styles.flatmatesGrid}>\n                                {flatmatesData.map((flatmate, index) => (\n                                    <View key={index} style={styles.flatmateCard}>\n                                        <Image source={{ uri: flatmate.image }} style={styles.flatmateImage} />\n                                        <Text style={styles.flatmateName}>{flatmate.name}</Text>\n                                        <Text style={styles.flatmateOccupation}>{flatmate.occupation}</Text>\n                                    </View>\n                                ))}\n                            </View>\n                        </View>)\n                    }\n                </ScrollView>\n            </View>\n            {isPostedByCurrentUser ? (\n                // Display a message indicating that the advertisement is posted by the current user\n                <Text style={styles.postedByCurrentUserMessage}>\n                    This advertisement is posted by you.\n                </Text>\n            ) : showDirectMessageButton && (\n                <View style={styles.footer}>\n                    <View style={styles.priceContainer}>\n                        <Text style={styles.discountedPrice}>₹{ad.price}/month</Text>\n                    </View>\n                    <TouchableOpacity onPress={handleDirectMessage} style={styles.bookNowButton}>\n                        <Text style={styles.bookNowButtonText}>\n                            Direct Message\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n\n            )}\n\n        </SafeAreaView>\n    );\n};\n\n// Styles have been merged from both sections\n\nconst styles = StyleSheet.create({\n    flexContainer: {\n        flex: 1,\n        backgroundColor: '#f8f9fa',\n        fontFamily: 'open-sans-regular'\n    },\n    container: {\n        flex: 1,\n    },\n    footer: {\n        borderTopWidth: 1,\n        borderColor: '#eaecef',\n        backgroundColor: '#fff',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        zIndex: 10,\n        padding: 16,\n        flexDirection: 'row',\n        ...(Platform.OS === 'web' ? {\n            position: 'fixed',\n            bottom: 0,\n            left: 0,\n            right: 0,\n        } : {\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            right: 0,\n        }),\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        padding: 16,\n        alignItems: 'center',\n        borderBottomWidth: 1,\n        borderBottomColor: '#eaecef',\n    },\n    icon: {\n        width: 24,\n        height: 24,\n    },\n    backButton: {\n        fontSize: 18,\n        color: '#007bff',\n    },\n    villaImage: {\n        width: '100%',\n        height: 300,\n        resizeMode: 'cover',\n    },\n    villaName: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginVertical: 8,\n        marginHorizontal: 16,\n        color: '#212529',\n        fontFamily: 'open-sans-bold'\n    },\n    location: {\n        fontSize: 16,\n        color: '#6c757d',\n        marginBottom: 8,\n        marginLeft: 16,\n        fontFamily: 'open-sans-regular'\n    },\n    offerContainer: {\n        flexDirection: 'row',\n        backgroundColor: '#007DBC',\n        padding: 12,\n        marginHorizontal: 16,\n        marginVertical: 8,\n        borderRadius: 4,\n    },\n    offerText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontFamily: 'open-sans-regular'\n    },\n    description: {\n        marginHorizontal: 16,\n        marginVertical: 8,\n        fontSize: 16,\n        color: '#212529',\n        fontFamily: 'open-sans-regular'\n    },\n    hostImage: {\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        margin: 16,\n        borderWidth: 2,\n        borderColor: '#eaecef',\n    },\n    hostName: {\n        fontSize: 18,\n        fontWeight: '500',\n        marginLeft: 16,\n        color: '#212529',\n    },\n    price: {\n        fontSize: 28,\n        fontWeight: 'bold',\n        marginHorizontal: 16,\n        marginVertical: 8,\n        color: '#28a745',\n    },\n    directMessageButton: {\n        backgroundColor: '#28a745',\n        padding: 12,\n        marginHorizontal: 16,\n        marginVertical: 8,\n        borderRadius: 4,\n        alignItems: 'center',\n    },\n    directMessageButtonText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontSize: 18,\n    },\n    postedByCurrentUserMessage: {\n        color: '#dc3545',\n        textAlign: 'center',\n        marginBottom: 10,\n        fontSize: 16,\n    },\n    amenitiesContainer: {\n        padding: 16,\n        borderBottomWidth: 1,\n        borderBottomColor: '#eaecef',\n        backgroundColor: '#fff',\n    },\n    amenitiesTitle: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#212529',\n        marginBottom: 8,\n        fontFamily: 'open-sans-bold'\n    },\n    amenitiesList: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'flex-start',\n    },\n    amenityItem: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        backgroundColor: '#007DBC', // This sets the background color to a blue shade\n        borderRadius: 16,\n        padding: 8,\n        marginRight: 8,\n        marginBottom: 8,\n    },\n    amenityLabel: {\n        marginLeft: 8,\n        fontSize: 14,\n        color: '#FFFFFF', // This sets the text color to white\n        fontFamily: 'open-sans-regular'\n    },\n    priceContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    originalPrice: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        textDecorationLine: 'line-through',\n        marginRight: 8,\n    },\n    discountedPrice: {\n        fontSize: 22,\n        fontWeight: 'bold',\n    },\n    bookNowButton: {\n        backgroundColor: '#28a745',\n        padding: 12,\n        borderRadius: 4,\n        alignItems: 'center',\n    },\n    bookNowButtonText: {\n        color: '#fff',\n        fontWeight: '500',\n        fontSize: 18,\n    },\n    flatmateRow: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    flatmatesSection: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#e9ecef', // Changed background color for better visibility\n    },\n    title: {\n        fontSize: 24,\n        marginBottom: 20,\n        fontFamily: 'open-sans-bold'\n    },\n    flatmatesGrid: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between', // To maintain equal spacing between two cards in a row\n    },\n    flatmateCard: {\n        width: '48%', // Slightly less than half to account for any potential margins or paddings\n        marginBottom: 15,\n        padding: 10, // Added some padding\n        backgroundColor: '#fff', // White background for the card\n        borderRadius: 8, // Rounded corners\n        alignItems: 'center', // Center items horizontally\n    },\n    flatmateImage: {\n        width: 50,\n        height: 50,\n        borderRadius: 25,\n        marginBottom: 10, // Margin below the image\n    },\n    flatmateName: {\n        fontSize: 18,\n        fontWeight: '600',\n        fontFamily: 'open-sans-regular',\n        textAlign: 'center', // Center the text\n    },\n    flatmateOccupation: {\n        fontSize: 14,\n        color: 'gray',\n        fontFamily: 'open-sans-light',\n        textAlign: 'center', // Center the text\n    },\n    trustIcon: {\n        marginRight: 5,  // Some space between the icon and text\n        bottom: 2,\n    },\n    scrollViewContent: {\n        paddingBottom: 20, // Add some bottom padding to accommodate for any absolutely positioned elements\n    },\n});\n\n\n\nexport default AdDetailsScreen;\n","import React from \"react\";\nimport { View, Text, Image, StyleSheet } from \"react-native\";\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\n\nTimeAgo.addLocale(en)\nconst timeAgo = new TimeAgo('en-US')\n\nconst ReceiverMessage = ({ message }) => {\n\n  const date2 = new Date(message.timestamp.toDate());\n  const numericTimestamp = date2.getTime();\n  const x = timeAgo.format(numericTimestamp, 'mini')\n\n  return (\n    <View style={styles.container}>\n      <Image\n        style={styles.image}\n        source={{\n          uri: message.photoURL ||\n            'https://i.pinimg.com/736x/ff/a0/9a/ffa09aec412db3f54deadf1b3781de2a.jpg',\n        }}\n      />\n      <View style={styles.messageBubble}>\n        <Text style={styles.messageText}>{message.message}</Text>\n        <Text style={styles.timestamp}>{x} ago</Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    margin: 5,\n    alignItems: 'flex-end',\n  },\n  image: {\n    height: 40,\n    width: 40,\n    borderRadius: 20,\n    marginRight: 5,\n    borderColor: 'white',\n    borderWidth: 1,\n  },\n  messageBubble: {\n    backgroundColor: '#f0f0f0', // A soft color\n    borderRadius: 20,\n    padding: 10,\n    maxWidth: '80%',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  messageText: {\n    color: '#333', // Darker text color for contrast\n    fontSize: 16,\n  },\n  timestamp: {\n    color: '#888', // Soft color for the timestamp\n    fontSize: 12,\n    marginTop: 5,\n    alignSelf: 'flex-end',\n  }\n});\n\nexport default ReceiverMessage;\n","import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\n\nTimeAgo.addLocale(en)\nconst timeAgo = new TimeAgo('en-US')\n\nconst SenderMessage = ({ message }) => {\n\n  const date2 = new Date(message?.timestamp?.toDate());\n  const numericTimestamp = date2?.getTime();\n  const x = numericTimestamp ? timeAgo.format(numericTimestamp, 'mini') : ''\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.messageText}>{message.message}</Text>\n      <Text style={styles.timestamp}>{x ? x + ' ago' : 'sending...'}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#4D7EA8', // A calm blue tone\n    borderRadius: 15,\n    padding: 10,\n    marginVertical: 5,\n    marginRight: 10,\n    marginLeft: 'auto',\n    maxWidth: '80%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3,\n  },\n  messageText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    marginBottom: 2,\n  },\n  timestamp: {\n    color: '#D3E3F2', // A lighter shade for timestamp\n    fontSize: 12,\n    alignSelf: 'flex-end',\n  }\n});\n\nexport default SenderMessage;\n","import { Image, StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Ionicons } from '@expo/vector-icons'; // Make sure to install this library\n\nconst ChatHeader = ({ userDetails, navigation }) => {\n    const handleBackPress = () => {\n        navigation.goBack();\n    };\n\n    return (\n        <SafeAreaView>\n            <View style={styles.chatHeaderContainer} >\n                <TouchableOpacity onPress={handleBackPress} style={styles.backButton}>\n                    <Ionicons name=\"arrow-back\" size={24} color=\"#FFFFFF\" />\n                </TouchableOpacity>\n                {userDetails?.image && (<Image source={{ uri: userDetails.image }} style={styles.chatHeaderImage} />)}\n                <Text style={styles.chatHeaderText}>{userDetails.name}</Text>\n            </View>\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    chatHeaderContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        padding: 10,\n        backgroundColor: '#006699', // A nice shade of blue\n        borderBottomWidth: 1,\n        borderColor: '#006699', // A slightly darker blue for the border\n    },\n    chatHeaderImage: {\n        width: 40,\n        height: 40,\n        borderRadius: 20,\n        marginRight: 10,\n    },\n    chatHeaderText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#FFFFFF', // White text for better contrast and readability\n    },\n    backButton: {\n        marginRight: 10,\n    },\n});\n\nexport default ChatHeader;","import React from 'react'; // Basic React import\nimport { View, Text, TouchableOpacity, StyleSheet, ScrollView } from 'react-native'; // React Native components\n\n\nconst MessageSuggestion = ({ onSelectSuggestion }) => {\n    const suggestions = [\n        \"Hi, How are you ?\",\n        \"Hi, I am looking for this house, is it available?\",\n    ];\n\n    return (\n        <ScrollView\n\n            horizontal={true}\n            contentContainerStyle={styles.messageSuggestionContainer}>\n            {suggestions.map((text, index) => (\n                <TouchableOpacity\n                    key={index}\n                    style={styles.messageSuggestion}\n                    onPress={() => onSelectSuggestion(text)}\n                >\n                    <Text style={styles.messageSuggestionText}>{text}</Text>\n                </TouchableOpacity>\n            ))}\n        </ScrollView>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    // ... other styles\n    messageSuggestionContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        paddingVertical: 10,\n    },\n    messageSuggestion: {\n        backgroundColor: '#FFFFFF', // Blue background\n        borderRadius: 20,\n        paddingVertical: 10,\n        paddingHorizontal: 15,\n        marginHorizontal: 5,\n    },\n    messageSuggestionText: {\n        // color: '#FFFFFF', // White text\n        fontSize: 16,\n    },\n});\n\nexport default MessageSuggestion;","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  KeyboardAvoidingView,\n  Platform,\n  FlatList,\n  Button,\n  Keyboard,\n  TouchableOpacity,\n  Pressable,\n  Modal,\n  StyleSheet,\n  ActivityIndicator,\n  Alert\n} from \"react-native\";\nimport { WebView } from 'react-native-webview';\nimport axios from \"axios\"; // Import Axios for making API requests\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\nimport tw from \"tailwind-rn\";\nimport ReceiverMessage from \"../components/ReceiverMessage\";\nimport SenderMessage from \"../components/SenderMessage\";\nimport {\n  addDoc,\n  collection,\n  onSnapshot,\n  orderBy,\n  query,\n  serverTimestamp,\n} from \"@firebase/firestore\";\nimport { analytics, db } from \"../firebase/firebase\";\nimport { useUser } from \"../context/UserContext\";\nimport generateId from \"../utils/generateIds\";\nimport API_BASE_URL from \"../services/config\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport ChatHeader from \"../components/ChatHeader\";\nimport MessageSuggestion from \"../components/MessageSuggestion\";\nimport { logEvent } from \"firebase/analytics\";\n\nconst MessageScreen = ({ route, navigation }) => {\n  const flatListRef = useRef();\n  const [userInfo, setUserInfo] = useState({});\n  const { userInfo: userInfoFromAsync, setUserInfoToStore, fetchUserDetails } = useUser();\n  const { params: { userDetails } } = route;\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [isConversationStarter, setConversationStarter] = useState(undefined);\n  const [combinedUid, setCombinedUid] = useState([]);\n  const [scrollToEnd, setScrollToEnd] = useState(false); // To scroll to the end of the chat\n  const [showModal, setShowModal] = useState(false); // State for the modal\n  const [webviewUrl, setWebviewUrl] = useState(\n    \"https://subham-routray.mojo.page/odicult-subscription\"\n  );\n  const [isLoading, setIsLoading] = useState(true);\n  const isWeb = Platform.OS === 'web';\n\n  useEffect(() => {\n    fetchUserInitialDetails();\n  }, [db, combinedUid]);\n\n  useEffect(() => {\n    if (messages && messages.length > 0) {\n      const firstMessage = messages[messages.length - 1]; // Since it's an inverted list, the first message will be the last element in the array.\n      setConversationStarter(firstMessage.userId === userInfo.firebaseId);\n    }\n  }, [messages]);\n\n\n  const fetchUserInitialDetails = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/user/getUserByFirebaseId/${userInfoFromAsync.firebaseId}`);\n      if (response.ok) {\n        const userInfo = await response.json();\n        const combinedUid = generateId(userInfo.firebaseId, userDetails.id);\n        setCombinedUid(combinedUid)\n        setUserInfo(userInfo)\n        setMatchUsers(combinedUid)\n      } else {\n        console.error('Failed to fetch user details');\n        setIsLoading(false); // Set loading to false even if there is an error\n      }\n    } catch (error) {\n      console.error('Error fetching user details:', error);\n      setIsLoading(false); // Set loading to false even if there is an error\n    }\n  };\n\n  const setMatchUsers = (combinedUid) => {\n    const matchDocRef = doc(db, \"matches\", combinedUid);\n    getDoc(matchDocRef)\n      .then((docSnapshot) => {\n        if (!docSnapshot.exists()) {\n          const sanitizedUserInto = {\n            image: userInfo.image || null,\n            email: userInfo.email,\n            phone: userInfo.phoneNumber,\n            id: userInfo.firebaseId,\n            name: userInfo.name,\n          };\n          setDoc(doc(db, \"matches\", combinedUid), {\n            users: {\n              [userInfo.firebaseId]: sanitizedUserInto,\n              [userDetails.id]: userDetails,\n            },\n            usersMatched: [userInfo.firebaseId, userDetails.id],\n            timestamp: serverTimestamp(),\n          });\n\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error checking document existence:\", error);\n      });\n    fetchMessages()\n  }\n\n  const fetchMessages = () => {\n    onSnapshot(\n      query(\n        collection(db, \"matches\", combinedUid, \"messages\"),\n        orderBy(\"timestamp\", \"desc\")\n      ),\n      (snapshot) => {\n        const fetchedMessages = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setMessages(fetchedMessages);\n        setIsLoading(false);\n        // if (scrollToEnd) {\n        //   scrollFlatListToEnd();\n        // }\n      }\n    );\n  }\n\n  const scrollFlatListToEnd = () => {\n    // setScrollToEnd(true);\n    // setTimeout(() => setScrollToEnd(false), 200); // Delay to ensure scrolling to end works\n    flatListRef.current?.scrollToEnd({ animated: true });\n  };\n\n  const handleSendMessage = async () => {\n    if (input === \"\") {\n      return; // Do nothing if the input is empty\n    }\n\n    // If user is the conversation starter and doesn't have coins or subscription, show the modal\n    if (isConversationStarter && userInfo.coins === 0 && userInfo.subscriptionStartDate === \"NA\") {\n      setShowModal(true);\n      return;\n    }\n\n    // Process to send message\n    try {\n      await addDoc(collection(db, \"matches\", combinedUid, \"messages\"), {\n        timestamp: serverTimestamp(),\n        userId: userInfo.firebaseId,\n        name: userInfo.name,\n        photoURL: userInfo.pic || null,\n        message: input,\n      });\n      setInput('')\n      // If the user is the conversation starter, deduct a coin after sending a message\n      if (isConversationStarter) {\n        // Check if the user has enough coins to send the message\n        if (userInfo.coins > 0) {\n          const updatedCoins = Math.max(userInfo.coins - 1, 0);  // Deduct one coin\n          await axios.put(`${API_BASE_URL}/user/updateUserCoins/${userInfo.phoneNumber}`, {\n            coins: updatedCoins,\n          });\n\n          // Update the local state with the new coins value\n          setUserInfo((prevUserInfo) => ({\n            ...prevUserInfo,\n            coins: updatedCoins,\n          }));\n\n          // Assuming setUserInfoToStore is to update the AsyncStorage or similar storage,\n          // it's important to ensure that it is successful and handle the case where it's not.\n          // For brevity, I'm not including error handling here.\n          setUserInfoToStore({\n            ...userInfo,\n            coins: updatedCoins,\n          });\n        } else {\n          // Handle the case when the user does not have enough coins.\n          Alert.alert(\"You do not have enough coins to send a message.\");\n          return;\n        }\n      }\n\n      fetchMessages();\n      setInput(\"\");\n      scrollFlatListToEnd(); // Scroll to the end after sending a message\n\n    } catch (error) {\n      console.error(\"Error sending message or updating coins:\", error);\n      Alert.alert(\"Message sending failed\");\n    }\n  };\n\n\n\n  const handleModalClose = () => {\n    logEvent(analytics, \"purchase banner changed\");\n    fetchUserDetails()\n    setShowModal(false)\n  }\n\n  const handleSelectSuggestion = (text) => {\n    setInput(text);\n  };\n\n  if (isLoading) {\n    return (\n      <LinearGradient colors={['#dddddd', '#005AAA']} style={styles.loaderContainer}>\n        <ActivityIndicator size=\"large\" color=\"white\" />\n      </LinearGradient>\n    );\n  }\n\n  return (\n    <>\n      <ChatHeader userDetails={userDetails} navigation={navigation} />\n      <LinearGradient colors={['#dddddd', '#005AAA']} style={styles.container}>\n        <Pressable onPress={Keyboard.dismiss}>\n          <FlatList\n            ref={flatListRef}\n            data={messages}\n            inverted={true}\n            style={styles.flatList}\n            keyExtractor={(item) => item.id}\n            renderItem={({ item: message }) =>\n              message.userId === userInfo.firebaseId ? (\n                <SenderMessage key={message.id} message={message} />\n              ) : (\n                <ReceiverMessage key={message.id} message={message} />\n              )\n            }\n            onContentSizeChange={scrollFlatListToEnd}\n          />\n        </Pressable>\n      </LinearGradient>\n      <LinearGradient colors={['#005AAA', '#dddddd',]} style={styles.inputSection}>\n        <KeyboardAvoidingView\n          behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n          style={styles.keyboardAvoidingView}\n          keyboardVerticalOffset={10}\n        >\n          {\n            messages.length === 0 && (\n              <View style={styles.suggestionsContainer}>\n                <MessageSuggestion onSelectSuggestion={handleSelectSuggestion} />\n              </View>\n            )\n          }\n          <View style={[styles.messageInputContainer, isWeb && styles.messageInputContainerWeb]}>\n            <TextInput\n              multiline={true}\n              style={styles.textInput}\n              placeholder=\"Send a message\"\n              onChangeText={(value) => {\n                setInput(value)\n                logEvent(analytics, \"message changed\", value);\n              }}\n              value={input}\n            />\n            <TouchableOpacity onPress={handleSendMessage} style={styles.sendButton}>\n              <Text style={styles.sendButtonText}>Send</Text>\n            </TouchableOpacity>\n          </View>\n        </KeyboardAvoidingView>\n      </LinearGradient>\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={showModal}\n        onRequestClose={handleModalClose}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>Subscribe Now</Text>\n              <TouchableOpacity onPress={handleModalClose}>\n                <Text style={styles.modalCloseText}>Close</Text>\n              </TouchableOpacity>\n            </View>\n            {Platform.OS !== 'web' ?\n              <WebView source={{ uri: webviewUrl }} style={styles.webView} /> :\n              <iframe src={webviewUrl} height={'100%'} width={'100%'} />}\n          </View>\n        </View>\n      </Modal>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  keyboardAvoidingView: {\n    flex: 1,\n  },\n  messageInputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderTopWidth: 1,\n    borderColor: '#E2E8F0',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n  },\n  textInput: {\n    flex: 1,\n    minHeight: 40,\n    padding: 10,\n    borderRadius: 20,\n    backgroundColor: '#FFFFFF',\n    fontSize: 16,\n  },\n  sendButton: {\n    marginLeft: 10,\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    backgroundColor: '#63B3ED',\n    borderRadius: 20,\n  },\n  sendButtonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    width: '80%',\n    height: '80%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    overflow: 'hidden',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderColor: '#E2E8F0',\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  modalCloseText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#3182CE',\n  },\n  webView: {\n    flex: 1,\n  },\n  messageInputContainerWeb: {\n    position: 'fixed', // Fix position to bottom on web\n    bottom: 0,\n    left: 0,\n    right: 0,\n    borderTopWidth: 1,\n    borderColor: '#E2E8F0',\n    backgroundColor: 'white', // or any desired color\n  },\n  suggestionsContainer: {\n    position: 'fixed',\n    bottom: 80, // You should adjust this value based on the height of messageInputContainer + some offset\n    width: '100%',\n    zIndex: 2,  // Ensure the suggestions are above the FlatList\n  },\n  loaderContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  inputSection: {\n    position: 'absolute', // Input section will be positioned absolutely\n    bottom: 0, // Sticks to the bottom\n    width: '100%', // Full width of the screen\n    padding: 10, // Optional padding\n  },\n\n  flatList: {\n    // Removed paddingLeft and added flex: 1\n    flex: 1, // Takes all available space except for the input section\n  },\n});\n\nexport default MessageScreen;","// src/navigation/AuthStack.js\n\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeTabNavigator from '../screens/HomeTabNavigator';\nimport PostAdScreen from '../screens/PostAd';\nimport Default from '../screens/Default';\nimport UserAds from '../screens/UserAds';\nimport AdDetailsScreen from '../screens/AdDetails';\nimport Message from '../screens/Message';\nimport Chat from '../screens/Chat';\nimport ChatRow from '../components/ChatRow';\nimport CustomHeader from '../components/CustomHeader';\n\nconst Stack = createStackNavigator();\n\nconst AppStack = () => {\n    return (\n        <Stack.Navigator\n            screenOptions={{\n                headerShown: false\n            }}\n            initialRouteName='HomeTabNavigator'\n        >\n            <Stack.Screen name=\"HomeTabNavigator\" component={HomeTabNavigator} />\n            <Stack.Screen name=\"PostAd\" component={PostAdScreen} />\n            <Stack.Screen name=\"UserAds\" component={UserAds} />\n            <Stack.Screen name=\"SingleScreenAd\" component={AdDetailsScreen} />\n            <Stack.Screen name=\"Chat\" component={Chat} />\n            <Stack.Screen name=\"Location\" component={CustomHeader} />\n            <Stack.Screen name=\"Message\" component={Message} />\n            <Stack.Screen name=\"MessagWithData\" component={Message} />\n        </Stack.Navigator>\n    );\n};\n\nexport default AppStack;\n","import React from 'react';\nimport { View, Text, TouchableOpacity } from 'react-native';\nimport Modal from 'react-native-modal';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nconst UpdateAppModal = ({ isVisible, onAppUpdate }) => {\n    return (\n        <Modal isVisible={isVisible} backdropColor=\"rgba(0, 0, 0, 0.5)\" backdropOpacity={1}>\n            <LinearGradient\n                colors={['#007DBC', '#005AAA']}\n                style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}\n            >\n                <View style={{ backgroundColor: 'white', borderRadius: 10, padding: 20 }}>\n                    <Text style={{ color: '#007DBC', fontSize: 18, marginBottom: 20 }}>Please update the app now.</Text>\n                    <TouchableOpacity\n                        style={{ backgroundColor: '#007DBC', padding: 10, borderRadius: 5 }}\n                        onPress={onAppUpdate}\n                    >\n                        <Text style={{ color: 'white', textAlign: 'center', fontSize: 16 }}>Click Here to Update</Text>\n                    </TouchableOpacity>\n                </View>\n            </LinearGradient>\n        </Modal>\n    );\n};\n\nexport default UpdateAppModal;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AuthStack from './navigation/AuthStack';\nimport AppStack from './navigation/AppStack';\nimport { UserProvider, useUser } from './context/UserContext';\nimport Toast from 'react-native-toast-message';\nimport { AuthProvider } from './hooks/useAuth';\nimport UpdateAppModal from './components/UpdateAppModal'; // Import the modal component\nimport API_BASE_URL from './services/config';\nimport { Linking } from 'react-native';\n\nimport * as Font from 'expo-font';\n\nconst App = () => {\n  const { userToken } = useUser();\n  const [showUpdateModal, setShowUpdateModal] = useState(false); // State for modal visibility\n  const [action, setAction] = useState('');\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  useEffect(() => {\n    Font.loadAsync({\n      'open-sans-regular': require('./assets/fonts/OpenSans-Regular.ttf'),\n      'open-sans-light': require('./assets/fonts/OpenSans-Light.ttf'),\n      'open-sans-bold': require('./assets/fonts/OpenSans-Bold.ttf'),\n      'argon': require('./assets/fonts/argon.ttf'),\n    });\n    setFontsLoaded(true)\n  }, []);\n  useEffect(() => {\n    const fetchAppUpdateStatus = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/user/getAppUpdateStatus`); // Replace with your API endpoint\n        const { blockApp, action } = response.data;\n        if (blockApp) {\n          setShowUpdateModal(true);\n          setAction(action)\n        }\n      } catch (error) {\n        console.error('Error fetching app update status:', error);\n      }\n    };\n    fetchAppUpdateStatus();\n  }, []);\n\n  const handleAppUpdate = () => {\n    Linking.canOpenURL(action)\n      .then((supported) => {\n        if (supported) {\n          Linking.openURL(action);\n        } else {\n          console.error('Cannot open Play Store link');\n        }\n      })\n      .catch((error) => {\n        console.error('Error opening Play Store link:', error);\n      });\n  };\n\n  return (\n    <>\n      <Toast />\n      <AuthProvider>\n        <NavigationContainer>\n          {userToken ? <AppStack /> : <AuthStack />}\n        </NavigationContainer>\n      </AuthProvider>\n      <UpdateAppModal\n        isVisible={showUpdateModal}\n        onClose={() => setShowUpdateModal(false)}\n        onAppUpdate={handleAppUpdate}\n      />\n    </>\n  );\n};\n\nexport default () => {\n  return (\n    <UserProvider>\n      <App />\n    </UserProvider>\n  );\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [771], () => (__webpack_require__(5530)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","analytics","getStorage","getAnalytics","AuthContext","createContext","AuthProvider","_ref","children","setUserInfoToStore","useUser","_useState","useState","_useState2","_slicedToArray","user","_useState3","_useState4","loadingLogin","setLoadingLogin","useEffect","unsubscribe","onAuthStateChanged","_ref2","_asyncToGenerator","authUser","_x","apply","arguments","signUpWithEmailPassword","_ref3","email","password","createUserWithEmailAndPassword","then","userCredential","uid","firebaseId","catch","error","console","log","_x2","_x3","logOut","_ref4","signOut","_jsx","Provider","value","signInWithEmailPassword","signInWithEmailAndPassword","ActivityIndicator","AuthOpen","useContext","UserContext","UserProvider","userToken","setUserToken","userDetails","setUserDetails","_useState5","_useState6","userInfo","setUserInfo","loadUserToken","storedToken","AsyncStorage","getItem","fetchUserDetails","response","fetch","API_BASE_URL","toString","ok","userData","json","gender","image","name","phoneNumber","_id","tenantType","rentPosts","coins","subscriptionStartDate","location","phone","id","statusText","login","token","setItem","logout","_ref5","removeUserInfoFromStore","removeItem","_ref6","_ref8","_ref7","rentPost","_ref7$subscriptionSta","_ref7$location","locationMarked","existingUserInfo","JSON","parse","length","_objectSpread","stringify","TextAnimator","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","animate","toValue","undefined","animations","state","textArr","map","_","i","Animated","timing","animatedValues","duration","useNativeDriver","stagger","reverse","start","setTimeout","onFinish","content","trim","split","forEach","Value","_createClass","key","this","prevProps","_this2","setState","_this3","View","style","styles","textWrapper","word","index","_jsxs","Text","textStyle","opacity","transform","translateY","multiply","React","StyleSheet","create","flexDirection","flexWrap","justifyContent","_Dimensions$get","Dimensions","get","width","height","Authentication","_AuthOpen","formattedValue","setFormattedValue","isUserExists","setIsUserExists","screen","setScreen","_useState7","_useState8","setPhoneNumber","_useState9","_useState10","otp","setOtp","_useState11","_useState12","assignedOtp","setAssignedOtp","_useState13","_useState14","isLoading","setIsLoading","_useState15","_useState16","isTextInputFocused","setIsTextInputFocused","_useState17","_useState18","currentTextIndex","setCurrentTextIndex","animatedTexts","_useClearByFocusCell","useClearByFocusCell","setValue","_useClearByFocusCell2","getCellOnLayoutHandler","handleAnimationComplete","generateOtp","Math","floor","random","fetchUserExistsStatus","checkPhoneResponse","checkPhoneData","exists","sendOTP","postData","axios","post","headers","data","status","alert","_error$response","message","verifyOTP","handleTextInputFocus","handleTextInputBlur","LinearGradient","colors","gradient","x","y","end","lottie","Platform","OS","LottieView","source","require","autoPlay","loop","KeyboardAvoidingView","behavior","flex","keyboardVerticalOffset","ScrollView","contentContainerStyle","container","keyboardShouldPersistTaps","header","subheader","PhoneNumberInput","defaultCode","onChangeText","text","logEvent","onChangeFormattedText","placeholder","withDarkTheme","withShadow","onFocus","onBlur","size","color","TouchableOpacity","button","onPress","buttonText","iconContainer","Ionicons","CodeField","caretHidden","cellCount","rootStyle","codeFieldRoot","keyboardType","textContentType","renderCell","symbol","isFocused","onLayout","cell","focusCell","cellText","Cursor","buttonContainer","_Fragment","resendText","renderScreen","alignItems","fontSize","fontWeight","marginBottom","fontFamily","top","backgroundColor","paddingVertical","paddingHorizontal","borderRadius","resendButton","marginTop","backButton","countryPickerContainer","borderColor","borderWidth","countryPicker","resizeMode","marginLeft","marginRight","lineHeight","textAlign","position","left","zIndex","OnboardingScreen","navigation","useNavigation","handleDone","navigate","Onboarding","onDone","onSkip","DoneButtonComponent","Object","assign","_objectDestructuringEmpty","doneButton","containerStyles","pages","Lottie","title","subtitle","padding","Stack","createStackNavigator","showOnboarding","setShowOnboarding","checkIfAlreadyOnboarded","onboarded","Navigator","initialRouteName","Screen","options","headerShown","component","screenOptions","BannerWidth","bannerImage","Carousel","autoplay","autoplayTimeout","pageSize","Image","uri","renderPage","_worklet_4122753321172_init_data","code","_worklet_10469424627174_init_data","AnimatedCard","item","scale","useSharedValue","lastPress","useRef","Date","now","animatedStyles","useAnimatedStyle","_f","_closure","__initData","__workletHash","animatedImageStyles","perspective","rotateY","card","activeOpacity","current","onPressIn","withSpring","onPressOut","delayPressIn","touchable","images","adImage","adDetails","adTitle","numberOfLines","ellipsizeMode","adInfo","adPrice","price","adBedrooms","bedrooms","adList","margin","overflow","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","backfaceVisibility","borderTopLeftRadius","borderTopRightRadius","adLocation","filterButtonsContainer","filterButton","marginHorizontal","filterButtonActive","filterText","filterTextActive","_useUser","ads","setAds","banners","setBanners","refreshing","setRefreshing","bannersLoading","setBannersLoading","genderFilter","setGenderFilter","filteredAds","setFilteredAds","fetchAds","fetchBanners","handleGenderFilterChange","newFilter","bannersQuery","query","collection","fetchedBanners","getDocs","docs","doc","link","handleAdPress","ad","onRefresh","useCallback","filtered","filter","isMaleOnly","filterAds","BannerCarousel","FlatList","keyExtractor","renderItem","numColumns","refreshControl","RefreshControl","tintColor","PostAdScreen","_route$params","_route$params$ad","_route$params2","_route$params2$ad","_route$params3","_route$params3$ad","_route$params4","_route$params4$ad","_route$params5","_route$params5$ad","_route$params6","_route$params6$ad","_route$params7","_route$params7$ad","_route$params8","_route$params8$ad","_route$params9","_route$params9$ad","_route$params10","_route$params10$ad","_route$params11","_route$params11$ad","_route$params12","_route$params12$ad","route","setImages","params","setLocation","setAdTitle","adDescription","setAdDescription","setPhone","setEmail","setPrice","maxResidents","setMaxResidents","preference","setPreference","_useState19","_useState20","setIsMaleOnly","_useState21","isFurnished","_useState22","setIsFurnished","_useState23","hasAttachedBathroom","_useState24","setHasAttachedBathroom","_useState25","isBachelorsAllowed","_useState26","setIsBachelorsAllowed","_useState27","_useState28","loading","setLoading","handleImageUpload","ImagePicker","requestMediaLibraryPermissionsAsync","granted","pickerResult","launchImageLibraryAsync","mediaTypes","Images","allowsEditing","aspect","quality","multiple","cancelled","newImages","concat","_toConsumableArray","assets","uploadImagesToS3","Toast","show","type","text1","text2","s3Images","imageUri","file","RNS3","put","keyPrefix","bucket","region","accessKey","secretKey","successActionStatus","Error","s3ImageUrl","body","postResponse","push","handleSubmit","_route$params13","userId","goBack","imageContainer","heading","imageUploadButton","uploadButtonText","horizontal","showsHorizontalScrollIndicator","fieldContainer","label","RNPickerSelect","onValueChange","items","pickerSelectStyles","TextInput","input","multilineInput","multiline","stepperContainer","stepperButton","stepperButtonText","stepperValue","Switch","trackColor","false","true","submitButton","disabled","submitButtonText","bottom","minHeight","textAlignVertical","inputIOS","paddingRight","inputAndroid","domains","tenantTypeContainer","actionButton","loader","profileImage","scrollViewContent","flexGrow","modalContainer","linearGradient","modalContent","modalTitle","closeButton","right","chooseImageButton","chooseImageText","genderContainer","radioButtons","radioButton","radioButtonSelected","radioButtonText","radioButtonTextSelected","radioButtonsTenantType","radioButtonTenantType","isVisible","onDismiss","_useUser2","setName","setUserId","setGender","setTenantType","setImage","setSuggestions","setFieldsDisabled","userLocation","setUserLocation","handleGenderSelect","selectedGender","requestLocationPermission","Location","requestForegroundPermissionsAsync","getCurrentPositionAsync","updateProfileToFirebase","pic","isEdit","newDocRef","handler","updateDoc","setDoc","timestamp","serverTimestamp","updateAuthProfile","currentUser","displayName","photoURL","handleTenantTypeSelect","selectedType","handleUpdate","selectedImageUri","blob","res","apiEndpoint","method","updateButtonStyle","Modal","visible","transparent","animationType","MaterialCommunityIcons","placeholderTextColor","filteredDomains","domain","includes","maleIcon","femaleIcon","student","professionals","family","users","userLoggedIn","newUsers","_Object$entries$flat","entries","flat","_Object$entries$flat2","id1","id2","cardShadow","matchDetails","lastMessage","setLastmessage","matchedUserInfo","setMatchedUserInfo","getMatchedUserInfo","onSnapshot","generateId","orderBy","snapshot","_snapshot$docs$","_snapshot$docs$$data","tw","photoUrl","substring","matches","setMatches","where","ChatRow","SafeAreaView","ChatList","DEFAULT_LOCATION","leftContainer","selectedLocationContainer","downIcon","rightContainer","iconButton","selectedLocationText","modalView","modalGradient","modalHeader","modalHeaderText","searchContainer","searchInput","clearIcon","locationList","locationItem","locationText","tagsContainer","tag","tagText","onSettingPress","_ref$showBack","showBack","useToken","selectedLocation","setSelectedLocation","allLocations","setLocations","modalVisible","setModalVisible","searchQuery","setSearchQuery","suggestedLocations","setSuggestedLocations","topLocations","setTopLocations","fetchLocations","_response$data$locati","locations","fetchedLocations","slice","selectLocation","renderTag","edges","Icon","onRequestClose","filteredLocations","toLowerCase","Tab","createBottomTabNavigator","tabBar","borderTopWidth","addButton","addButtonText","popoverBackground","popoverContent","popoverOption","popoverOptionText","_React$useState","_React$useState2","isModalVisible","_React$useState3","_React$useState4","isUpdateModalVisible","setUpdateModalVisible","_React$useState5","_React$useState6","userProfileData","setUserProfileData","handleMyAds","toggleModal","handleUpdateProfile","handleLogout","renderCustomHeader","CustomHeader","onBackPress","tabBarOptions","activeTintColor","inactiveTintColor","showLabel","Home","tabBarIcon","focused","Chat","Pressable","UpdateProfileModal","onUpdateProfile","updatedData","_Component","Default","Component","onEdit","onDelete","onClaim","headerText","closeButtonText","textDecorationLine","deleteConfirmationContainer","deleteConfirmationText","deleteConfirmationButtons","cancelButton","cancelButtonText","confirmButton","confirmButtonText","userAds","setUserAds","selectedAd","setSelectedAd","isDeleteConfirmationVisible","setDeleteConfirmationVisible","fetchUserAds","handleEdit","handleDelete","adId","prevAds","handleClaim","FontAwesome","AdCard","amenitiesMapping","icon","flexContainer","footer","borderBottomWidth","borderBottomColor","villaImage","villaName","marginVertical","offerContainer","offerText","description","hostImage","hostName","directMessageButton","directMessageButtonText","postedByCurrentUserMessage","amenitiesContainer","amenitiesTitle","amenitiesList","amenityItem","amenityLabel","priceContainer","originalPrice","discountedPrice","bookNowButton","bookNowButtonText","flatmateRow","flatmatesSection","flatmatesGrid","flatmateCard","flatmateImage","flatmateName","flatmateOccupation","trustIcon","paddingBottom","flatmatesData","flatmates","showDirectMessageButton","setShowDirectMessageButton","isPostedByCurrentUser","userDoc","getDoc","amenity","flatmate","occupation","TimeAgo","addLocale","en","timeAgo","messageBubble","maxWidth","messageText","alignSelf","numericTimestamp","toDate","getTime","format","_message$timestamp","date2","chatHeaderContainer","chatHeaderImage","chatHeaderText","messageSuggestionContainer","messageSuggestion","messageSuggestionText","onSelectSuggestion","keyboardAvoidingView","messageInputContainer","textInput","sendButton","sendButtonText","modalCloseText","webView","messageInputContainerWeb","suggestionsContainer","loaderContainer","inputSection","flatList","flatListRef","userInfoFromAsync","setInput","messages","setMessages","isConversationStarter","setConversationStarter","combinedUid","setCombinedUid","showModal","setShowModal","webviewUrl","isWeb","fetchUserInitialDetails","firstMessage","setMatchUsers","matchDocRef","docSnapshot","_users","sanitizedUserInto","_defineProperty","usersMatched","fetchMessages","fetchedMessages","scrollFlatListToEnd","_flatListRef$current","scrollToEnd","animated","handleSendMessage","addDoc","Alert","updatedCoins","max","prevUserInfo","handleModalClose","ChatHeader","Keyboard","dismiss","ref","inverted","SenderMessage","ReceiverMessage","onContentSizeChange","MessageSuggestion","WebView","src","HomeTabNavigator","UserAds","AdDetailsScreen","Message","onAppUpdate","backdropColor","backdropOpacity","App","showUpdateModal","setShowUpdateModal","action","setAction","setFontsLoaded","Font","loadAsync","fetchAppUpdateStatus","_response$data","blockApp","NavigationContainer","AppStack","AuthStack","UpdateAppModal","onClose","Linking","canOpenURL","supported","openURL","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","amdO","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","ns","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}